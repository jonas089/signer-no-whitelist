{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar utils_1 = require(\"../internal/utils\");\n/**\n * Runs the value through a list of validators.\n * - As soon as a validation error is detected, the error is returned\n * - As soon as a validator dies unexpectedly (throws an error), we throw the same error.\n */\n\n\nfunction applyValidators(value, validators) {\n  return new Promise(function (resolve, reject) {\n    var currentIndex = 0;\n\n    var gotoNextValidator = function () {\n      currentIndex++;\n      runCurrentValidator();\n    };\n\n    var runCurrentValidator = function () {\n      if (currentIndex == validators.length) {\n        resolve(null);\n        return;\n      }\n\n      var validator = validators[currentIndex];\n      var res = validator(value); // no error\n\n      if (!res) {\n        gotoNextValidator();\n        return;\n      } // some error\n\n\n      if (!utils_1.isPromiseLike(res)) {\n        resolve(res);\n        return;\n      } // wait for validator response\n\n\n      res.then(function (msg) {\n        // no error\n        if (!msg) gotoNextValidator(); // some error\n        else resolve(msg);\n      }).catch(reject);\n    }; // kickoff\n\n\n    runCurrentValidator();\n  });\n}\n\nexports.applyValidators = applyValidators;","map":{"version":3,"sources":["/home/chef/Desktop/signer/node_modules/formstate/lib/core/types.js"],"names":["Object","defineProperty","exports","value","utils_1","require","applyValidators","validators","Promise","resolve","reject","currentIndex","gotoNextValidator","runCurrentValidator","length","validator","res","isPromiseLike","then","msg","catch"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,OAAO,GAAGC,OAAO,CAAC,mBAAD,CAArB;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,eAAT,CAAyBH,KAAzB,EAAgCI,UAAhC,EAA4C;AACxC,SAAO,IAAIC,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AAC1C,QAAIC,YAAY,GAAG,CAAnB;;AACA,QAAIC,iBAAiB,GAAG,YAAY;AAChCD,MAAAA,YAAY;AACZE,MAAAA,mBAAmB;AACtB,KAHD;;AAIA,QAAIA,mBAAmB,GAAG,YAAY;AAClC,UAAIF,YAAY,IAAIJ,UAAU,CAACO,MAA/B,EAAuC;AACnCL,QAAAA,OAAO,CAAC,IAAD,CAAP;AACA;AACH;;AACD,UAAIM,SAAS,GAAGR,UAAU,CAACI,YAAD,CAA1B;AACA,UAAIK,GAAG,GAAGD,SAAS,CAACZ,KAAD,CAAnB,CANkC,CAOlC;;AACA,UAAI,CAACa,GAAL,EAAU;AACNJ,QAAAA,iBAAiB;AACjB;AACH,OAXiC,CAYlC;;;AACA,UAAI,CAACR,OAAO,CAACa,aAAR,CAAsBD,GAAtB,CAAL,EAAiC;AAC7BP,QAAAA,OAAO,CAACO,GAAD,CAAP;AACA;AACH,OAhBiC,CAiBlC;;;AACAA,MAAAA,GAAG,CAACE,IAAJ,CAAS,UAAUC,GAAV,EAAe;AACpB;AACA,YAAI,CAACA,GAAL,EACIP,iBAAiB,GADrB,CAEA;AAFA,aAIIH,OAAO,CAACU,GAAD,CAAP;AACP,OAPD,EAOGC,KAPH,CAOSV,MAPT;AAQH,KA1BD,CAN0C,CAiC1C;;;AACAG,IAAAA,mBAAmB;AACtB,GAnCM,CAAP;AAoCH;;AACDX,OAAO,CAACI,eAAR,GAA0BA,eAA1B","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"../internal/utils\");\n/**\n * Runs the value through a list of validators.\n * - As soon as a validation error is detected, the error is returned\n * - As soon as a validator dies unexpectedly (throws an error), we throw the same error.\n */\nfunction applyValidators(value, validators) {\n    return new Promise(function (resolve, reject) {\n        var currentIndex = 0;\n        var gotoNextValidator = function () {\n            currentIndex++;\n            runCurrentValidator();\n        };\n        var runCurrentValidator = function () {\n            if (currentIndex == validators.length) {\n                resolve(null);\n                return;\n            }\n            var validator = validators[currentIndex];\n            var res = validator(value);\n            // no error\n            if (!res) {\n                gotoNextValidator();\n                return;\n            }\n            // some error\n            if (!utils_1.isPromiseLike(res)) {\n                resolve(res);\n                return;\n            }\n            // wait for validator response\n            res.then(function (msg) {\n                // no error\n                if (!msg)\n                    gotoNextValidator();\n                // some error\n                else\n                    resolve(msg);\n            }).catch(reject);\n        };\n        // kickoff\n        runCurrentValidator();\n    });\n}\nexports.applyValidators = applyValidators;\n"]},"metadata":{},"sourceType":"script"}