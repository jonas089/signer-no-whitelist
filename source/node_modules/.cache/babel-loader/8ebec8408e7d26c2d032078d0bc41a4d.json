{"ast":null,"code":"import _regeneratorRuntime from\"/home/chef/Desktop/signer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/chef/Desktop/signer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _initializerDefineProperty from\"/home/chef/Desktop/signer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";import _classCallCheck from\"/home/chef/Desktop/signer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/chef/Desktop/signer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/home/chef/Desktop/signer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/home/chef/Desktop/signer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/chef/Desktop/signer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import _applyDecoratedDescriptor from\"/home/chef/Desktop/signer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";import _initializerWarningHelper from\"/home/chef/Desktop/signer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";import _objectSpread from\"/home/chef/Desktop/signer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";var _class,_class2,_descriptor;import React from'react';import{Redirect,withRouter}from'react-router-dom';import{List,ListItem,ListItemText,IconButton,ListItemSecondaryAction,DialogTitle,DialogContent,DialogActions,Button,Snackbar,ListSubheader,Typography,Tooltip}from'@material-ui/core';import RootRef from'@material-ui/core/RootRef';import{DragDropContext,Droppable,Draggable}from'react-beautiful-dnd';import DeleteIcon from'@material-ui/icons/Delete';import EditIcon from'@material-ui/icons/Edit';import VpnKeyIcon from'@material-ui/icons/VpnKey';import FilterNoneIcon from'@material-ui/icons/FilterNone';// Used for Copy\nimport{observer,Observer}from'mobx-react';import{observable}from'mobx';import Dialog from'@material-ui/core/Dialog';import{confirm}from'./Confirmation';import copy from'copy-to-clipboard';import{GetApp}from'@material-ui/icons';import{TextFieldWithFormState}from'./Forms';import{RenameAccountFormData}from'../container/ImportAccountContainer';import Pages from'./Pages';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var getItemStyle=function getItemStyle(isDragging,draggableStyle){return _objectSpread(_objectSpread({},draggableStyle),isDragging&&{background:'rgb(235,235,235)'});};var AccountManagementPage=observer(_class=(_class2=/*#__PURE__*/function(_React$Component){_inherits(AccountManagementPage,_React$Component);var _super=_createSuper(AccountManagementPage);function AccountManagementPage(props){var _this;_classCallCheck(this,AccountManagementPage);_this=_super.call(this,props);_initializerDefineProperty(_this,\"renameAccountForm\",_descriptor,_assertThisInitialized(_this));_this.handleClickOpen=function(account){_this.setState({openDialog:true,selectedAccount:account,alias:account.alias});};_this.handleViewKey=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(accountName){var hexKey,hash;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return _this.props.accountManager.getPublicKeyHexByAlias(accountName);case 2:hexKey=_context.sent;_context.next=5;return _this.props.accountManager.getAccountHashByAlias(accountName);case 5:hash=_context.sent;_this.setState({alias:accountName,publicKeyHex:hexKey,accountHash:hash,openKeyDialog:true});case 7:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();_this.handleDownloadKeys=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(alias){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return _this.props.accountManager.downloadPemFiles(alias);case 2:return _context2.abrupt(\"return\",_context2.sent);case 3:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}();_this.handleCopyMessage=function(event,reason){if(reason==='clickaway'){return;}_this.setState({copyStatus:false});};_this.handleClose=function(){_this.renameAccountForm.resetFields();_this.setState({openDialog:false,openKeyDialog:false,selectedAccount:null});};_this.handleUpdateName=function(){var account=_this.state.selectedAccount;var alias=_this.renameAccountForm.name.$;if(account&&alias){_this.props.errorsContainer.capture(_this.props.accountManager.renameUserAccount(account.alias,alias));_this.handleClose();}};_this.onDragEnd=function(result){// dropped outside the list\nif(!result.destination){return;}_this.props.accountManager.reorderAccount(result.source.index,result.destination.index);};_this.handleClickRemove=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(name){var backedUp;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.next=2;return _this.props.accountManager.isBackedUp(name);case 2:backedUp=_context5.sent;!backedUp?confirm(/*#__PURE__*/_jsx(\"div\",{className:\"text-danger\",children:\"Back up account\"}),/*#__PURE__*/_jsxs(\"span\",{children:[\"This account has not been backed up.\",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"b\",{children:\"You will not be able to recover this account without your key.\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),\"Would you like to download the key files for \",name,\"?\"]}),'Download','Cancel',{}).then(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return _this.props.accountManager.downloadPemFiles(name);case 2:return _context3.abrupt(\"return\",_context3.sent);case 3:case\"end\":return _context3.stop();}}},_callee3);}))):confirm(/*#__PURE__*/_jsx(\"div\",{className:\"text-danger\",children:\"Remove account\"}),/*#__PURE__*/_jsxs(\"span\",{children:[\"This account will be permanently deleted. Confirm password to remove account: \",/*#__PURE__*/_jsx(\"b\",{children:name})]}),'Remove','Cancel',{requirePassword:true,requireCheckbox:true,checkboxText:'I understand I will need the key files to recover this account'}).then(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return _this.props.accountManager.removeUserAccount(name);case 2:return _context4.abrupt(\"return\",_context4.sent);case 3:case\"end\":return _context4.stop();}}},_callee4);})));case 4:case\"end\":return _context5.stop();}}},_callee5);}));return function(_x3){return _ref3.apply(this,arguments);};}();var aliases=props.accountManager.userAccounts.map(function(account){return account.alias;});_this.renameAccountForm=new RenameAccountFormData(aliases);_this.state={openDialog:false,openKeyDialog:false,selectedAccount:null,alias:null,publicKey:null,publicKeyHex:null,accountHash:null,copyStatus:false};return _this;}_createClass(AccountManagementPage,[{key:\"render\",value:function render(){var _this2=this;return!this.props.accountManager.isUnLocked||!this.props.accountManager.userAccounts[0]?/*#__PURE__*/_jsx(Redirect,{to:Pages.Home}):/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(DragDropContext,{onDragEnd:function onDragEnd(result){return _this2.onDragEnd(result);},children:/*#__PURE__*/_jsx(Droppable,{droppableId:\"droppable\",children:function children(provided,snapshot){return/*#__PURE__*/_jsx(Observer,{children:function children(){return/*#__PURE__*/ (// TODO: fix this (deprecated RootRef)\n_jsx(RootRef,{rootRef:provided.innerRef,children:/*#__PURE__*/_jsxs(List,{children:[_this2.props.accountManager.userAccounts.map(function(item,index){return/*#__PURE__*/_jsx(Draggable,{draggableId:item.alias,index:index,children:function children(provided,snapshot){return/*#__PURE__*/_jsxs(ListItem,{innerRef:provided.innerRef,ContainerProps:_objectSpread(_objectSpread(_objectSpread({},provided.draggableProps),provided.dragHandleProps),{},{style:getItemStyle(snapshot.isDragging,provided.draggableProps.style)}),children:[/*#__PURE__*/_jsx(ListItemText,{primary:item.alias}),/*#__PURE__*/_jsxs(ListItemSecondaryAction,{children:[/*#__PURE__*/_jsx(Tooltip,{title:\"Edit\",children:/*#__PURE__*/_jsx(IconButton,{\"aria-label\":\"Button will open a dialog to rename key\",edge:'end',onClick:function onClick(){_this2.handleClickOpen(item);},children:/*#__PURE__*/_jsx(EditIcon,{})})}),/*#__PURE__*/_jsx(Tooltip,{title:\"Delete\",children:/*#__PURE__*/_jsx(IconButton,{edge:'end',onClick:function onClick(){_this2.handleClickRemove(item.alias);},children:/*#__PURE__*/_jsx(DeleteIcon,{})})}),/*#__PURE__*/_jsx(Tooltip,{title:\"View\",children:/*#__PURE__*/_jsx(IconButton,{edge:'end',onClick:function onClick(){_this2.handleViewKey(item.alias);},children:/*#__PURE__*/_jsx(VpnKeyIcon,{})})}),/*#__PURE__*/_jsx(Tooltip,{title:\"Download\",children:/*#__PURE__*/_jsx(IconButton,{edge:'end',onClick:function onClick(){_this2.handleDownloadKeys(item.alias);},children:/*#__PURE__*/_jsx(GetApp,{})})})]})]});}},item.alias);}),provided.placeholder]})}));}});}})}),/*#__PURE__*/_jsx(Dialog,{open:this.state.openDialog,onClose:this.handleClose,\"aria-label\":\"Form to rename account - focus will be given to name input field\",\"aria-labelledby\":\"form-dialog-title\",children:/*#__PURE__*/_jsxs(\"form\",{children:[/*#__PURE__*/_jsx(DialogTitle,{id:\"form-dialog-title\",children:\"Rename\"}),/*#__PURE__*/_jsx(DialogContent,{children:/*#__PURE__*/_jsx(TextFieldWithFormState,{autoFocus:true,fullWidth:true,label:\"Rename account\",placeholder:\"Account alias\",id:\"rename-account\",fieldState:this.renameAccountForm.name})}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:this.handleClose,color:\"primary\",children:\"Cancel\"}),/*#__PURE__*/_jsx(Button,{type:\"submit\",onClick:this.handleUpdateName,color:\"primary\",disabled:this.renameAccountForm.submitDisabled,children:\"Update\"})]})]})}),/*#__PURE__*/_jsxs(Dialog,{fullScreen:true,open:this.state.openKeyDialog,onClose:this.handleClose,\"aria-labelledby\":\"form-dialog-title\",children:[/*#__PURE__*/_jsx(DialogTitle,{id:\"form-dialog-title\",children:\"Account Details\"}),/*#__PURE__*/_jsxs(DialogContent,{children:[/*#__PURE__*/_jsxs(List,{children:[/*#__PURE__*/_jsx(ListSubheader,{children:/*#__PURE__*/_jsx(Typography,{variant:'h6',children:this.state.alias})}),/*#__PURE__*/_jsxs(ListItem,{children:[/*#__PURE__*/_jsx(IconButton,{edge:'start',onClick:function onClick(){copy(_this2.state.publicKeyHex);_this2.setState({copyStatus:true});},children:/*#__PURE__*/_jsx(FilterNoneIcon,{})}),/*#__PURE__*/_jsx(ListItemText,{primary:\"Public Key: \".concat(this.state.publicKeyHex),style:{overflowWrap:'break-word'}})]}),/*#__PURE__*/_jsxs(ListItem,{children:[/*#__PURE__*/_jsx(IconButton,{edge:'start',onClick:function onClick(){copy(_this2.state.accountHash);_this2.setState({copyStatus:true});},children:/*#__PURE__*/_jsx(FilterNoneIcon,{})}),/*#__PURE__*/_jsx(ListItemText,{primary:\"Account Hash: \".concat(this.state.accountHash),style:{overflowWrap:'break-word'}})]})]}),/*#__PURE__*/_jsx(Snackbar,{open:this.state.copyStatus,message:\"Copied!\",autoHideDuration:1500,onClose:this.handleCopyMessage})]}),/*#__PURE__*/_jsx(DialogActions,{children:/*#__PURE__*/_jsx(Button,{onClick:this.handleClose,color:\"primary\",children:\"Close\"})})]})]});}}]);return AccountManagementPage;}(React.Component),(_descriptor=_applyDecoratedDescriptor(_class2.prototype,\"renameAccountForm\",[observable],{configurable:true,enumerable:true,writable:true,initializer:null})),_class2))||_class;export default withRouter(AccountManagementPage);","map":{"version":3,"sources":["/home/chef/Desktop/signer/src/popup/components/AccountManagementPage.tsx"],"names":["React","Redirect","withRouter","List","ListItem","ListItemText","IconButton","ListItemSecondaryAction","DialogTitle","DialogContent","DialogActions","Button","Snackbar","ListSubheader","Typography","Tooltip","RootRef","DragDropContext","Droppable","Draggable","DeleteIcon","EditIcon","VpnKeyIcon","FilterNoneIcon","observer","Observer","observable","Dialog","confirm","copy","GetApp","TextFieldWithFormState","RenameAccountFormData","Pages","getItemStyle","isDragging","draggableStyle","background","AccountManagementPage","props","handleClickOpen","account","setState","openDialog","selectedAccount","alias","handleViewKey","accountName","accountManager","getPublicKeyHexByAlias","hexKey","getAccountHashByAlias","hash","publicKeyHex","accountHash","openKeyDialog","handleDownloadKeys","downloadPemFiles","handleCopyMessage","event","reason","copyStatus","handleClose","renameAccountForm","resetFields","handleUpdateName","state","name","$","errorsContainer","capture","renameUserAccount","onDragEnd","result","destination","reorderAccount","source","index","handleClickRemove","isBackedUp","backedUp","then","requirePassword","requireCheckbox","checkboxText","removeUserAccount","aliases","userAccounts","map","publicKey","isUnLocked","Home","provided","snapshot","innerRef","item","draggableProps","dragHandleProps","style","placeholder","submitDisabled","overflowWrap","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Redirect, RouteComponentProps, withRouter } from 'react-router-dom';\nimport {\n  List,\n  ListItem,\n  ListItemText,\n  IconButton,\n  ListItemSecondaryAction,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Button,\n  Snackbar,\n  ListSubheader,\n  Typography,\n  Tooltip\n} from '@material-ui/core';\nimport RootRef from '@material-ui/core/RootRef';\nimport {\n  DragDropContext,\n  Droppable,\n  Draggable,\n  DropResult\n} from 'react-beautiful-dnd';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\nimport FilterNoneIcon from '@material-ui/icons/FilterNone'; // Used for Copy\nimport AccountManager from '../container/AccountManager';\nimport ConnectSignerContainer from '../container/ConnectSignerContainer';\nimport { observer, Observer } from 'mobx-react';\nimport { observable } from 'mobx';\nimport Dialog from '@material-ui/core/Dialog';\nimport { confirm } from './Confirmation';\nimport copy from 'copy-to-clipboard';\nimport { KeyPairWithAlias } from '../../@types/models';\nimport { CLPublicKey } from 'casper-js-sdk';\nimport { GetApp } from '@material-ui/icons';\nimport { TextFieldWithFormState } from './Forms';\nimport { RenameAccountFormData } from '../container/ImportAccountContainer';\nimport ErrorContainer from '../container/ErrorContainer';\nimport Pages from './Pages';\n\nconst getItemStyle = (isDragging: boolean, draggableStyle: any) => ({\n  // styles we need to apply on draggables\n  ...draggableStyle,\n\n  ...(isDragging && {\n    background: 'rgb(235,235,235)'\n  })\n});\n\ninterface Props extends RouteComponentProps {\n  accountManager: AccountManager;\n  connectionContainer: ConnectSignerContainer;\n  errorsContainer: ErrorContainer;\n}\n\ninterface State {\n  openDialog: boolean;\n  openKeyDialog: boolean;\n  selectedAccount: KeyPairWithAlias | null;\n  alias: string | null;\n  publicKey: CLPublicKey | null;\n  publicKeyHex: string | null;\n  accountHash: string | null;\n  copyStatus: boolean;\n}\n\n@observer\nclass AccountManagementPage extends React.Component<Props, State> {\n  @observable renameAccountForm: RenameAccountFormData;\n\n  constructor(props: Props) {\n    super(props);\n    const aliases = props.accountManager.userAccounts.map(account => {\n      return account.alias;\n    });\n    this.renameAccountForm = new RenameAccountFormData(aliases);\n    this.state = {\n      openDialog: false,\n      openKeyDialog: false,\n      selectedAccount: null,\n      alias: null,\n      publicKey: null,\n      publicKeyHex: null,\n      accountHash: null,\n      copyStatus: false\n    };\n  }\n\n  handleClickOpen = (account: KeyPairWithAlias) => {\n    this.setState({\n      openDialog: true,\n      selectedAccount: account,\n      alias: account.alias\n    });\n  };\n\n  handleViewKey = async (accountName: string) => {\n    let hexKey = await this.props.accountManager.getPublicKeyHexByAlias(\n      accountName\n    );\n    let hash = await this.props.accountManager.getAccountHashByAlias(\n      accountName\n    );\n    this.setState({\n      alias: accountName,\n      publicKeyHex: hexKey,\n      accountHash: hash,\n      openKeyDialog: true\n    });\n  };\n\n  handleDownloadKeys = async (alias: string) => {\n    return await this.props.accountManager.downloadPemFiles(alias);\n  };\n\n  handleCopyMessage = (event?: React.SyntheticEvent, reason?: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    this.setState({ copyStatus: false });\n  };\n\n  handleClose = () => {\n    this.renameAccountForm.resetFields();\n    this.setState({\n      openDialog: false,\n      openKeyDialog: false,\n      selectedAccount: null\n    });\n  };\n\n  handleUpdateName = () => {\n    let account = this.state.selectedAccount;\n    let alias = this.renameAccountForm.name.$;\n    if (account && alias) {\n      this.props.errorsContainer.capture(\n        this.props.accountManager.renameUserAccount(account.alias, alias)\n      );\n      this.handleClose();\n    }\n  };\n\n  onDragEnd = (result: DropResult) => {\n    // dropped outside the list\n    if (!result.destination) {\n      return;\n    }\n\n    this.props.accountManager.reorderAccount(\n      result.source.index,\n      result.destination.index\n    );\n  };\n\n  handleClickRemove = async (name: string) => {\n    let backedUp = await this.props.accountManager.isBackedUp(name);\n    !backedUp\n      ? confirm(\n          <div className=\"text-danger\">Back up account</div>,\n          <span>\n            This account has not been backed up.\n            <br />\n            <b>\n              You will not be able to recover this account without your key.\n            </b>\n            <br />\n            <br />\n            Would you like to download the key files for {name}?\n          </span>,\n          'Download',\n          'Cancel',\n          {}\n        ).then(\n          async () => await this.props.accountManager.downloadPemFiles(name)\n        )\n      : confirm(\n          <div className=\"text-danger\">Remove account</div>,\n          <span>\n            This account will be permanently deleted. Confirm password to remove\n            account: <b>{name}</b>\n          </span>,\n          'Remove',\n          'Cancel',\n          {\n            requirePassword: true,\n            requireCheckbox: true,\n            checkboxText:\n              'I understand I will need the key files to recover this account'\n          }\n        ).then(\n          async () => await this.props.accountManager.removeUserAccount(name)\n        );\n  };\n\n  render() {\n    return !this.props.accountManager.isUnLocked ||\n      !this.props.accountManager.userAccounts[0] ? (\n      <Redirect to={Pages.Home} />\n    ) : (\n      <React.Fragment>\n        <DragDropContext onDragEnd={result => this.onDragEnd(result)}>\n          <Droppable droppableId=\"droppable\">\n            {(provided, snapshot) => (\n              <Observer>\n                {() => (\n                  // TODO: fix this (deprecated RootRef)\n                  <RootRef rootRef={provided.innerRef}>\n                    <List>\n                      {this.props.accountManager.userAccounts.map(\n                        (item, index) => (\n                          <Draggable\n                            key={item.alias}\n                            draggableId={item.alias}\n                            index={index}\n                          >\n                            {(provided, snapshot) => (\n                              <ListItem\n                                innerRef={provided.innerRef}\n                                ContainerProps={{\n                                  ...provided.draggableProps,\n                                  ...provided.dragHandleProps,\n                                  style: getItemStyle(\n                                    snapshot.isDragging,\n                                    provided.draggableProps.style\n                                  )\n                                }}\n                              >\n                                <ListItemText primary={item.alias} />\n                                <ListItemSecondaryAction>\n                                  <Tooltip title=\"Edit\">\n                                    <IconButton\n                                      aria-label=\"Button will open a dialog to rename key\"\n                                      edge={'end'}\n                                      onClick={() => {\n                                        this.handleClickOpen(item);\n                                      }}\n                                    >\n                                      <EditIcon />\n                                    </IconButton>\n                                  </Tooltip>\n                                  <Tooltip title=\"Delete\">\n                                    <IconButton\n                                      edge={'end'}\n                                      onClick={() => {\n                                        this.handleClickRemove(item.alias);\n                                      }}\n                                    >\n                                      <DeleteIcon />\n                                    </IconButton>\n                                  </Tooltip>\n                                  <Tooltip title=\"View\">\n                                    <IconButton\n                                      edge={'end'}\n                                      onClick={() => {\n                                        this.handleViewKey(item.alias);\n                                      }}\n                                    >\n                                      <VpnKeyIcon />\n                                    </IconButton>\n                                  </Tooltip>\n                                  <Tooltip title=\"Download\">\n                                    <IconButton\n                                      edge={'end'}\n                                      onClick={() => {\n                                        this.handleDownloadKeys(item.alias);\n                                      }}\n                                    >\n                                      <GetApp />\n                                    </IconButton>\n                                  </Tooltip>\n                                </ListItemSecondaryAction>\n                              </ListItem>\n                            )}\n                          </Draggable>\n                        )\n                      )}\n                      {provided.placeholder}\n                    </List>\n                  </RootRef>\n                )}\n              </Observer>\n            )}\n          </Droppable>\n        </DragDropContext>\n        <Dialog\n          open={this.state.openDialog}\n          onClose={this.handleClose}\n          aria-label=\"Form to rename account - focus will be given to name input field\"\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <form>\n            <DialogTitle id=\"form-dialog-title\">Rename</DialogTitle>\n            <DialogContent>\n              <TextFieldWithFormState\n                autoFocus\n                fullWidth\n                label=\"Rename account\"\n                placeholder=\"Account alias\"\n                id=\"rename-account\"\n                fieldState={this.renameAccountForm.name}\n              />\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={this.handleClose} color=\"primary\">\n                Cancel\n              </Button>\n              <Button\n                type=\"submit\"\n                onClick={this.handleUpdateName}\n                color=\"primary\"\n                disabled={this.renameAccountForm.submitDisabled}\n              >\n                Update\n              </Button>\n            </DialogActions>\n          </form>\n        </Dialog>\n\n        <Dialog\n          fullScreen\n          open={this.state.openKeyDialog}\n          onClose={this.handleClose}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"form-dialog-title\">Account Details</DialogTitle>\n          <DialogContent>\n            <List>\n              <ListSubheader>\n                <Typography variant={'h6'}>{this.state.alias}</Typography>\n              </ListSubheader>\n              <ListItem>\n                <IconButton\n                  edge={'start'}\n                  onClick={() => {\n                    copy(this.state.publicKeyHex!);\n                    this.setState({ copyStatus: true });\n                  }}\n                >\n                  <FilterNoneIcon />\n                </IconButton>\n                <ListItemText\n                  primary={`Public Key: ${this.state.publicKeyHex}`}\n                  style={{ overflowWrap: 'break-word' }}\n                />\n              </ListItem>\n              <ListItem>\n                <IconButton\n                  edge={'start'}\n                  onClick={() => {\n                    copy(this.state.accountHash!);\n                    this.setState({ copyStatus: true });\n                  }}\n                >\n                  <FilterNoneIcon />\n                </IconButton>\n                <ListItemText\n                  primary={`Account Hash: ${this.state.accountHash}`}\n                  style={{ overflowWrap: 'break-word' }}\n                />\n              </ListItem>\n            </List>\n            <Snackbar\n              open={this.state.copyStatus}\n              message=\"Copied!\"\n              autoHideDuration={1500}\n              onClose={this.handleCopyMessage}\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose} color=\"primary\">\n              Close\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </React.Fragment>\n    );\n  }\n}\nexport default withRouter(AccountManagementPage);\n"]},"metadata":{},"sourceType":"module"}