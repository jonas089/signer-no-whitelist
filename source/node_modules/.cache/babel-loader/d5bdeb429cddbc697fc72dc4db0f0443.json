{"ast":null,"code":"import _regeneratorRuntime from\"/home/chef/Desktop/signer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/chef/Desktop/signer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/home/chef/Desktop/signer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";// Container for managing popup instances of the Signer.\n// Acts as an interface between the UI and the background controllers.\nvar PopupContainer=function PopupContainer(backgroundManager){var _this=this;_classCallCheck(this,PopupContainer);this.backgroundManager=backgroundManager;this.callOpenPopup=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(purposeForOpening){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return _this.backgroundManager.callOpenPopup(purposeForOpening);case 2:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();this.callClosePopup=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(signingId){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return _this.backgroundManager.callClosePopup(signingId);case 2:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}();};export{PopupContainer as default};","map":{"version":3,"sources":["/home/chef/Desktop/signer/src/popup/container/PopupContainer.ts"],"names":["PopupContainer","backgroundManager","callOpenPopup","purposeForOpening","callClosePopup","signingId"],"mappings":"+aAEA;AACA;GAEqBA,CAAAA,c,CACnB,wBAAoBC,iBAApB,CAA0D,0DAAtCA,iBAAsC,CAAtCA,iBAAsC,MAE1DC,aAF0D,0FAE1C,iBAAOC,iBAAP,wIACR,CAAA,KAAI,CAACF,iBAAL,CAAuBC,aAAvB,CAAqCC,iBAArC,CADQ,uDAF0C,oEAM1DC,cAN0D,2FAMzC,kBAAOC,SAAP,6IACT,CAAA,KAAI,CAACJ,iBAAL,CAAuBG,cAAvB,CAAsCC,SAAtC,CADS,yDANyC,iEAAE,C,QADzCL,c","sourcesContent":["import { BackgroundManager } from '../BackgroundManager';\nimport { PurposeForOpening } from '../../shared';\n// Container for managing popup instances of the Signer.\n// Acts as an interface between the UI and the background controllers.\n\nexport default class PopupContainer {\n  constructor(private backgroundManager: BackgroundManager) {}\n\n  callOpenPopup = async (purposeForOpening: PurposeForOpening) => {\n    await this.backgroundManager.callOpenPopup(purposeForOpening);\n  };\n\n  callClosePopup = async (signingId?: number) => {\n    await this.backgroundManager.callClosePopup(signingId);\n  };\n}\n"]},"metadata":{},"sourceType":"module"}