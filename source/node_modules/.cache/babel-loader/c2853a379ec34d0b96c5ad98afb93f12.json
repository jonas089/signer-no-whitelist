{"ast":null,"code":"import _initializerDefineProperty from \"/home/chef/Desktop/signer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"/home/chef/Desktop/signer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"/home/chef/Desktop/signer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _jsxFileName = \"/home/chef/Desktop/signer/src/popup/components/AccountPage.tsx\",\n    _class,\n    _class2,\n    _descriptor;\n\nimport { observer } from 'mobx-react';\nimport React from 'react';\nimport { withRouter } from 'react-router';\nimport { observable } from 'mobx';\nimport { CreateAccountFormData, ImportAccountFormData } from '../container/ImportAccountContainer';\nimport { Button, createStyles, Typography, FormControl, Box, InputLabel } from '@material-ui/core';\nimport { SelectFieldWithFormState, TextFieldWithFormState } from './Forms';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Pages from './Pages';\nimport { confirm } from './Confirmation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar method;\n\n(function (method) {\n  method[method[\"Created\"] = 0] = \"Created\";\n  method[method[\"Imported\"] = 1] = \"Imported\";\n})(method || (method = {}));\n\nconst styles = theme => createStyles({\n  root: {\n    '& .MuiTextField-root': {\n      marginTop: theme.spacing(2)\n    }\n  },\n  importButton: {\n    marginTop: theme.spacing(8)\n  }\n});\n\nlet AccountPage = observer(_class = (_class2 = class AccountPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _initializerDefineProperty(this, \"accountForm\", _descriptor, this);\n\n    if (props.action === 'Import') {\n      this.accountForm = new ImportAccountFormData(props.errors);\n    } else {\n      this.accountForm = new CreateAccountFormData(props.errors);\n    }\n\n    this.state = {\n      keyDownloadEnabled: false,\n      algoAnchorEl: null,\n      revealSecretKey: false\n    };\n  }\n\n  async onCreateAccount() {\n    const formData = this.accountForm;\n\n    if (formData.submitDisabled) {\n      return;\n    }\n\n    const names = this.props.accountManager.userAccounts.map(account => account.alias);\n\n    if (names.includes(formData.name.$)) {\n      return this.props.errors.capture(Promise.reject(new Error(`An account with name '${formData.name.$}' already exists.`)));\n    }\n\n    await this._onSubmit(method.Created);\n    this.downloadKeys(formData.name.$);\n  }\n\n  downloadKeys(alias) {\n    confirm( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-danger\",\n      children: \"Download your key\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), 'To proceed, download and save your key securely. Without it, you will not be able to recover access to your account.', 'Download', 'Cancel').then( // OK\n    async () => {\n      try {\n        await this.props.accountManager.downloadPemFiles(alias);\n      } catch (error) {\n        return this.props.errors.capture(Promise.reject(new Error('Failed to download keys')));\n      }\n    }, // CANCEL\n    async () => {\n      try {\n        await this.props.accountManager.removeUserAccount(alias);\n\n        if (this.props.connectionContainer.connectionRequested && !this.props.accountManager.userAccounts.length) {\n          await this.props.connectionContainer.resetConnectionRequest();\n        }\n      } catch (error) {\n        return this.props.errors.capture(Promise.reject(new Error(`Failed to delete keypair: ${alias}`)));\n      }\n    });\n  }\n\n  onImportAccount() {\n    if (this.accountForm.submitDisabled) {\n      return;\n    }\n\n    this._onSubmit(method.Imported);\n  }\n\n  async _onSubmit(source) {\n    await this.props.accountManager.importUserAccount(this.accountForm.name.$, this.accountForm.secretKeyBase64.value, this.accountForm.algorithm.$, source === method.Created ? false : true);\n    this.props.history.push(Pages.Home);\n    this.props.history.replace(Pages.Home);\n  }\n\n  renderImportForm() {\n    const form = this.accountForm;\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: this.props.classes.root,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        id: \"continuous-slider\",\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"Import from Secret Key File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          display: 'flex',\n          flexDirection: 'row',\n          alignItems: 'center',\n          m: 1,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            id: 'private-key-uploader',\n            variant: \"contained\",\n            style: {\n              backgroundColor: 'var(--cspr-dark-blue)',\n              color: 'white'\n            },\n            component: \"label\",\n            children: [\"Upload\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              style: {\n                display: 'none'\n              },\n              onChange: e => form.handleFileSelect(e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            ml: 1,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              component: 'span',\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                fontSize: 12,\n                children: form.file ? form.file.name : 'No file selected'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextFieldWithFormState, {\n        fullWidth: true,\n        label: \"Name imported account\",\n        placeholder: \"Human Readable Alias\",\n        id: \"import-name\",\n        fieldState: this.accountForm.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        fullWidth: true,\n        className: this.props.classes.importButton,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          disabled: this.accountForm.submitDisabled,\n          color: \"primary\",\n          variant: 'contained',\n          onClick: () => {\n            this.onImportAccount();\n          },\n          children: \"Import\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this);\n  }\n\n  renderCreateForm() {\n    const formData = this.accountForm;\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: this.props.classes.root,\n      onSubmit: e => {\n        e.preventDefault();\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        style: {\n          marginTop: '-1em'\n        },\n        children: \"Create Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextFieldWithFormState, {\n        \"aria-label\": \"Input for setting name of key\",\n        autoFocus: true,\n        fullWidth: true,\n        label: \"Name\",\n        placeholder: \"Human Readable Alias\",\n        id: \"import-name\",\n        fieldState: this.accountForm.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        fullWidth: true,\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          id: \"algo-select-lbl\",\n          children: \"Algorithm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SelectFieldWithFormState, {\n          fullWidth: true,\n          labelId: \"algo-select-lbl\",\n          fieldState: this.accountForm.algorithm,\n          selectItems: [{\n            value: 'ed25519',\n            text: 'ED25519'\n          }, {\n            value: 'secp256k1',\n            text: 'SECP256k1'\n          }]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextFieldWithFormState, {\n        fullWidth: true,\n        InputProps: {\n          readOnly: true,\n          disabled: true\n        },\n        label: \"Public Key\",\n        id: \"create-public-key\",\n        value: formData.publicKey.$ ? formData.publicKey.$ : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        fullWidth: true,\n        margin: 'normal',\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: \"mt-5\",\n          disabled: this.accountForm.submitDisabled,\n          color: \"primary\",\n          variant: \"contained\",\n          onClick: () => {\n            this.onCreateAccount();\n          },\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-5 mb-4\",\n        children: this.accountForm instanceof CreateAccountFormData ? this.renderCreateForm() : this.renderImportForm()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }, this);\n  }\n\n}, (_descriptor = _applyDecoratedDescriptor(_class2.prototype, \"accountForm\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class2)) || _class;\n\nexport default withStyles(styles, {\n  withTheme: true\n})(withRouter(AccountPage));","map":{"version":3,"sources":["/home/chef/Desktop/signer/src/popup/components/AccountPage.tsx"],"names":["observer","React","withRouter","observable","CreateAccountFormData","ImportAccountFormData","Button","createStyles","Typography","FormControl","Box","InputLabel","SelectFieldWithFormState","TextFieldWithFormState","withStyles","Pages","confirm","method","styles","theme","root","marginTop","spacing","importButton","AccountPage","Component","constructor","props","action","accountForm","errors","state","keyDownloadEnabled","algoAnchorEl","revealSecretKey","onCreateAccount","formData","submitDisabled","names","accountManager","userAccounts","map","account","alias","includes","name","$","capture","Promise","reject","Error","_onSubmit","Created","downloadKeys","then","downloadPemFiles","error","removeUserAccount","connectionContainer","connectionRequested","length","resetConnectionRequest","onImportAccount","Imported","source","importUserAccount","secretKeyBase64","value","algorithm","history","push","Home","replace","renderImportForm","form","classes","backgroundColor","color","display","e","handleFileSelect","file","renderCreateForm","preventDefault","text","readOnly","disabled","publicKey","render","withTheme"],"mappings":"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","sourcesContent":["import { observer } from 'mobx-react';\nimport React from 'react';\nimport AccountManager from '../container/AccountManager';\nimport { RouteComponentProps, withRouter } from 'react-router';\nimport { observable } from 'mobx';\nimport {\n  CreateAccountFormData,\n  ImportAccountFormData\n} from '../container/ImportAccountContainer';\nimport ErrorContainer from '../container/ErrorContainer';\nimport {\n  Button,\n  createStyles,\n  Theme,\n  Typography,\n  WithStyles,\n  FormControl,\n  Box,\n  InputLabel\n} from '@material-ui/core';\nimport { SelectFieldWithFormState, TextFieldWithFormState } from './Forms';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Pages from './Pages';\nimport { confirm } from './Confirmation';\nimport ConnectSignerContainer from '../container/ConnectSignerContainer';\n\nenum method {\n  'Created',\n  'Imported'\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      '& .MuiTextField-root': {\n        marginTop: theme.spacing(2)\n      }\n    },\n    importButton: {\n      marginTop: theme.spacing(8)\n    }\n  });\n\ninterface Props extends RouteComponentProps, WithStyles<typeof styles> {\n  accountManager: AccountManager;\n  errors: ErrorContainer;\n  action: 'Import' | 'Create';\n  connectionContainer: ConnectSignerContainer;\n}\n\ninterface State {\n  keyDownloadEnabled: boolean;\n  algoAnchorEl: HTMLButtonElement | null;\n  revealSecretKey: boolean;\n}\n\n@observer\nclass AccountPage extends React.Component<Props, State> {\n  @observable accountForm: ImportAccountFormData | CreateAccountFormData;\n\n  constructor(props: Props) {\n    super(props);\n    if (props.action === 'Import') {\n      this.accountForm = new ImportAccountFormData(props.errors);\n    } else {\n      this.accountForm = new CreateAccountFormData(props.errors);\n    }\n    this.state = {\n      keyDownloadEnabled: false,\n      algoAnchorEl: null,\n      revealSecretKey: false\n    };\n  }\n\n  async onCreateAccount() {\n    const formData = this.accountForm as CreateAccountFormData;\n    if (formData.submitDisabled) {\n      return;\n    }\n\n    const names = this.props.accountManager.userAccounts.map(\n      account => account.alias\n    );\n    if (names.includes(formData.name.$)) {\n      return this.props.errors.capture(\n        Promise.reject(\n          new Error(`An account with name '${formData.name.$}' already exists.`)\n        )\n      );\n    }\n\n    await this._onSubmit(method.Created);\n    this.downloadKeys(formData.name.$);\n  }\n\n  downloadKeys(alias: string) {\n    confirm(\n      <div className=\"text-danger\">Download your key</div>,\n      'To proceed, download and save your key securely. Without it, you will not be able to recover access to your account.',\n      'Download',\n      'Cancel'\n    ).then(\n      // OK\n      async () => {\n        try {\n          await this.props.accountManager.downloadPemFiles(alias);\n        } catch (error) {\n          return this.props.errors.capture(\n            Promise.reject(new Error('Failed to download keys'))\n          );\n        }\n      },\n      // CANCEL\n      async () => {\n        try {\n          await this.props.accountManager.removeUserAccount(alias);\n          if (\n            this.props.connectionContainer.connectionRequested &&\n            !this.props.accountManager.userAccounts.length\n          ) {\n            await this.props.connectionContainer.resetConnectionRequest();\n          }\n        } catch (error) {\n          return this.props.errors.capture(\n            Promise.reject(new Error(`Failed to delete keypair: ${alias}`))\n          );\n        }\n      }\n    );\n  }\n\n  onImportAccount() {\n    if (this.accountForm.submitDisabled) {\n      return;\n    }\n    this._onSubmit(method.Imported);\n  }\n\n  async _onSubmit(source: method) {\n    await this.props.accountManager.importUserAccount(\n      this.accountForm.name.$,\n      this.accountForm.secretKeyBase64.value,\n      this.accountForm.algorithm.$,\n      source === method.Created ? false : true\n    );\n    this.props.history.push(Pages.Home);\n    this.props.history.replace(Pages.Home);\n  }\n\n  renderImportForm() {\n    const form = this.accountForm as ImportAccountFormData;\n    return (\n      <form className={this.props.classes.root}>\n        <Typography id=\"continuous-slider\" variant=\"h6\" gutterBottom>\n          Import from Secret Key File\n        </Typography>\n        <FormControl>\n          <Box\n            display={'flex'}\n            flexDirection={'row'}\n            alignItems={'center'}\n            m={1}\n          >\n            <Button\n              id={'private-key-uploader'}\n              variant=\"contained\"\n              style={{\n                backgroundColor: 'var(--cspr-dark-blue)',\n                color: 'white'\n              }}\n              component=\"label\"\n            >\n              Upload\n              <input\n                type=\"file\"\n                style={{ display: 'none' }}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                  form.handleFileSelect(e)\n                }\n              />\n            </Button>\n            <Box ml={1}>\n              <Typography component={'span'}>\n                <Box fontSize={12}>\n                  {form.file ? form.file.name : 'No file selected'}\n                </Box>\n              </Typography>\n            </Box>\n          </Box>\n        </FormControl>\n        <TextFieldWithFormState\n          fullWidth\n          label=\"Name imported account\"\n          placeholder=\"Human Readable Alias\"\n          id=\"import-name\"\n          fieldState={this.accountForm.name}\n        />\n        <FormControl fullWidth className={this.props.classes.importButton}>\n          <Button\n            type=\"submit\"\n            disabled={this.accountForm.submitDisabled}\n            color=\"primary\"\n            variant={'contained'}\n            onClick={() => {\n              this.onImportAccount();\n            }}\n          >\n            Import\n          </Button>\n        </FormControl>\n      </form>\n    );\n  }\n\n  renderCreateForm() {\n    const formData = this.accountForm as CreateAccountFormData;\n    return (\n      <form\n        className={this.props.classes.root}\n        onSubmit={e => {\n          e.preventDefault();\n        }}\n      >\n        <Typography variant=\"h6\" style={{ marginTop: '-1em' }}>\n          Create Account\n        </Typography>\n        <TextFieldWithFormState\n          aria-label=\"Input for setting name of key\"\n          autoFocus\n          fullWidth\n          label=\"Name\"\n          placeholder=\"Human Readable Alias\"\n          id=\"import-name\"\n          fieldState={this.accountForm.name}\n        />\n        <FormControl fullWidth>\n          <InputLabel id=\"algo-select-lbl\">Algorithm</InputLabel>\n          <SelectFieldWithFormState\n            fullWidth\n            labelId=\"algo-select-lbl\"\n            fieldState={this.accountForm.algorithm}\n            selectItems={[\n              { value: 'ed25519', text: 'ED25519' },\n              { value: 'secp256k1', text: 'SECP256k1' }\n            ]}\n          />\n        </FormControl>\n        <TextFieldWithFormState\n          fullWidth\n          InputProps={{ readOnly: true, disabled: true }}\n          label=\"Public Key\"\n          id=\"create-public-key\"\n          value={formData.publicKey.$ ? formData.publicKey.$ : ''}\n        />\n        <FormControl fullWidth margin={'normal'}>\n          <Button\n            type=\"submit\"\n            className=\"mt-5\"\n            disabled={this.accountForm.submitDisabled}\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={() => {\n              this.onCreateAccount();\n            }}\n          >\n            Create\n          </Button>\n        </FormControl>\n      </form>\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"mt-5 mb-4\">\n          {this.accountForm instanceof CreateAccountFormData\n            ? this.renderCreateForm()\n            : this.renderImportForm()}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(withRouter(AccountPage));\n"]},"metadata":{},"sourceType":"module"}