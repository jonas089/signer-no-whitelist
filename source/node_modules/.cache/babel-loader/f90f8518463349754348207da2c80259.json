{"ast":null,"code":"import owasp from'owasp-password-strength-test';owasp.tests.required.push(function(password){var passwordString=password.toString();if(passwordString.match(/correct\\s*horse\\s*battery\\s*staple/i)!==null){return'Use your imagination not the example!';}});export var valueRequired=function valueRequired(val){return!val&&'Value required';};export var valuesMatch=function valuesMatch(val1,val2){return!(val1===val2)&&'Passwords must match';};export var isAlgorithm=function isAlgorithm(val){return!(val==='ed25519'||val==='secp256k1')&&'Invalid Algorithm';};export var fieldSubmittable=function fieldSubmittable(val){return val.hasBeenValidated&&!val.hasError;};export var minNameLength=function minNameLength(val){return!(val.length>2)&&'Invalid name - too short';};export var humanReadable=function humanReadable(val){// Accept any alphanumeric (also underscores)\nvar humanReadableRegex=/^[A-Za-zÀ-ÖØ-öø-ÿœ0-9_]+$/;return!val.match(humanReadableRegex)&&'Invalid name - only use A-Z, a-z, 0-9 and _';};export var strongPassword=function strongPassword(val){var result=owasp.test(val);return!result.strong&&result.errors[0];};export var uniqueAlias=function uniqueAlias(val,accounts){var unique=!accounts.some(function(alias){return alias===val;});return!unique&&'This alias is already in use';};","map":{"version":3,"sources":["/home/chef/Desktop/signer/src/lib/FormValidator.ts"],"names":["owasp","tests","required","push","password","passwordString","toString","match","valueRequired","val","valuesMatch","val1","val2","isAlgorithm","fieldSubmittable","hasBeenValidated","hasError","minNameLength","length","humanReadable","humanReadableRegex","strongPassword","result","test","strong","errors","uniqueAlias","accounts","unique","some","alias"],"mappings":"AACA,MAAOA,CAAAA,KAAP,KAAkB,8BAAlB,CAEAA,KAAK,CAACC,KAAN,CAAYC,QAAZ,CAAqBC,IAArB,CAA0B,SAACC,QAAD,CAAsB,CAC9C,GAAMC,CAAAA,cAAc,CAAGD,QAAQ,CAACE,QAAT,EAAvB,CACA,GAAID,cAAc,CAACE,KAAf,CAAqB,qCAArB,IAAgE,IAApE,CAA0E,CACxE,MAAO,uCAAP,CACD,CACF,CALD,EAOA,MAAO,IAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,GAAD,QAAiB,CAACA,GAAD,EAAQ,gBAAzB,EAAtB,CAEP,MAAO,IAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,IAAD,CAAeC,IAAf,QACzB,EAAED,IAAI,GAAKC,IAAX,GAAoB,sBADK,EAApB,CAGP,MAAO,IAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACJ,GAAD,QACzB,EAAEA,GAAG,GAAK,SAAR,EAAqBA,GAAG,GAAK,WAA/B,GAA+C,mBADtB,EAApB,CAGP,MAAO,IAAMK,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACL,GAAD,CAA6B,CAC3D,MAAOA,CAAAA,GAAG,CAACM,gBAAJ,EAAwB,CAACN,GAAG,CAACO,QAApC,CACD,CAFM,CAIP,MAAO,IAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACR,GAAD,CAAiB,CAC5C,MAAO,EAAEA,GAAG,CAACS,MAAJ,CAAa,CAAf,GAAqB,0BAA5B,CACD,CAFM,CAIP,MAAO,IAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACV,GAAD,CAAiB,CAC5C;AACA,GAAMW,CAAAA,kBAAkB,CAAG,2BAA3B,CACA,MACE,CAACX,GAAG,CAACF,KAAJ,CAAUa,kBAAV,CAAD,EACA,6CAFF,CAID,CAPM,CASP,MAAO,IAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACZ,GAAD,CAAiB,CAC7C,GAAMa,CAAAA,MAAM,CAAGtB,KAAK,CAACuB,IAAN,CAAWd,GAAX,CAAf,CACA,MAAO,CAACa,MAAM,CAACE,MAAR,EAAkBF,MAAM,CAACG,MAAP,CAAc,CAAd,CAAzB,CACD,CAHM,CAKP,MAAO,IAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACjB,GAAD,CAAckB,QAAd,CAAqC,CAC9D,GAAMC,CAAAA,MAAM,CAAG,CAACD,QAAQ,CAACE,IAAT,CAAc,SAAAC,KAAK,CAAI,CACrC,MAAOA,CAAAA,KAAK,GAAKrB,GAAjB,CACD,CAFe,CAAhB,CAGA,MAAO,CAACmB,MAAD,EAAW,8BAAlB,CACD,CALM","sourcesContent":["import { FieldState } from 'formstate';\nimport owasp from 'owasp-password-strength-test';\n\nowasp.tests.required.push((password: string) => {\n  const passwordString = password.toString() as String;\n  if (passwordString.match(/correct\\s*horse\\s*battery\\s*staple/i) !== null) {\n    return 'Use your imagination not the example!';\n  }\n});\n\nexport const valueRequired = (val: string) => !val && 'Value required';\n\nexport const valuesMatch = (val1: string, val2: string) =>\n  !(val1 === val2) && 'Passwords must match';\n\nexport const isAlgorithm = (val: string) =>\n  !(val === 'ed25519' || val === 'secp256k1') && 'Invalid Algorithm';\n\nexport const fieldSubmittable = (val: FieldState<string>) => {\n  return val.hasBeenValidated && !val.hasError;\n};\n\nexport const minNameLength = (val: string) => {\n  return !(val.length > 2) && 'Invalid name - too short';\n};\n\nexport const humanReadable = (val: string) => {\n  // Accept any alphanumeric (also underscores)\n  const humanReadableRegex = /^[A-Za-zÀ-ÖØ-öø-ÿœ0-9_]+$/;\n  return (\n    !val.match(humanReadableRegex) &&\n    'Invalid name - only use A-Z, a-z, 0-9 and _'\n  );\n};\n\nexport const strongPassword = (val: string) => {\n  const result = owasp.test(val);\n  return !result.strong && result.errors[0];\n};\n\nexport const uniqueAlias = (val: string, accounts: string[]) => {\n  const unique = !accounts.some(alias => {\n    return alias === val;\n  });\n  return !unique && 'This alias is already in use';\n};\n"]},"metadata":{},"sourceType":"module"}