{"ast":null,"code":"import _regeneratorRuntime from\"/home/chef/Desktop/signer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/chef/Desktop/signer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/home/chef/Desktop/signer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/chef/Desktop/signer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/chef/Desktop/signer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/chef/Desktop/signer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";var _class;import React from'react';import logo from'../img/CasperLabs_Logo_Favicon_RGB_50px.png';import{Button,createStyles,FormControl,Typography,withStyles,Grid,Popover,IconButton}from'@material-ui/core';import AddCircleIcon from'@material-ui/icons/AddCircle';import NotInterestedIcon from'@material-ui/icons/NotInterested';import HelpIcon from'@material-ui/icons/Help';import{Link,Redirect}from'react-router-dom';import{observer}from'mobx-react';import Pages from'./Pages';import{confirm}from'./Confirmation';import{withRouter}from'react-router';import{TextFieldWithFormState}from'./Forms';import{SignMessagePage}from'./SignMessagePage';import{PurposeForOpening}from'../../shared';/* eslint-disable jsx-a11y/anchor-is-valid */import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var styles=function styles(theme){return createStyles({margin:{marginTop:'20px'},alignCenter:{textAlign:'center'},unlockButton:{backgroundColor:'var(--cspr-dark-blue)',color:'white','&$disabled':{backgroundColor:'white',color:'grey'}},disabled:{},lockout:{position:'absolute',top:0,right:0,left:0,bottom:0,background:'linear-gradient(30deg, var(--cspr-dark-blue) 50%, var(--cspr-red) 100%)',padding:'2em',display:'flex',flexDirection:'column',justifyContent:'center',alignItems:'center',color:'snow',textAlign:'center','& > *':{marginBottom:'1rem'},'& > :nth-child(2)':{fontSize:'1.2rem'}}});};var Home=observer(_class=/*#__PURE__*/function(_React$Component){_inherits(Home,_React$Component);var _super=_createSuper(Home);function Home(props){var _this;_classCallCheck(this,Home);_this=_super.call(this,props);_this.state={remainingMins:_this.props.accountManager.remainingMins,helpAnchorEl:null};return _this;}// NOT USING THIS JUST NOW - BUT LEFT IT HERE IN CASE WE COME BACK TO USE THIS KIND OF METHOD\n//\n// componentDidMount() {\n//   setTimeout(() => this.sessionTimeout(), 0.2 * 60 * 1000);\n// }\n// sessionTimeout() {\n//   confirm(\n//     'Are you there?',\n//     'Your session is about to lock, would you like to keep it open?',\n//     'Keep open',\n//     'Lock',\n//     { unmountAfter: 1000 }\n//   ).then(\n//     () => {\n//       console.log('Keep open');\n//       // Keep open - ask again in another X minutes\n//       setTimeout(() => this.sessionTimeout(), 0.2 * 60 * 1000);\n//     },\n//     () => {\n//       console.log('Lock');\n//       // Lock\n//       this.props.authContainer.lock();\n//     }\n//   );\n// }\n_createClass(Home,[{key:\"componentDidUpdate\",value:function componentDidUpdate(){if(this.props.accountManager.isLockedOut){this.props.errors.dismissLast();this.props.homeContainer.homeForm.$.setPasswordField.reset();}}},{key:\"renderCreateNewVault\",value:function renderCreateNewVault(){var _this2=this;var showPasswordHelp=function showPasswordHelp(event){_this2.setState({helpAnchorEl:event.currentTarget});};var helpOpen=Boolean(showPasswordHelp);var helpId=helpOpen?'password-help':undefined;var closePasswordHelp=function closePasswordHelp(){_this2.setState({helpAnchorEl:null});};return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:4,direction:'column',justify:'flex-start',alignItems:'center',children:[/*#__PURE__*/_jsxs(Grid,{item:true,className:this.props.classes.alignCenter,children:[/*#__PURE__*/_jsx(\"img\",{src:logo,alt:\"logo\",width:80}),/*#__PURE__*/_jsx(Typography,{variant:'h6',align:'center',children:\"New Vault\"}),/*#__PURE__*/_jsx(Typography,{children:\"Please set a password for your vault. You will need it later to unlock it so keep it safe.\"})]}),/*#__PURE__*/_jsx(Grid,{item:true,container:true,children:/*#__PURE__*/_jsxs(\"form\",{style:{textAlign:'center',width:'100%'},onSubmit:function onSubmit(e){return e.preventDefault();},children:[/*#__PURE__*/_jsx(FormControl,{style:{width:'80%',float:'left'},children:/*#__PURE__*/_jsx(TextFieldWithFormState,{autoFocus:true,fieldState:this.props.homeContainer.homeForm.$.setPasswordField,required:true,label:'Set Password',type:'password'})}),/*#__PURE__*/_jsx(IconButton,{onClick:showPasswordHelp,style:{float:'right',transform:'translateY(.3em)'},children:/*#__PURE__*/_jsx(HelpIcon,{})}),this.state.helpAnchorEl&&/*#__PURE__*/_jsx(Popover,{id:helpId,open:helpOpen,anchorEl:this.state.helpAnchorEl,onClose:closePasswordHelp,anchorOrigin:{vertical:'top',horizontal:'right'},transformOrigin:{vertical:'bottom',horizontal:'right'},children:/*#__PURE__*/_jsxs(Typography,{component:'summary',style:{padding:'1.4em',backgroundColor:'var(--cspr-dark-blue)',color:'white'},children:[\"For a password of min. length 10 please include at least one of each of the following:\",/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"li\",{children:\"lowercase letter\"}),/*#__PURE__*/_jsx(\"li\",{children:\"UPPERCASE letter\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Number\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Special character\"})]}),\"Or you can enter a >20 char passphrase if you would prefer e.g. 'correct horse battery staple'\"]})}),this.props.homeContainer.homeForm.$.setPasswordField.hasBeenValidated&&!this.props.homeContainer.homeForm.$.setPasswordField.hasError&&/*#__PURE__*/_jsx(FormControl,{style:{width:'80%',float:'left'},children:/*#__PURE__*/_jsx(TextFieldWithFormState,{fieldState:this.props.homeContainer.homeForm.$.confirmPasswordField,required:true,label:'Confirm Password',type:'password'})}),/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",className:\"text-danger\",children:this.props.homeContainer.homeForm.showFormError&&this.props.homeContainer.homeForm.formError}),/*#__PURE__*/_jsx(FormControl,{fullWidth:true,className:this.props.classes.margin,children:/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"contained\",color:\"primary\",disabled:this.props.homeContainer.createVaultDisabled,onClick:/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var password;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:password=_this2.props.homeContainer.homeForm.$.setPasswordField.$;_context.next=3;return _this2.props.accountManager.createNewVault(password);case 3:_this2.props.homeContainer.homeForm.$.setPasswordField.reset();_this2.props.homeContainer.homeForm.$.confirmPasswordField.reset();case 5:case\"end\":return _context.stop();}}},_callee);})),children:\"Create Vault\"})})]})})]})});}},{key:\"renderAccountLists\",value:function renderAccountLists(){var _this3=this;return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:4,direction:'column',justify:'flex-start',alignItems:'center',children:[this.props.accountManager.userAccounts.length>0?/*#__PURE__*/_jsxs(Grid,{item:true,className:this.props.classes.alignCenter,children:[/*#__PURE__*/_jsx(\"img\",{src:logo,alt:\"logo\",width:120}),this.props.accountManager.userAccounts.length>1?/*#__PURE__*/_jsxs(Typography,{variant:'h6',align:'center',children:[\"You have \",this.props.accountManager.userAccounts.length,' ',\"account keys\"]}):/*#__PURE__*/_jsxs(Typography,{variant:'h6',align:'center',children:[\"You have \",this.props.accountManager.userAccounts.length,' ',\"account key\"]}),this.props.accountManager.activeUserAccount&&/*#__PURE__*/_jsxs(Typography,{variant:'h6',align:'center',children:[\"Active key:\",' ',/*#__PURE__*/_jsx(\"span\",{style:{wordBreak:'break-all'},children:this.props.accountManager.activeUserAccount.alias})]})]}):/*#__PURE__*/_jsxs(Grid,{item:true,className:this.props.classes.alignCenter,children:[/*#__PURE__*/_jsx(AddCircleIcon,{style:{color:'#e24c2c',fontSize:'4rem'}}),/*#__PURE__*/_jsx(Typography,{variant:'h5',align:'center',children:\"Please create an account to get started\"})]}),/*#__PURE__*/_jsxs(Grid,{item:true,children:[/*#__PURE__*/_jsx(FormControl,{fullWidth:true,className:this.props.classes.margin,children:/*#__PURE__*/_jsx(Button,{\"aria-label\":\"This will open a new window to import a key to your vault\",component:Link,variant:\"contained\",color:\"primary\",onClick:function onClick(){return _this3.props.popupContainer.callOpenPopup(PurposeForOpening.ImportAccount);},to:Pages.ImportAccount,style:{backgroundColor:'#fff',color:'var(--cspr-dark-blue)'},children:\"Import Account\"})}),/*#__PURE__*/_jsx(FormControl,{fullWidth:true,className:this.props.classes.margin,children:/*#__PURE__*/_jsx(Button,{\"aria-label\":\"This will open a form to create an account - focus will be given to the input field for key name\",component:Link,variant:\"contained\",color:\"primary\",to:Pages.CreateAccount,style:{backgroundColor:'#fff',color:'var(--cspr-dark-blue)'},children:\"Create Account\"})})]})]})});}},{key:\"resetVaultOnClick\",value:function resetVaultOnClick(){var _this4=this;confirm(/*#__PURE__*/_jsx(\"div\",{className:\"text-danger\",children:\"Reset Vault\"}),'Resetting vault will permanently delete all accounts. You must have key files backed up if you want to recover them in the future.','Reset','Cancel',{requireCheckbox:true,checkboxText:'I have read and understand the above.'}).then(function(){_this4.props.accountManager.resetVault();_this4.props.errors.dismissLast();_this4.props.homeContainer.homeForm.$.setPasswordField.reset();});}},{key:\"tryUnlock\",value:function(){var _tryUnlock=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var password;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:password=this.props.homeContainer.homeForm.$.unlockPasswordField.$;_context2.prev=1;_context2.next=4;return this.props.accountManager.unlock(password);case 4:this.props.homeContainer.homeForm.$.unlockPasswordField.reset();this.props.errors.dismissLast();_context2.next=11;break;case 8:_context2.prev=8;_context2.t0=_context2[\"catch\"](1);this.props.homeContainer.homeForm.$.unlockPasswordField.setError(_context2.t0.message);case 11:case\"end\":return _context2.stop();}}},_callee2,this,[[1,8]]);}));function tryUnlock(){return _tryUnlock.apply(this,arguments);}return tryUnlock;}()},{key:\"renderUnlock\",value:function renderUnlock(){var _this5=this;return/*#__PURE__*/_jsx(\"form\",{onSubmit:function onSubmit(e){e.preventDefault();},children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:4,direction:'column',justify:'flex-start',alignItems:'center',children:[/*#__PURE__*/_jsxs(Grid,{item:true,className:this.props.classes.alignCenter,children:[/*#__PURE__*/_jsx(\"img\",{src:logo,alt:\"logo\",width:120}),/*#__PURE__*/_jsx(Typography,{variant:'h4',align:'center',children:\"Unlock Vault\"})]}),/*#__PURE__*/_jsx(Grid,{item:true,container:true,children:/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:'center'},children:[/*#__PURE__*/_jsx(FormControl,{fullWidth:true,children:/*#__PURE__*/_jsx(TextFieldWithFormState,{\"aria-label\":\"Enter password for vault\",autoFocus:true,fieldState:this.props.homeContainer.homeForm.$.unlockPasswordField,required:true,id:'unlock-password',label:'Password',type:'password'})}),this.props.accountManager.remainingUnlockAttempts<5&&/*#__PURE__*/_jsx(FormControl,{fullWidth:true,style:{marginTop:'.5rem'},children:/*#__PURE__*/_jsxs(Typography,{variant:'subtitle1',children:[\"Attempts remaining:\",' ',this.props.accountManager.remainingUnlockAttempts]})}),/*#__PURE__*/_jsx(FormControl,{fullWidth:true,className:this.props.classes.margin,children:/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"contained\",color:\"primary\",classes:{root:this.props.classes.unlockButton,disabled:this.props.classes.disabled},disabled:this.props.homeContainer.unlockDisabled,onClick:/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return _this5.tryUnlock();case 2:return _context3.abrupt(\"return\",_context3.sent);case 3:case\"end\":return _context3.stop();}}},_callee3);})),children:\"Unlock\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"reset-vault\",children:/*#__PURE__*/_jsx(\"a\",{\"aria-label\":\"Reset vault - this will open a confirmation before erasing keys\",href:\"#\",className:\"text-danger\",id:\"reset-link\",onClick:function onClick(){return _this5.resetVaultOnClick();},children:\"Reset Vault?\"})})]})})]})});}},{key:\"renderLockedOut\",value:function renderLockedOut(){if(this.props.accountManager.isLockedOut&&!this.props.accountManager.lockoutTimerStarted){// 5 minute timer before resetting lockout\nthis.props.accountManager.startLockoutTimer(this.props.accountManager.timerDuration);}return/*#__PURE__*/_jsxs(\"div\",{className:this.props.classes.lockout,children:[/*#__PURE__*/_jsx(NotInterestedIcon,{style:{fontSize:'5.5rem'}}),/*#__PURE__*/_jsx(Typography,{variant:'body1',children:\"Your vault has been temporarily locked out due to too many incorrect password attempts.\"}),/*#__PURE__*/_jsxs(Typography,{variant:'h6',children:[\"Please try again in\",' ',Math.round(this.props.accountManager.remainingMins),\" minute\",this.props.accountManager.remainingMins<=1?'.':'s.']})]});}},{key:\"render\",value:function render(){if(this.props.accountManager.hasCreatedVault){if(this.props.accountManager.isUnLocked){if(!this.props.connectionContainer.connectionStatus&&this.props.connectionContainer.connectionRequested){// Not connected and there is a request to connect\nif(this.props.accountManager.userAccounts.length<1){// Don't prompt for connection if there are no accounts\nreturn this.renderAccountLists();}else{return/*#__PURE__*/_jsx(Redirect,{to:Pages.ConnectSigner});}}else{if(this.props.signingContainer.deployToSign){return/*#__PURE__*/_jsx(Redirect,{to:Pages.SignDeploy});}else if(this.props.signingContainer.messageToSign){return SignMessagePage(this.props.signingContainer,this.props.popupContainer);}else{return this.renderAccountLists();}}}else{if(this.props.accountManager.isLockedOut){return this.renderLockedOut();}else{return this.renderUnlock();}}}else{return this.renderCreateNewVault();}}// Nicer way to handle the rendering however this currently breaks some flows\n// leaving here for me to implement in next release.\n// render() {\n//   return this.props.authContainer.hasCreatedVault ? (\n//     this.props.authContainer.isUnLocked ? (\n//       !this.props.connectionContainer.connectionStatus &&\n//       this.props.connectionContainer.connectionRequested ? (\n//         this.props.authContainer.userAccounts.length > 1 ? (\n//           this.renderAccountLists()\n//         ) : (\n//           <Redirect to={Pages.ConnectSigner} />\n//         )\n//       ) : this.props.authContainer.unsignedDeploys.length > 0 ? (\n//         <Redirect to={Pages.SignMessage} />\n//       ) : (\n//         this.renderAccountLists()\n//       )\n//     ) : this.props.authContainer.isLockedOut ? (\n//       this.renderLockedOut()\n//     ) : (\n//       this.renderUnlock()\n//     )\n//   ) : (\n//     this.renderCreateNewVault()\n//   );\n// }\n}]);return Home;}(React.Component))||_class;export default withStyles(styles,{withTheme:true})(withRouter(Home));","map":{"version":3,"sources":["/home/chef/Desktop/signer/src/popup/components/Home.tsx"],"names":["React","logo","Button","createStyles","FormControl","Typography","withStyles","Grid","Popover","IconButton","AddCircleIcon","NotInterestedIcon","HelpIcon","Link","Redirect","observer","Pages","confirm","withRouter","TextFieldWithFormState","SignMessagePage","PurposeForOpening","styles","theme","margin","marginTop","alignCenter","textAlign","unlockButton","backgroundColor","color","disabled","lockout","position","top","right","left","bottom","background","padding","display","flexDirection","justifyContent","alignItems","marginBottom","fontSize","Home","props","state","remainingMins","accountManager","helpAnchorEl","isLockedOut","errors","dismissLast","homeContainer","homeForm","$","setPasswordField","reset","showPasswordHelp","event","setState","currentTarget","helpOpen","Boolean","helpId","undefined","closePasswordHelp","classes","width","e","preventDefault","float","transform","vertical","horizontal","hasBeenValidated","hasError","confirmPasswordField","showFormError","formError","createVaultDisabled","password","createNewVault","userAccounts","length","activeUserAccount","wordBreak","alias","popupContainer","callOpenPopup","ImportAccount","CreateAccount","requireCheckbox","checkboxText","then","resetVault","unlockPasswordField","unlock","setError","message","remainingUnlockAttempts","root","unlockDisabled","tryUnlock","resetVaultOnClick","lockoutTimerStarted","startLockoutTimer","timerDuration","Math","round","hasCreatedVault","isUnLocked","connectionContainer","connectionStatus","connectionRequested","renderAccountLists","ConnectSigner","signingContainer","deployToSign","SignDeploy","messageToSign","renderLockedOut","renderUnlock","renderCreateNewVault","Component","withTheme"],"mappings":"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","sourcesContent":["import React from 'react';\nimport logo from '../img/CasperLabs_Logo_Favicon_RGB_50px.png';\nimport {\n  Button,\n  createStyles,\n  FormControl,\n  Theme,\n  WithStyles,\n  Typography,\n  withStyles,\n  Grid,\n  Popover,\n  IconButton\n} from '@material-ui/core';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\nimport HelpIcon from '@material-ui/icons/Help';\nimport { Link, Redirect } from 'react-router-dom';\nimport AccountManager from '../container/AccountManager';\nimport PopupContainer from '../container/PopupContainer';\nimport { HomeContainer } from '../container/HomeContainer';\nimport ConnectSignerContainer from '../container/ConnectSignerContainer';\nimport ErrorContainer from '../container/ErrorContainer';\nimport { observer } from 'mobx-react';\nimport Pages from './Pages';\nimport { confirm } from './Confirmation';\nimport { RouteComponentProps, withRouter } from 'react-router';\nimport { TextFieldWithFormState } from './Forms';\nimport SigningContainer from '../container/SigningContainer';\nimport { SignMessagePage } from './SignMessagePage';\nimport { PurposeForOpening } from '../../shared';\n\n/* eslint-disable jsx-a11y/anchor-is-valid */\nconst styles = (theme: Theme) =>\n  createStyles({\n    margin: {\n      marginTop: '20px'\n    },\n    alignCenter: {\n      textAlign: 'center'\n    },\n    unlockButton: {\n      backgroundColor: 'var(--cspr-dark-blue)',\n      color: 'white',\n      '&$disabled': {\n        backgroundColor: 'white',\n        color: 'grey'\n      }\n    },\n    disabled: {},\n    lockout: {\n      position: 'absolute',\n      top: 0,\n      right: 0,\n      left: 0,\n      bottom: 0,\n      background:\n        'linear-gradient(30deg, var(--cspr-dark-blue) 50%, var(--cspr-red) 100%)',\n      padding: '2em',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center',\n      color: 'snow',\n      textAlign: 'center',\n      '& > *': {\n        marginBottom: '1rem'\n      },\n      '& > :nth-child(2)': {\n        fontSize: '1.2rem'\n      }\n    }\n  });\n\ninterface Props extends RouteComponentProps, WithStyles<typeof styles> {\n  accountManager: AccountManager;\n  homeContainer: HomeContainer;\n  connectionContainer: ConnectSignerContainer;\n  signingContainer: SigningContainer;\n  popupContainer: PopupContainer;\n  errors: ErrorContainer;\n}\n\n@observer\nclass Home extends React.Component<\n  Props,\n  { remainingMins: number; helpAnchorEl: HTMLButtonElement | null }\n> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      remainingMins: this.props.accountManager.remainingMins,\n      helpAnchorEl: null\n    };\n  }\n  // NOT USING THIS JUST NOW - BUT LEFT IT HERE IN CASE WE COME BACK TO USE THIS KIND OF METHOD\n  //\n  // componentDidMount() {\n  //   setTimeout(() => this.sessionTimeout(), 0.2 * 60 * 1000);\n  // }\n\n  // sessionTimeout() {\n  //   confirm(\n  //     'Are you there?',\n  //     'Your session is about to lock, would you like to keep it open?',\n  //     'Keep open',\n  //     'Lock',\n  //     { unmountAfter: 1000 }\n  //   ).then(\n  //     () => {\n  //       console.log('Keep open');\n  //       // Keep open - ask again in another X minutes\n  //       setTimeout(() => this.sessionTimeout(), 0.2 * 60 * 1000);\n  //     },\n  //     () => {\n  //       console.log('Lock');\n  //       // Lock\n  //       this.props.authContainer.lock();\n  //     }\n  //   );\n  // }\n\n  componentDidUpdate() {\n    if (this.props.accountManager.isLockedOut) {\n      this.props.errors.dismissLast();\n      this.props.homeContainer.homeForm.$.setPasswordField.reset();\n    }\n  }\n\n  renderCreateNewVault() {\n    const showPasswordHelp = (event: React.MouseEvent<HTMLButtonElement>) => {\n      this.setState({ helpAnchorEl: event.currentTarget });\n    };\n    const helpOpen = Boolean(showPasswordHelp);\n    const helpId = helpOpen ? 'password-help' : undefined;\n    const closePasswordHelp = () => {\n      this.setState({ helpAnchorEl: null });\n    };\n    return (\n      <div>\n        <Grid\n          container\n          spacing={4}\n          direction={'column'}\n          justify={'flex-start'}\n          alignItems={'center'}\n        >\n          <Grid item className={this.props.classes.alignCenter}>\n            <img src={logo} alt=\"logo\" width={80} />\n            <Typography variant={'h6'} align={'center'}>\n              New Vault\n            </Typography>\n            <Typography>\n              Please set a password for your vault. You will need it later to\n              unlock it so keep it safe.\n            </Typography>\n          </Grid>\n\n          <Grid item container>\n            <form\n              style={{ textAlign: 'center', width: '100%' }}\n              onSubmit={e => e.preventDefault()}\n            >\n              <FormControl style={{ width: '80%', float: 'left' }}>\n                <TextFieldWithFormState\n                  autoFocus\n                  fieldState={\n                    this.props.homeContainer.homeForm.$.setPasswordField\n                  }\n                  required\n                  label={'Set Password'}\n                  type={'password'}\n                />\n              </FormControl>\n              <IconButton\n                onClick={showPasswordHelp}\n                style={{\n                  float: 'right',\n                  transform: 'translateY(.3em)'\n                }}\n              >\n                <HelpIcon />\n              </IconButton>\n              {this.state.helpAnchorEl && (\n                <Popover\n                  id={helpId}\n                  open={helpOpen}\n                  anchorEl={this.state.helpAnchorEl}\n                  onClose={closePasswordHelp}\n                  anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right'\n                  }}\n                  transformOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                  }}\n                >\n                  <Typography\n                    component={'summary'}\n                    style={{\n                      padding: '1.4em',\n                      backgroundColor: 'var(--cspr-dark-blue)',\n                      color: 'white'\n                    }}\n                  >\n                    For a password of min. length 10 please include at least one\n                    of each of the following:\n                    <ul>\n                      <li>lowercase letter</li>\n                      <li>UPPERCASE letter</li>\n                      <li>Number</li>\n                      <li>Special character</li>\n                    </ul>\n                    Or you can enter a &gt;20 char passphrase if you would\n                    prefer e.g. 'correct horse battery staple'\n                  </Typography>\n                </Popover>\n              )}\n              {this.props.homeContainer.homeForm.$.setPasswordField\n                .hasBeenValidated &&\n                !this.props.homeContainer.homeForm.$.setPasswordField\n                  .hasError && (\n                  <FormControl style={{ width: '80%', float: 'left' }}>\n                    <TextFieldWithFormState\n                      fieldState={\n                        this.props.homeContainer.homeForm.$.confirmPasswordField\n                      }\n                      required\n                      label={'Confirm Password'}\n                      type={'password'}\n                    />\n                  </FormControl>\n                )}\n              <Typography variant=\"subtitle2\" className=\"text-danger\">\n                {this.props.homeContainer.homeForm.showFormError &&\n                  this.props.homeContainer.homeForm.formError}\n              </Typography>\n              <FormControl fullWidth className={this.props.classes.margin}>\n                <Button\n                  type=\"submit\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                  disabled={this.props.homeContainer.createVaultDisabled}\n                  onClick={async () => {\n                    const password =\n                      this.props.homeContainer.homeForm.$.setPasswordField.$;\n                    await this.props.accountManager.createNewVault(password);\n                    this.props.homeContainer.homeForm.$.setPasswordField.reset();\n                    this.props.homeContainer.homeForm.$.confirmPasswordField.reset();\n                  }}\n                >\n                  Create Vault\n                </Button>\n              </FormControl>\n            </form>\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n\n  renderAccountLists() {\n    return (\n      <div>\n        <Grid\n          container\n          spacing={4}\n          direction={'column'}\n          justify={'flex-start'}\n          alignItems={'center'}\n        >\n          {this.props.accountManager.userAccounts.length > 0 ? (\n            <Grid item className={this.props.classes.alignCenter}>\n              <img src={logo} alt=\"logo\" width={120} />\n              {this.props.accountManager.userAccounts.length > 1 ? (\n                <Typography variant={'h6'} align={'center'}>\n                  You have {this.props.accountManager.userAccounts.length}{' '}\n                  account keys\n                </Typography>\n              ) : (\n                <Typography variant={'h6'} align={'center'}>\n                  You have {this.props.accountManager.userAccounts.length}{' '}\n                  account key\n                </Typography>\n              )}\n              {this.props.accountManager.activeUserAccount && (\n                <Typography variant={'h6'} align={'center'}>\n                  Active key:{' '}\n                  <span style={{ wordBreak: 'break-all' }}>\n                    {this.props.accountManager.activeUserAccount.alias}\n                  </span>\n                </Typography>\n              )}\n            </Grid>\n          ) : (\n            <Grid item className={this.props.classes.alignCenter}>\n              <AddCircleIcon style={{ color: '#e24c2c', fontSize: '4rem' }} />\n              <Typography variant={'h5'} align={'center'}>\n                Please create an account to get started\n              </Typography>\n            </Grid>\n          )}\n\n          <Grid item>\n            <FormControl fullWidth className={this.props.classes.margin}>\n              <Button\n                aria-label=\"This will open a new window to import a key to your vault\"\n                component={Link}\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() =>\n                  this.props.popupContainer.callOpenPopup(\n                    PurposeForOpening.ImportAccount\n                  )\n                }\n                to={Pages.ImportAccount}\n                style={{\n                  backgroundColor: '#fff',\n                  color: 'var(--cspr-dark-blue)'\n                }}\n              >\n                Import Account\n              </Button>\n            </FormControl>\n            <FormControl fullWidth className={this.props.classes.margin}>\n              <Button\n                aria-label=\"This will open a form to create an account - focus will be given to the input field for key name\"\n                component={Link}\n                variant=\"contained\"\n                color=\"primary\"\n                to={Pages.CreateAccount}\n                style={{\n                  backgroundColor: '#fff',\n                  color: 'var(--cspr-dark-blue)'\n                }}\n              >\n                Create Account\n              </Button>\n            </FormControl>\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n\n  resetVaultOnClick() {\n    confirm(\n      <div className=\"text-danger\">Reset Vault</div>,\n      'Resetting vault will permanently delete all accounts. You must have key files backed up if you want to recover them in the future.',\n      'Reset',\n      'Cancel',\n      {\n        requireCheckbox: true,\n        checkboxText: 'I have read and understand the above.'\n      }\n    ).then(() => {\n      this.props.accountManager.resetVault();\n      this.props.errors.dismissLast();\n      this.props.homeContainer.homeForm.$.setPasswordField.reset();\n    });\n  }\n\n  async tryUnlock() {\n    let password = this.props.homeContainer.homeForm.$.unlockPasswordField.$;\n    try {\n      await this.props.accountManager.unlock(password);\n      this.props.homeContainer.homeForm.$.unlockPasswordField.reset();\n      this.props.errors.dismissLast();\n    } catch (e) {\n      this.props.homeContainer.homeForm.$.unlockPasswordField.setError(\n        (e as Error).message\n      );\n    }\n  }\n\n  renderUnlock() {\n    return (\n      <form\n        onSubmit={e => {\n          e.preventDefault();\n        }}\n      >\n        <Grid\n          container\n          spacing={4}\n          direction={'column'}\n          justify={'flex-start'}\n          alignItems={'center'}\n        >\n          <Grid item className={this.props.classes.alignCenter}>\n            <img src={logo} alt=\"logo\" width={120} />\n            <Typography variant={'h4'} align={'center'}>\n              Unlock Vault\n            </Typography>\n          </Grid>\n\n          <Grid item container>\n            <div style={{ textAlign: 'center' }}>\n              <FormControl fullWidth>\n                <TextFieldWithFormState\n                  aria-label=\"Enter password for vault\"\n                  autoFocus={true}\n                  fieldState={\n                    this.props.homeContainer.homeForm.$.unlockPasswordField\n                  }\n                  required\n                  id={'unlock-password'}\n                  label={'Password'}\n                  type={'password'}\n                />\n              </FormControl>\n              {this.props.accountManager.remainingUnlockAttempts < 5 && (\n                <FormControl fullWidth style={{ marginTop: '.5rem' }}>\n                  <Typography variant={'subtitle1'}>\n                    Attempts remaining:{' '}\n                    {this.props.accountManager.remainingUnlockAttempts}\n                  </Typography>\n                </FormControl>\n              )}\n              <FormControl fullWidth className={this.props.classes.margin}>\n                <Button\n                  type=\"submit\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                  classes={{\n                    root: this.props.classes.unlockButton,\n                    disabled: this.props.classes.disabled\n                  }}\n                  disabled={this.props.homeContainer.unlockDisabled}\n                  onClick={async () => await this.tryUnlock()}\n                >\n                  Unlock\n                </Button>\n              </FormControl>\n              <div className=\"reset-vault\">\n                <a\n                  aria-label=\"Reset vault - this will open a confirmation before erasing keys\"\n                  href=\"#\"\n                  className=\"text-danger\"\n                  id=\"reset-link\"\n                  onClick={() => this.resetVaultOnClick()}\n                >\n                  Reset Vault?\n                </a>\n              </div>\n            </div>\n          </Grid>\n        </Grid>\n      </form>\n    );\n  }\n\n  renderLockedOut() {\n    if (\n      this.props.accountManager.isLockedOut &&\n      !this.props.accountManager.lockoutTimerStarted\n    ) {\n      // 5 minute timer before resetting lockout\n      this.props.accountManager.startLockoutTimer(\n        this.props.accountManager.timerDuration\n      );\n    }\n    return (\n      <div className={this.props.classes.lockout}>\n        <NotInterestedIcon style={{ fontSize: '5.5rem' }} />\n        <Typography variant={'body1'}>\n          Your vault has been temporarily locked out due to too many incorrect\n          password attempts.\n        </Typography>\n        <Typography variant={'h6'}>\n          Please try again in{' '}\n          {Math.round(this.props.accountManager.remainingMins)} minute\n          {this.props.accountManager.remainingMins <= 1 ? '.' : 's.'}\n        </Typography>\n      </div>\n    );\n  }\n\n  render() {\n    if (this.props.accountManager.hasCreatedVault) {\n      if (this.props.accountManager.isUnLocked) {\n        if (\n          !this.props.connectionContainer.connectionStatus &&\n          this.props.connectionContainer.connectionRequested\n        ) {\n          // Not connected and there is a request to connect\n          if (this.props.accountManager.userAccounts.length < 1) {\n            // Don't prompt for connection if there are no accounts\n            return this.renderAccountLists();\n          } else {\n            return <Redirect to={Pages.ConnectSigner} />;\n          }\n        } else {\n          if (this.props.signingContainer.deployToSign) {\n            return <Redirect to={Pages.SignDeploy} />;\n          } else if (this.props.signingContainer.messageToSign) {\n            return SignMessagePage(\n              this.props.signingContainer,\n              this.props.popupContainer\n            );\n          } else {\n            return this.renderAccountLists();\n          }\n        }\n      } else {\n        if (this.props.accountManager.isLockedOut) {\n          return this.renderLockedOut();\n        } else {\n          return this.renderUnlock();\n        }\n      }\n    } else {\n      return this.renderCreateNewVault();\n    }\n  }\n  // Nicer way to handle the rendering however this currently breaks some flows\n  // leaving here for me to implement in next release.\n  // render() {\n  //   return this.props.authContainer.hasCreatedVault ? (\n  //     this.props.authContainer.isUnLocked ? (\n  //       !this.props.connectionContainer.connectionStatus &&\n  //       this.props.connectionContainer.connectionRequested ? (\n  //         this.props.authContainer.userAccounts.length > 1 ? (\n  //           this.renderAccountLists()\n  //         ) : (\n  //           <Redirect to={Pages.ConnectSigner} />\n  //         )\n  //       ) : this.props.authContainer.unsignedDeploys.length > 0 ? (\n  //         <Redirect to={Pages.SignMessage} />\n  //       ) : (\n  //         this.renderAccountLists()\n  //       )\n  //     ) : this.props.authContainer.isLockedOut ? (\n  //       this.renderLockedOut()\n  //     ) : (\n  //       this.renderUnlock()\n  //     )\n  //   ) : (\n  //     this.renderCreateNewVault()\n  //   );\n  // }\n}\n\nexport default withStyles(styles, { withTheme: true })(withRouter(Home));\n"]},"metadata":{},"sourceType":"module"}