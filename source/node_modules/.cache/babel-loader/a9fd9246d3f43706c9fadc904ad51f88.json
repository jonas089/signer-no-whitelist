{"ast":null,"code":"import _initializerDefineProperty from \"/home/chef/Desktop/signer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"/home/chef/Desktop/signer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"/home/chef/Desktop/signer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _descriptor10, _descriptor11, _descriptor12, _descriptor13, _descriptor14;\n\nimport { observable, computed } from 'mobx';\nexport let AppState = (_class = class AppState {\n  constructor() {\n    _initializerDefineProperty(this, \"isIntegratedSite\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"isUnlocked\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"isTimeToSecurityCheckup\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"unlockAttempts\", _descriptor4, this);\n\n    _initializerDefineProperty(this, \"lockoutTimerStarted\", _descriptor5, this);\n\n    this.timerDurationMins = 5;\n\n    _initializerDefineProperty(this, \"remainingMins\", _descriptor6, this);\n\n    _initializerDefineProperty(this, \"idleTimeoutMins\", _descriptor7, this);\n\n    _initializerDefineProperty(this, \"currentTab\", _descriptor8, this);\n\n    _initializerDefineProperty(this, \"connectionRequested\", _descriptor9, this);\n\n    _initializerDefineProperty(this, \"connectedSites\", _descriptor10, this);\n\n    _initializerDefineProperty(this, \"hasCreatedVault\", _descriptor11, this);\n\n    _initializerDefineProperty(this, \"activeUserAccount\", _descriptor12, this);\n\n    this.userAccounts = observable.array([], {\n      deep: true\n    });\n\n    _initializerDefineProperty(this, \"unsignedDeploys\", _descriptor13, this);\n\n    _initializerDefineProperty(this, \"unsignedMessages\", _descriptor14, this);\n  }\n\n  get lockedOut() {\n    return this.unlockAttempts === 0;\n  }\n\n  get connectionStatus() {\n    const url = this.currentTab && this.currentTab.url;\n\n    if (url) {\n      return this.connectedSites.some(site => site.url === url && site.isConnected);\n    }\n\n    return false;\n  }\n\n}, (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"isIntegratedSite\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return false;\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"isUnlocked\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return false;\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"isTimeToSecurityCheckup\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return false;\n  }\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"unlockAttempts\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return 5;\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"lockedOut\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"lockedOut\"), _class.prototype), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, \"lockoutTimerStarted\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return false;\n  }\n}), _descriptor6 = _applyDecoratedDescriptor(_class.prototype, \"remainingMins\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return this.timerDurationMins;\n  }\n}), _descriptor7 = _applyDecoratedDescriptor(_class.prototype, \"idleTimeoutMins\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return 2;\n  }\n}), _descriptor8 = _applyDecoratedDescriptor(_class.prototype, \"currentTab\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return null;\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"connectionStatus\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"connectionStatus\"), _class.prototype), _descriptor9 = _applyDecoratedDescriptor(_class.prototype, \"connectionRequested\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return false;\n  }\n}), _descriptor10 = _applyDecoratedDescriptor(_class.prototype, \"connectedSites\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return observable.array([], {\n      deep: true\n    });\n  }\n}), _descriptor11 = _applyDecoratedDescriptor(_class.prototype, \"hasCreatedVault\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return false;\n  }\n}), _descriptor12 = _applyDecoratedDescriptor(_class.prototype, \"activeUserAccount\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return null;\n  }\n}), _descriptor13 = _applyDecoratedDescriptor(_class.prototype, \"unsignedDeploys\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return observable.array([], {\n      deep: true\n    });\n  }\n}), _descriptor14 = _applyDecoratedDescriptor(_class.prototype, \"unsignedMessages\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return observable.array([], {\n      deep: true\n    });\n  }\n})), _class);","map":{"version":3,"sources":["/home/chef/Desktop/signer/src/lib/MemStore.ts"],"names":["observable","computed","AppState","timerDurationMins","userAccounts","array","deep","lockedOut","unlockAttempts","connectionStatus","url","currentTab","connectedSites","some","site","isConnected"],"mappings":";;;;;;AAAA,SAA2BA,UAA3B,EAAuCC,QAAvC,QAAuD,MAAvD;AAKA,WAAaC,QAAb,aAAO,MAAMA,QAAN,CAAe;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,SASpBC,iBAToB,GASQ,CATR;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,SA6BpBC,YA7BoB,GA8BlBJ,UAAU,CAACK,KAAX,CAAmC,EAAnC,EAAuC;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAvC,CA9BkB;;AAAA;;AAAA;AAAA;;AAKG,MAATC,SAAS,GAAY;AACjC,WAAO,KAAKC,cAAL,KAAwB,CAA/B;AACD;;AAM6B,MAAhBC,gBAAgB,GAAY;AACxC,UAAMC,GAAG,GAAG,KAAKC,UAAL,IAAmB,KAAKA,UAAL,CAAgBD,GAA/C;;AACA,QAAIA,GAAJ,EAAS;AACP,aAAO,KAAKE,cAAL,CAAoBC,IAApB,CACLC,IAAI,IAAIA,IAAI,CAACJ,GAAL,KAAaA,GAAb,IAAoBI,IAAI,CAACC,WAD5B,CAAP;AAGD;;AACD,WAAO,KAAP;AACD;;AArBmB,CAAtB,kFACGf,UADH;AAAA;AAAA;AAAA;AAAA;AAAA,WAC0C,KAD1C;AAAA;AAAA,8EAEGA,UAFH;AAAA;AAAA;AAAA;AAAA;AAAA,WAEoC,KAFpC;AAAA;AAAA,2FAGGA,UAHH;AAAA;AAAA;AAAA;AAAA;AAAA,WAGiD,KAHjD;AAAA;AAAA,kFAIGA,UAJH;AAAA;AAAA;AAAA;AAAA;AAAA,WAIuC,CAJvC;AAAA;AAAA,8DAKGC,QALH,yKAQGD,UARH;AAAA;AAAA;AAAA;AAAA;AAAA,WAQ6C,KAR7C;AAAA;AAAA,iFAUGA,UAVH;AAAA;AAAA;AAAA;AAAA;AAAA,WAUsC,KAAKG,iBAV3C;AAAA;AAAA,mFAWGH,UAXH;AAAA;AAAA;AAAA;AAAA;AAAA,WAWwC,CAXxC;AAAA;AAAA,8EAYGA,UAZH;AAAA;AAAA;AAAA;AAAA;AAAA,WAYuC,IAZvC;AAAA;AAAA,qEAaGC,QAbH,gLAsBGD,UAtBH;AAAA;AAAA;AAAA;AAAA;AAAA,WAsB6C,KAtB7C;AAAA;AAAA,mFAuBGA,UAvBH;AAAA;AAAA;AAAA;AAAA;AAAA,WAuBuDA,UAAU,CAACK,KAAX,CACnD,EADmD,EAEnD;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAFmD,CAvBvD;AAAA;AAAA,oFA2BGN,UA3BH;AAAA;AAAA;AAAA;AAAA;AAAA,WA2ByC,KA3BzC;AAAA;AAAA,sFA4BGA,UA5BH;AAAA;AAAA;AAAA;AAAA;AAAA,WA4B2D,IA5B3D;AAAA;AAAA,oFA+BGA,UA/BH;AAAA;AAAA;AAAA;AAAA;AAAA,WAgCIA,UAAU,CAACK,KAAX,CAA+B,EAA/B,EAAmC;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAnC,CAhCJ;AAAA;AAAA,qFAiCGN,UAjCH;AAAA;AAAA;AAAA;AAAA;AAAA,WAkCIA,UAAU,CAACK,KAAX,CAAgC,EAAhC,EAAoC;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAApC,CAlCJ;AAAA;AAAA","sourcesContent":["import { IObservableArray, observable, computed } from 'mobx';\nimport { Tab, Site } from '../background/ConnectionManager';\nimport { KeyPairWithAlias } from '../@types/models';\nimport { deployWithID, messageWithID } from '../background/SigningManager';\n\nexport class AppState {\n  @observable isIntegratedSite: boolean = false;\n  @observable isUnlocked: boolean = false;\n  @observable isTimeToSecurityCheckup: boolean = false;\n  @observable unlockAttempts: number = 5;\n  @computed get lockedOut(): boolean {\n    return this.unlockAttempts === 0;\n  }\n  @observable lockoutTimerStarted: boolean = false;\n  timerDurationMins: number = 5;\n  @observable remainingMins: number = this.timerDurationMins;\n  @observable idleTimeoutMins: number = 2;\n  @observable currentTab: Tab | null = null;\n  @computed get connectionStatus(): boolean {\n    const url = this.currentTab && this.currentTab.url;\n    if (url) {\n      return this.connectedSites.some(\n        site => site.url === url && site.isConnected\n      );\n    }\n    return false;\n  }\n  @observable connectionRequested: boolean = false;\n  @observable connectedSites: IObservableArray<Site> = observable.array<Site>(\n    [],\n    { deep: true }\n  );\n  @observable hasCreatedVault: boolean = false;\n  @observable activeUserAccount: KeyPairWithAlias | null = null;\n  userAccounts: IObservableArray<KeyPairWithAlias> =\n    observable.array<KeyPairWithAlias>([], { deep: true });\n  @observable unsignedDeploys: IObservableArray<deployWithID> =\n    observable.array<deployWithID>([], { deep: true });\n  @observable unsignedMessages: IObservableArray<messageWithID> =\n    observable.array<messageWithID>([], { deep: true });\n}\n"]},"metadata":{},"sourceType":"module"}