{"ast":null,"code":"var _jsxFileName = \"/home/chef/Desktop/signer/src/popup/components/ConnectedSitesPage.tsx\";\nimport React from 'react';\nimport { List, ListItem, ListItemText, IconButton, ListItemSecondaryAction, Tooltip, Typography } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport { observer } from 'mobx-react';\nimport { confirm } from './Confirmation';\nimport { Redirect } from 'react-router-dom';\nimport Pages from './Pages';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ConnectedSitesPage = observer(_c = props => {\n  const handleClickRemove = name => {\n    confirm( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-danger\",\n      children: \"Remove Site\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), 'Are you sure you want to disconnect and remove this site?').then(() => props.connectionContainer.removeSite(name));\n  };\n\n  return !props.accountManager.isUnLocked ? /*#__PURE__*/_jsxDEV(Redirect, {\n    to: Pages.Home\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this) : props.connectionContainer.connectedSites[0] ? /*#__PURE__*/_jsxDEV(List, {\n    children: props.connectionContainer.connectedSites.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(ListItem, {\n        children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: item.url\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n          children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n            title: \"Delete\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              edge: 'end',\n              onClick: () => {\n                handleClickRemove(item.url);\n              },\n              children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this), item.isConnected ? /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: \"Disconnect\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              edge: 'end',\n              onClick: () => {\n                props.connectionContainer.disconnectFromSite(item.url);\n              },\n              children: /*#__PURE__*/_jsxDEV(CheckCircleIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: \"Connect\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              edge: 'end',\n              onClick: () => {\n                props.connectionContainer.connectToSite(item.url);\n              },\n              children: /*#__PURE__*/_jsxDEV(CheckCircleOutlineIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n    variant: \"h5\",\n    children: \"No Saved Sites\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n});\n_c2 = ConnectedSitesPage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ConnectedSitesPage$observer\");\n$RefreshReg$(_c2, \"ConnectedSitesPage\");","map":{"version":3,"sources":["/home/chef/Desktop/signer/src/popup/components/ConnectedSitesPage.tsx"],"names":["React","List","ListItem","ListItemText","IconButton","ListItemSecondaryAction","Tooltip","Typography","DeleteIcon","CheckCircleIcon","CheckCircleOutlineIcon","observer","confirm","Redirect","Pages","ConnectedSitesPage","props","handleClickRemove","name","then","connectionContainer","removeSite","accountManager","isUnLocked","Home","connectedSites","map","item","index","url","isConnected","disconnectFromSite","connectToSite"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  List,\n  ListItem,\n  ListItemText,\n  IconButton,\n  ListItemSecondaryAction,\n  Tooltip,\n  Typography\n} from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport ConnectSignerContainer from '../container/ConnectSignerContainer';\nimport AccountManager from '../container/AccountManager';\nimport { observer } from 'mobx-react';\nimport { confirm } from './Confirmation';\nimport { Redirect } from 'react-router-dom';\nimport Pages from './Pages';\n\ninterface Props {\n  connectionContainer: ConnectSignerContainer;\n  accountManager: AccountManager;\n}\n\nexport const ConnectedSitesPage = observer((props: Props) => {\n  const handleClickRemove = (name: string) => {\n    confirm(\n      <div className=\"text-danger\">Remove Site</div>,\n      'Are you sure you want to disconnect and remove this site?'\n    ).then(() => props.connectionContainer.removeSite(name));\n  };\n\n  return !props.accountManager.isUnLocked ? (\n    <Redirect to={Pages.Home} />\n  ) : props.connectionContainer.connectedSites[0] ? (\n    <List>\n      {props.connectionContainer.connectedSites.map((item, index) => {\n        return (\n          <ListItem>\n            <ListItemText primary={item.url} />\n            <ListItemSecondaryAction>\n              <Tooltip title=\"Delete\">\n                <IconButton\n                  edge={'end'}\n                  onClick={() => {\n                    handleClickRemove(item.url);\n                  }}\n                >\n                  <DeleteIcon />\n                </IconButton>\n              </Tooltip>\n              {item.isConnected ? (\n                <Tooltip title=\"Disconnect\">\n                  <IconButton\n                    edge={'end'}\n                    onClick={() => {\n                      props.connectionContainer.disconnectFromSite(item.url);\n                    }}\n                  >\n                    <CheckCircleIcon />\n                  </IconButton>\n                </Tooltip>\n              ) : (\n                <Tooltip title=\"Connect\">\n                  <IconButton\n                    edge={'end'}\n                    onClick={() => {\n                      props.connectionContainer.connectToSite(item.url);\n                    }}\n                  >\n                    <CheckCircleOutlineIcon />\n                  </IconButton>\n                </Tooltip>\n              )}\n            </ListItemSecondaryAction>\n          </ListItem>\n        );\n      })}\n    </List>\n  ) : (\n    <Typography variant=\"h5\">No Saved Sites</Typography>\n  );\n});\n"]},"metadata":{},"sourceType":"module"}