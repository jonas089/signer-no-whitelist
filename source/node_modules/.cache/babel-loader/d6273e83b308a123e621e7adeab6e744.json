{"ast":null,"code":"var _jsxFileName = \"/home/chef/Desktop/signer/src/popup/components/ConnectSignerPage.tsx\",\n    _class;\n\nimport { Typography, Box, Grid, Button } from '@material-ui/core';\nimport { observer } from 'mobx-react';\nimport React from 'react';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport { browser } from 'webextension-polyfill-ts';\nimport Pages from './Pages';\nimport confirmConnect from './ConfirmConnect';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nlet ConnectSignerPage = observer(_class = class ConnectSignerPage extends React.Component {\n  async componentDidMount() {\n    let w = await browser.windows.getCurrent();\n\n    if (w.type === 'popup') {\n      window.addEventListener('beforeunload', e => {\n        this.props.connectSignerContainer.cancel();\n      });\n    }\n  }\n\n  render() {\n    if (!this.props.connectSignerContainer.connectionStatus) {\n      var _this$props$connectSi;\n\n      return !this.props.accountManager.isUnLocked || !this.props.accountManager.userAccounts.length ? /*#__PURE__*/_jsxDEV(Redirect, {\n        to: Pages.Home\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flexGrow: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          align: 'center',\n          variant: 'h5',\n          style: {\n            marginBottom: '1rem'\n          },\n          children: \"Connection Request\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          align: 'center',\n          variant: 'body1',\n          children: [\"Would you like to allow\", ' ', /*#__PURE__*/_jsxDEV(\"b\", {\n            children: (_this$props$connectSi = this.props.connectSignerContainer.currentTab) === null || _this$props$connectSi === void 0 ? void 0 : _this$props$connectSi.url\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), \" to connect?\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          mt: 8,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 4,\n            justify: 'center',\n            alignItems: 'center',\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"secondary\",\n                onClick: () => {\n                  this.props.connectSignerContainer.cancel();\n                },\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => {\n                  confirmConnect().then(() => this.props.connectSignerContainer.connectToSite());\n                },\n                variant: \"contained\",\n                color: \"primary\",\n                style: {\n                  backgroundColor: 'var(--cspr-dark-blue)'\n                },\n                children: \"Connect\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: Pages.Home\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 14\n      }, this);\n    }\n  }\n\n}) || _class;\n\nexport default _c = withRouter(ConnectSignerPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/home/chef/Desktop/signer/src/popup/components/ConnectSignerPage.tsx"],"names":["Typography","Box","Grid","Button","observer","React","Redirect","withRouter","browser","Pages","confirmConnect","ConnectSignerPage","Component","componentDidMount","w","windows","getCurrent","type","window","addEventListener","e","props","connectSignerContainer","cancel","render","connectionStatus","accountManager","isUnLocked","userAccounts","length","Home","flexGrow","marginBottom","currentTab","url","then","connectToSite","backgroundColor"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,IAA1B,EAAgCC,MAAhC,QAA8C,mBAA9C;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAwCC,UAAxC,QAA0D,kBAA1D;AACA,SAASC,OAAT,QAAwB,0BAAxB;AAGA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;;IAQMC,iB,GADLP,Q,UAAD,MACMO,iBADN,SACgCN,KAAK,CAACO,SADtC,CAC2D;AAClC,QAAjBC,iBAAiB,GAAG;AACxB,QAAIC,CAAC,GAAG,MAAMN,OAAO,CAACO,OAAR,CAAgBC,UAAhB,EAAd;;AACA,QAAIF,CAAC,CAACG,IAAF,KAAW,OAAf,EAAwB;AACtBC,MAAAA,MAAM,CAACC,gBAAP,CAAwB,cAAxB,EAAwCC,CAAC,IAAI;AAC3C,aAAKC,KAAL,CAAWC,sBAAX,CAAkCC,MAAlC;AACD,OAFD;AAGD;AACF;;AAEDC,EAAAA,MAAM,GAAG;AACP,QAAI,CAAC,KAAKH,KAAL,CAAWC,sBAAX,CAAkCG,gBAAvC,EAAyD;AAAA;;AACvD,aAAO,CAAC,KAAKJ,KAAL,CAAWK,cAAX,CAA0BC,UAA3B,IACL,CAAC,KAAKN,KAAL,CAAWK,cAAX,CAA0BE,YAA1B,CAAuCC,MADnC,gBAEL,QAAC,QAAD;AAAU,QAAA,EAAE,EAAEpB,KAAK,CAACqB;AAApB;AAAA;AAAA;AAAA;AAAA,cAFK,gBAIL;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,QAAQ,EAAE;AAAZ,SAAZ;AAAA,gCACE,QAAC,UAAD;AACE,UAAA,KAAK,EAAE,QADT;AAEE,UAAA,OAAO,EAAE,IAFX;AAGE,UAAA,KAAK,EAAE;AAAEC,YAAAA,YAAY,EAAE;AAAhB,WAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE,QAAC,UAAD;AAAY,UAAA,KAAK,EAAE,QAAnB;AAA6B,UAAA,OAAO,EAAE,OAAtC;AAAA,gDAC0B,GAD1B,eAEE;AAAA,+CAAI,KAAKX,KAAL,CAAWC,sBAAX,CAAkCW,UAAtC,0DAAI,sBAA8CC;AAAlD;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF,eAaE,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,CAAT;AAAA,iCACE,QAAC,IAAD;AACE,YAAA,SAAS,MADX;AAEE,YAAA,OAAO,EAAE,CAFX;AAGE,YAAA,OAAO,EAAE,QAHX;AAIE,YAAA,UAAU,EAAE,QAJd;AAAA,oCAME,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAA,qCACE,QAAC,MAAD;AACE,gBAAA,OAAO,EAAC,WADV;AAEE,gBAAA,KAAK,EAAC,WAFR;AAGE,gBAAA,OAAO,EAAE,MAAM;AACb,uBAAKb,KAAL,CAAWC,sBAAX,CAAkCC,MAAlC;AACD,iBALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBANF,eAiBE,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAA,qCACE,QAAC,MAAD;AACE,gBAAA,OAAO,EAAE,MAAM;AACbb,kBAAAA,cAAc,GAAGyB,IAAjB,CAAsB,MACpB,KAAKd,KAAL,CAAWC,sBAAX,CAAkCc,aAAlC,EADF;AAGD,iBALH;AAME,gBAAA,OAAO,EAAC,WANV;AAOE,gBAAA,KAAK,EAAC,SAPR;AAQE,gBAAA,KAAK,EAAE;AACLC,kBAAAA,eAAe,EAAE;AADZ,iBART;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAjBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAbF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAuDD,KAxDD,MAwDO;AACL,0BAAO,QAAC,QAAD;AAAU,QAAA,EAAE,EAAE5B,KAAK,CAACqB;AAApB;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;AACF;;AAtEwD,C;;AAyE3D,oBAAevB,UAAU,CAACI,iBAAD,CAAzB","sourcesContent":["import { Typography, Box, Grid, Button } from '@material-ui/core';\nimport { observer } from 'mobx-react';\nimport React from 'react';\nimport { Redirect, RouteComponentProps, withRouter } from 'react-router-dom';\nimport { browser } from 'webextension-polyfill-ts';\nimport ConnectSignerContainer from '../container/ConnectSignerContainer';\nimport AccountManager from '../container/AccountManager';\nimport Pages from './Pages';\nimport confirmConnect from './ConfirmConnect';\n\ninterface Props extends RouteComponentProps {\n  connectSignerContainer: ConnectSignerContainer;\n  accountManager: AccountManager;\n}\n\n@observer\nclass ConnectSignerPage extends React.Component<Props, {}> {\n  async componentDidMount() {\n    let w = await browser.windows.getCurrent();\n    if (w.type === 'popup') {\n      window.addEventListener('beforeunload', e => {\n        this.props.connectSignerContainer.cancel();\n      });\n    }\n  }\n\n  render() {\n    if (!this.props.connectSignerContainer.connectionStatus) {\n      return !this.props.accountManager.isUnLocked ||\n        !this.props.accountManager.userAccounts.length ? (\n        <Redirect to={Pages.Home} />\n      ) : (\n        <div style={{ flexGrow: 1 }}>\n          <Typography\n            align={'center'}\n            variant={'h5'}\n            style={{ marginBottom: '1rem' }}\n          >\n            Connection Request\n          </Typography>\n          <Typography align={'center'} variant={'body1'}>\n            Would you like to allow{' '}\n            <b>{this.props.connectSignerContainer.currentTab?.url}</b> to\n            connect?\n          </Typography>\n          <Box mt={8}>\n            <Grid\n              container\n              spacing={4}\n              justify={'center'}\n              alignItems={'center'}\n            >\n              <Grid item>\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  onClick={() => {\n                    this.props.connectSignerContainer.cancel();\n                  }}\n                >\n                  Cancel\n                </Button>\n              </Grid>\n              <Grid item>\n                <Button\n                  onClick={() => {\n                    confirmConnect().then(() =>\n                      this.props.connectSignerContainer.connectToSite()\n                    );\n                  }}\n                  variant=\"contained\"\n                  color=\"primary\"\n                  style={{\n                    backgroundColor: 'var(--cspr-dark-blue)'\n                  }}\n                >\n                  Connect\n                </Button>\n              </Grid>\n            </Grid>\n          </Box>\n        </div>\n      );\n    } else {\n      return <Redirect to={Pages.Home} />;\n    }\n  }\n}\n\nexport default withRouter(ConnectSignerPage);\n"]},"metadata":{},"sourceType":"module"}