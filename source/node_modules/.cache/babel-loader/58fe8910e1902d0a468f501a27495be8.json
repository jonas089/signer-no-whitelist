{"ast":null,"code":"var _jsxFileName = \"/home/chef/Desktop/signer/src/popup/components/Home.tsx\",\n    _class;\n\nimport React from 'react';\nimport logo from '../img/CasperLabs_Logo_Favicon_RGB_50px.png';\nimport { Button, createStyles, FormControl, Typography, withStyles, Grid, Popover, IconButton } from '@material-ui/core';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\nimport HelpIcon from '@material-ui/icons/Help';\nimport { Link, Redirect } from 'react-router-dom';\nimport { observer } from 'mobx-react';\nimport Pages from './Pages';\nimport { confirm } from './Confirmation';\nimport { withRouter } from 'react-router';\nimport { TextFieldWithFormState } from './Forms';\nimport { SignMessagePage } from './SignMessagePage';\nimport { PurposeForOpening } from '../../shared';\n/* eslint-disable jsx-a11y/anchor-is-valid */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst styles = theme => createStyles({\n  margin: {\n    marginTop: '20px'\n  },\n  alignCenter: {\n    textAlign: 'center'\n  },\n  unlockButton: {\n    backgroundColor: 'var(--cspr-dark-blue)',\n    color: 'white',\n    '&$disabled': {\n      backgroundColor: 'white',\n      color: 'grey'\n    }\n  },\n  disabled: {},\n  lockout: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    left: 0,\n    bottom: 0,\n    background: 'linear-gradient(30deg, var(--cspr-dark-blue) 50%, var(--cspr-red) 100%)',\n    padding: '2em',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    color: 'snow',\n    textAlign: 'center',\n    '& > *': {\n      marginBottom: '1rem'\n    },\n    '& > :nth-child(2)': {\n      fontSize: '1.2rem'\n    }\n  }\n});\n\nlet Home = observer(_class = class Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      remainingMins: this.props.accountManager.remainingMins,\n      helpAnchorEl: null\n    };\n  } // NOT USING THIS JUST NOW - BUT LEFT IT HERE IN CASE WE COME BACK TO USE THIS KIND OF METHOD\n  //\n  // componentDidMount() {\n  //   setTimeout(() => this.sessionTimeout(), 0.2 * 60 * 1000);\n  // }\n  // sessionTimeout() {\n  //   confirm(\n  //     'Are you there?',\n  //     'Your session is about to lock, would you like to keep it open?',\n  //     'Keep open',\n  //     'Lock',\n  //     { unmountAfter: 1000 }\n  //   ).then(\n  //     () => {\n  //       console.log('Keep open');\n  //       // Keep open - ask again in another X minutes\n  //       setTimeout(() => this.sessionTimeout(), 0.2 * 60 * 1000);\n  //     },\n  //     () => {\n  //       console.log('Lock');\n  //       // Lock\n  //       this.props.authContainer.lock();\n  //     }\n  //   );\n  // }\n\n\n  componentDidUpdate() {\n    if (this.props.accountManager.isLockedOut) {\n      this.props.errors.dismissLast();\n      this.props.homeContainer.homeForm.$.setPasswordField.reset();\n    }\n  }\n\n  renderCreateNewVault() {\n    const showPasswordHelp = event => {\n      this.setState({\n        helpAnchorEl: event.currentTarget\n      });\n    };\n\n    const helpOpen = Boolean(showPasswordHelp);\n    const helpId = helpOpen ? 'password-help' : undefined;\n\n    const closePasswordHelp = () => {\n      this.setState({\n        helpAnchorEl: null\n      });\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 4,\n        direction: 'column',\n        justify: 'flex-start',\n        alignItems: 'center',\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          className: this.props.classes.alignCenter,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: logo,\n            alt: \"logo\",\n            width: 80\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: 'h6',\n            align: 'center',\n            children: \"New Vault\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            children: \"Please set a password for your vault. You will need it later to unlock it so keep it safe.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          container: true,\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            style: {\n              textAlign: 'center',\n              width: '100%'\n            },\n            onSubmit: e => e.preventDefault(),\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              style: {\n                width: '80%',\n                float: 'left'\n              },\n              children: /*#__PURE__*/_jsxDEV(TextFieldWithFormState, {\n                autoFocus: true,\n                fieldState: this.props.homeContainer.homeForm.$.setPasswordField,\n                required: true,\n                label: 'Set Password',\n                type: 'password'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: showPasswordHelp,\n              style: {\n                float: 'right',\n                transform: 'translateY(.3em)'\n              },\n              children: /*#__PURE__*/_jsxDEV(HelpIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 15\n            }, this), this.state.helpAnchorEl && /*#__PURE__*/_jsxDEV(Popover, {\n              id: helpId,\n              open: helpOpen,\n              anchorEl: this.state.helpAnchorEl,\n              onClose: closePasswordHelp,\n              anchorOrigin: {\n                vertical: 'top',\n                horizontal: 'right'\n              },\n              transformOrigin: {\n                vertical: 'bottom',\n                horizontal: 'right'\n              },\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                component: 'summary',\n                style: {\n                  padding: '1.4em',\n                  backgroundColor: 'var(--cspr-dark-blue)',\n                  color: 'white'\n                },\n                children: [\"For a password of min. length 10 please include at least one of each of the following:\", /*#__PURE__*/_jsxDEV(\"ul\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                    children: \"lowercase letter\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 210,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: \"UPPERCASE letter\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 211,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: \"Number\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 212,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: \"Special character\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 213,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 21\n                }, this), \"Or you can enter a >20 char passphrase if you would prefer e.g. 'correct horse battery staple'\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 17\n            }, this), this.props.homeContainer.homeForm.$.setPasswordField.hasBeenValidated && !this.props.homeContainer.homeForm.$.setPasswordField.hasError && /*#__PURE__*/_jsxDEV(FormControl, {\n              style: {\n                width: '80%',\n                float: 'left'\n              },\n              children: /*#__PURE__*/_jsxDEV(TextFieldWithFormState, {\n                fieldState: this.props.homeContainer.homeForm.$.confirmPasswordField,\n                required: true,\n                label: 'Confirm Password',\n                type: 'password'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle2\",\n              className: \"text-danger\",\n              children: this.props.homeContainer.homeForm.showFormError && this.props.homeContainer.homeForm.formError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              className: this.props.classes.margin,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                variant: \"contained\",\n                color: \"primary\",\n                disabled: this.props.homeContainer.createVaultDisabled,\n                onClick: async () => {\n                  const password = this.props.homeContainer.homeForm.$.setPasswordField.$;\n                  await this.props.accountManager.createNewVault(password);\n                  this.props.homeContainer.homeForm.$.setPasswordField.reset();\n                  this.props.homeContainer.homeForm.$.confirmPasswordField.reset();\n                },\n                children: \"Create Vault\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this);\n  }\n\n  renderAccountLists() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 4,\n        direction: 'column',\n        justify: 'flex-start',\n        alignItems: 'center',\n        children: [this.props.accountManager.userAccounts.length > 0 ? /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          className: this.props.classes.alignCenter,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: logo,\n            alt: \"logo\",\n            width: 120\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 15\n          }, this), this.props.accountManager.userAccounts.length > 1 ? /*#__PURE__*/_jsxDEV(Typography, {\n            variant: 'h6',\n            align: 'center',\n            children: [\"You have \", this.props.accountManager.userAccounts.length, ' ', \"account keys\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n            variant: 'h6',\n            align: 'center',\n            children: [\"You have \", this.props.accountManager.userAccounts.length, ' ', \"account key\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 17\n          }, this), this.props.accountManager.activeUserAccount && /*#__PURE__*/_jsxDEV(Typography, {\n            variant: 'h6',\n            align: 'center',\n            children: [\"Active key:\", ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                wordBreak: 'break-all'\n              },\n              children: this.props.accountManager.activeUserAccount.alias\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          className: this.props.classes.alignCenter,\n          children: [/*#__PURE__*/_jsxDEV(AddCircleIcon, {\n            style: {\n              color: '#e24c2c',\n              fontSize: '4rem'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: 'h5',\n            align: 'center',\n            children: \"Please create an account to get started\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            className: this.props.classes.margin,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              \"aria-label\": \"This will open a new window to import a key to your vault\",\n              component: Link,\n              variant: \"contained\",\n              color: \"primary\",\n              onClick: () => this.props.popupContainer.callOpenPopup(PurposeForOpening.ImportAccount),\n              to: Pages.ImportAccount,\n              style: {\n                backgroundColor: '#fff',\n                color: 'var(--cspr-dark-blue)'\n              },\n              children: \"Import Account\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            className: this.props.classes.margin,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              \"aria-label\": \"This will open a form to create an account - focus will be given to the input field for key name\",\n              component: Link,\n              variant: \"contained\",\n              color: \"primary\",\n              to: Pages.CreateAccount,\n              style: {\n                backgroundColor: '#fff',\n                color: 'var(--cspr-dark-blue)'\n              },\n              children: \"Create Account\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }, this);\n  }\n\n  resetVaultOnClick() {\n    confirm( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-danger\",\n      children: \"Reset Vault\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 7\n    }, this), 'Resetting vault will permanently delete all accounts. You must have key files backed up if you want to recover them in the future.', 'Reset', 'Cancel', {\n      requireCheckbox: true,\n      checkboxText: 'I have read and understand the above.'\n    }).then(() => {\n      this.props.accountManager.resetVault();\n      this.props.errors.dismissLast();\n      this.props.homeContainer.homeForm.$.setPasswordField.reset();\n    });\n  }\n\n  async tryUnlock() {\n    let password = this.props.homeContainer.homeForm.$.unlockPasswordField.$;\n\n    try {\n      await this.props.accountManager.unlock(password);\n      this.props.homeContainer.homeForm.$.unlockPasswordField.reset();\n      this.props.errors.dismissLast();\n    } catch (e) {\n      this.props.homeContainer.homeForm.$.unlockPasswordField.setError(e.message);\n    }\n  }\n\n  renderUnlock() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 4,\n        direction: 'column',\n        justify: 'flex-start',\n        alignItems: 'center',\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          className: this.props.classes.alignCenter,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: logo,\n            alt: \"logo\",\n            width: 120\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: 'h4',\n            align: 'center',\n            children: \"Unlock Vault\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          container: true,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: /*#__PURE__*/_jsxDEV(TextFieldWithFormState, {\n                \"aria-label\": \"Enter password for vault\",\n                autoFocus: true,\n                fieldState: this.props.homeContainer.homeForm.$.unlockPasswordField,\n                required: true,\n                id: 'unlock-password',\n                label: 'Password',\n                type: 'password'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 401,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 15\n            }, this), this.props.accountManager.remainingUnlockAttempts < 5 && /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              style: {\n                marginTop: '.5rem'\n              },\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: 'subtitle1',\n                children: [\"Attempts remaining:\", ' ', this.props.accountManager.remainingUnlockAttempts]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 415,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              className: this.props.classes.margin,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                variant: \"contained\",\n                color: \"primary\",\n                classes: {\n                  root: this.props.classes.unlockButton,\n                  disabled: this.props.classes.disabled\n                },\n                disabled: this.props.homeContainer.unlockDisabled,\n                onClick: async () => await this.tryUnlock(),\n                children: \"Unlock\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 422,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"reset-vault\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                \"aria-label\": \"Reset vault - this will open a confirmation before erasing keys\",\n                href: \"#\",\n                className: \"text-danger\",\n                id: \"reset-link\",\n                onClick: () => this.resetVaultOnClick(),\n                children: \"Reset Vault?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 437,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 7\n    }, this);\n  }\n\n  renderLockedOut() {\n    if (this.props.accountManager.isLockedOut && !this.props.accountManager.lockoutTimerStarted) {\n      // 5 minute timer before resetting lockout\n      this.props.accountManager.startLockoutTimer(this.props.accountManager.timerDuration);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: this.props.classes.lockout,\n      children: [/*#__PURE__*/_jsxDEV(NotInterestedIcon, {\n        style: {\n          fontSize: '5.5rem'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: 'body1',\n        children: \"Your vault has been temporarily locked out due to too many incorrect password attempts.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: 'h6',\n        children: [\"Please try again in\", ' ', Math.round(this.props.accountManager.remainingMins), \" minute\", this.props.accountManager.remainingMins <= 1 ? '.' : 's.']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 7\n    }, this);\n  }\n\n  render() {\n    if (this.props.accountManager.hasCreatedVault) {\n      if (this.props.accountManager.isUnLocked) {\n        if (!this.props.connectionContainer.connectionStatus && this.props.connectionContainer.connectionRequested) {\n          // Not connected and there is a request to connect\n          if (this.props.accountManager.userAccounts.length < 1) {\n            // Don't prompt for connection if there are no accounts\n            return this.renderAccountLists();\n          } else {\n            return /*#__PURE__*/_jsxDEV(Redirect, {\n              to: Pages.ConnectSigner\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 492,\n              columnNumber: 20\n            }, this);\n          }\n        } else {\n          if (this.props.signingContainer.deployToSign) {\n            return /*#__PURE__*/_jsxDEV(Redirect, {\n              to: Pages.SignDeploy\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 496,\n              columnNumber: 20\n            }, this);\n          } else if (this.props.signingContainer.messageToSign) {\n            return SignMessagePage(this.props.signingContainer, this.props.popupContainer);\n          } else {\n            return this.renderAccountLists();\n          }\n        }\n      } else {\n        if (this.props.accountManager.isLockedOut) {\n          return this.renderLockedOut();\n        } else {\n          return this.renderUnlock();\n        }\n      }\n    } else {\n      return this.renderCreateNewVault();\n    }\n  } // Nicer way to handle the rendering however this currently breaks some flows\n  // leaving here for me to implement in next release.\n  // render() {\n  //   return this.props.authContainer.hasCreatedVault ? (\n  //     this.props.authContainer.isUnLocked ? (\n  //       !this.props.connectionContainer.connectionStatus &&\n  //       this.props.connectionContainer.connectionRequested ? (\n  //         this.props.authContainer.userAccounts.length > 1 ? (\n  //           this.renderAccountLists()\n  //         ) : (\n  //           <Redirect to={Pages.ConnectSigner} />\n  //         )\n  //       ) : this.props.authContainer.unsignedDeploys.length > 0 ? (\n  //         <Redirect to={Pages.SignMessage} />\n  //       ) : (\n  //         this.renderAccountLists()\n  //       )\n  //     ) : this.props.authContainer.isLockedOut ? (\n  //       this.renderLockedOut()\n  //     ) : (\n  //       this.renderUnlock()\n  //     )\n  //   ) : (\n  //     this.renderCreateNewVault()\n  //   );\n  // }\n\n\n}) || _class;\n\nexport default withStyles(styles, {\n  withTheme: true\n})(withRouter(Home));","map":{"version":3,"sources":["/home/chef/Desktop/signer/src/popup/components/Home.tsx"],"names":["React","logo","Button","createStyles","FormControl","Typography","withStyles","Grid","Popover","IconButton","AddCircleIcon","NotInterestedIcon","HelpIcon","Link","Redirect","observer","Pages","confirm","withRouter","TextFieldWithFormState","SignMessagePage","PurposeForOpening","styles","theme","margin","marginTop","alignCenter","textAlign","unlockButton","backgroundColor","color","disabled","lockout","position","top","right","left","bottom","background","padding","display","flexDirection","justifyContent","alignItems","marginBottom","fontSize","Home","Component","constructor","props","state","remainingMins","accountManager","helpAnchorEl","componentDidUpdate","isLockedOut","errors","dismissLast","homeContainer","homeForm","$","setPasswordField","reset","renderCreateNewVault","showPasswordHelp","event","setState","currentTarget","helpOpen","Boolean","helpId","undefined","closePasswordHelp","classes","width","e","preventDefault","float","transform","vertical","horizontal","hasBeenValidated","hasError","confirmPasswordField","showFormError","formError","createVaultDisabled","password","createNewVault","renderAccountLists","userAccounts","length","activeUserAccount","wordBreak","alias","popupContainer","callOpenPopup","ImportAccount","CreateAccount","resetVaultOnClick","requireCheckbox","checkboxText","then","resetVault","tryUnlock","unlockPasswordField","unlock","setError","message","renderUnlock","remainingUnlockAttempts","root","unlockDisabled","renderLockedOut","lockoutTimerStarted","startLockoutTimer","timerDuration","Math","round","render","hasCreatedVault","isUnLocked","connectionContainer","connectionStatus","connectionRequested","ConnectSigner","signingContainer","deployToSign","SignDeploy","messageToSign","withTheme"],"mappings":"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","sourcesContent":["import React from 'react';\nimport logo from '../img/CasperLabs_Logo_Favicon_RGB_50px.png';\nimport {\n  Button,\n  createStyles,\n  FormControl,\n  Theme,\n  WithStyles,\n  Typography,\n  withStyles,\n  Grid,\n  Popover,\n  IconButton\n} from '@material-ui/core';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\nimport HelpIcon from '@material-ui/icons/Help';\nimport { Link, Redirect } from 'react-router-dom';\nimport AccountManager from '../container/AccountManager';\nimport PopupContainer from '../container/PopupContainer';\nimport { HomeContainer } from '../container/HomeContainer';\nimport ConnectSignerContainer from '../container/ConnectSignerContainer';\nimport ErrorContainer from '../container/ErrorContainer';\nimport { observer } from 'mobx-react';\nimport Pages from './Pages';\nimport { confirm } from './Confirmation';\nimport { RouteComponentProps, withRouter } from 'react-router';\nimport { TextFieldWithFormState } from './Forms';\nimport SigningContainer from '../container/SigningContainer';\nimport { SignMessagePage } from './SignMessagePage';\nimport { PurposeForOpening } from '../../shared';\n\n/* eslint-disable jsx-a11y/anchor-is-valid */\nconst styles = (theme: Theme) =>\n  createStyles({\n    margin: {\n      marginTop: '20px'\n    },\n    alignCenter: {\n      textAlign: 'center'\n    },\n    unlockButton: {\n      backgroundColor: 'var(--cspr-dark-blue)',\n      color: 'white',\n      '&$disabled': {\n        backgroundColor: 'white',\n        color: 'grey'\n      }\n    },\n    disabled: {},\n    lockout: {\n      position: 'absolute',\n      top: 0,\n      right: 0,\n      left: 0,\n      bottom: 0,\n      background:\n        'linear-gradient(30deg, var(--cspr-dark-blue) 50%, var(--cspr-red) 100%)',\n      padding: '2em',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center',\n      color: 'snow',\n      textAlign: 'center',\n      '& > *': {\n        marginBottom: '1rem'\n      },\n      '& > :nth-child(2)': {\n        fontSize: '1.2rem'\n      }\n    }\n  });\n\ninterface Props extends RouteComponentProps, WithStyles<typeof styles> {\n  accountManager: AccountManager;\n  homeContainer: HomeContainer;\n  connectionContainer: ConnectSignerContainer;\n  signingContainer: SigningContainer;\n  popupContainer: PopupContainer;\n  errors: ErrorContainer;\n}\n\n@observer\nclass Home extends React.Component<\n  Props,\n  { remainingMins: number; helpAnchorEl: HTMLButtonElement | null }\n> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      remainingMins: this.props.accountManager.remainingMins,\n      helpAnchorEl: null\n    };\n  }\n  // NOT USING THIS JUST NOW - BUT LEFT IT HERE IN CASE WE COME BACK TO USE THIS KIND OF METHOD\n  //\n  // componentDidMount() {\n  //   setTimeout(() => this.sessionTimeout(), 0.2 * 60 * 1000);\n  // }\n\n  // sessionTimeout() {\n  //   confirm(\n  //     'Are you there?',\n  //     'Your session is about to lock, would you like to keep it open?',\n  //     'Keep open',\n  //     'Lock',\n  //     { unmountAfter: 1000 }\n  //   ).then(\n  //     () => {\n  //       console.log('Keep open');\n  //       // Keep open - ask again in another X minutes\n  //       setTimeout(() => this.sessionTimeout(), 0.2 * 60 * 1000);\n  //     },\n  //     () => {\n  //       console.log('Lock');\n  //       // Lock\n  //       this.props.authContainer.lock();\n  //     }\n  //   );\n  // }\n\n  componentDidUpdate() {\n    if (this.props.accountManager.isLockedOut) {\n      this.props.errors.dismissLast();\n      this.props.homeContainer.homeForm.$.setPasswordField.reset();\n    }\n  }\n\n  renderCreateNewVault() {\n    const showPasswordHelp = (event: React.MouseEvent<HTMLButtonElement>) => {\n      this.setState({ helpAnchorEl: event.currentTarget });\n    };\n    const helpOpen = Boolean(showPasswordHelp);\n    const helpId = helpOpen ? 'password-help' : undefined;\n    const closePasswordHelp = () => {\n      this.setState({ helpAnchorEl: null });\n    };\n    return (\n      <div>\n        <Grid\n          container\n          spacing={4}\n          direction={'column'}\n          justify={'flex-start'}\n          alignItems={'center'}\n        >\n          <Grid item className={this.props.classes.alignCenter}>\n            <img src={logo} alt=\"logo\" width={80} />\n            <Typography variant={'h6'} align={'center'}>\n              New Vault\n            </Typography>\n            <Typography>\n              Please set a password for your vault. You will need it later to\n              unlock it so keep it safe.\n            </Typography>\n          </Grid>\n\n          <Grid item container>\n            <form\n              style={{ textAlign: 'center', width: '100%' }}\n              onSubmit={e => e.preventDefault()}\n            >\n              <FormControl style={{ width: '80%', float: 'left' }}>\n                <TextFieldWithFormState\n                  autoFocus\n                  fieldState={\n                    this.props.homeContainer.homeForm.$.setPasswordField\n                  }\n                  required\n                  label={'Set Password'}\n                  type={'password'}\n                />\n              </FormControl>\n              <IconButton\n                onClick={showPasswordHelp}\n                style={{\n                  float: 'right',\n                  transform: 'translateY(.3em)'\n                }}\n              >\n                <HelpIcon />\n              </IconButton>\n              {this.state.helpAnchorEl && (\n                <Popover\n                  id={helpId}\n                  open={helpOpen}\n                  anchorEl={this.state.helpAnchorEl}\n                  onClose={closePasswordHelp}\n                  anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right'\n                  }}\n                  transformOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                  }}\n                >\n                  <Typography\n                    component={'summary'}\n                    style={{\n                      padding: '1.4em',\n                      backgroundColor: 'var(--cspr-dark-blue)',\n                      color: 'white'\n                    }}\n                  >\n                    For a password of min. length 10 please include at least one\n                    of each of the following:\n                    <ul>\n                      <li>lowercase letter</li>\n                      <li>UPPERCASE letter</li>\n                      <li>Number</li>\n                      <li>Special character</li>\n                    </ul>\n                    Or you can enter a &gt;20 char passphrase if you would\n                    prefer e.g. 'correct horse battery staple'\n                  </Typography>\n                </Popover>\n              )}\n              {this.props.homeContainer.homeForm.$.setPasswordField\n                .hasBeenValidated &&\n                !this.props.homeContainer.homeForm.$.setPasswordField\n                  .hasError && (\n                  <FormControl style={{ width: '80%', float: 'left' }}>\n                    <TextFieldWithFormState\n                      fieldState={\n                        this.props.homeContainer.homeForm.$.confirmPasswordField\n                      }\n                      required\n                      label={'Confirm Password'}\n                      type={'password'}\n                    />\n                  </FormControl>\n                )}\n              <Typography variant=\"subtitle2\" className=\"text-danger\">\n                {this.props.homeContainer.homeForm.showFormError &&\n                  this.props.homeContainer.homeForm.formError}\n              </Typography>\n              <FormControl fullWidth className={this.props.classes.margin}>\n                <Button\n                  type=\"submit\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                  disabled={this.props.homeContainer.createVaultDisabled}\n                  onClick={async () => {\n                    const password =\n                      this.props.homeContainer.homeForm.$.setPasswordField.$;\n                    await this.props.accountManager.createNewVault(password);\n                    this.props.homeContainer.homeForm.$.setPasswordField.reset();\n                    this.props.homeContainer.homeForm.$.confirmPasswordField.reset();\n                  }}\n                >\n                  Create Vault\n                </Button>\n              </FormControl>\n            </form>\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n\n  renderAccountLists() {\n    return (\n      <div>\n        <Grid\n          container\n          spacing={4}\n          direction={'column'}\n          justify={'flex-start'}\n          alignItems={'center'}\n        >\n          {this.props.accountManager.userAccounts.length > 0 ? (\n            <Grid item className={this.props.classes.alignCenter}>\n              <img src={logo} alt=\"logo\" width={120} />\n              {this.props.accountManager.userAccounts.length > 1 ? (\n                <Typography variant={'h6'} align={'center'}>\n                  You have {this.props.accountManager.userAccounts.length}{' '}\n                  account keys\n                </Typography>\n              ) : (\n                <Typography variant={'h6'} align={'center'}>\n                  You have {this.props.accountManager.userAccounts.length}{' '}\n                  account key\n                </Typography>\n              )}\n              {this.props.accountManager.activeUserAccount && (\n                <Typography variant={'h6'} align={'center'}>\n                  Active key:{' '}\n                  <span style={{ wordBreak: 'break-all' }}>\n                    {this.props.accountManager.activeUserAccount.alias}\n                  </span>\n                </Typography>\n              )}\n            </Grid>\n          ) : (\n            <Grid item className={this.props.classes.alignCenter}>\n              <AddCircleIcon style={{ color: '#e24c2c', fontSize: '4rem' }} />\n              <Typography variant={'h5'} align={'center'}>\n                Please create an account to get started\n              </Typography>\n            </Grid>\n          )}\n\n          <Grid item>\n            <FormControl fullWidth className={this.props.classes.margin}>\n              <Button\n                aria-label=\"This will open a new window to import a key to your vault\"\n                component={Link}\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() =>\n                  this.props.popupContainer.callOpenPopup(\n                    PurposeForOpening.ImportAccount\n                  )\n                }\n                to={Pages.ImportAccount}\n                style={{\n                  backgroundColor: '#fff',\n                  color: 'var(--cspr-dark-blue)'\n                }}\n              >\n                Import Account\n              </Button>\n            </FormControl>\n            <FormControl fullWidth className={this.props.classes.margin}>\n              <Button\n                aria-label=\"This will open a form to create an account - focus will be given to the input field for key name\"\n                component={Link}\n                variant=\"contained\"\n                color=\"primary\"\n                to={Pages.CreateAccount}\n                style={{\n                  backgroundColor: '#fff',\n                  color: 'var(--cspr-dark-blue)'\n                }}\n              >\n                Create Account\n              </Button>\n            </FormControl>\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n\n  resetVaultOnClick() {\n    confirm(\n      <div className=\"text-danger\">Reset Vault</div>,\n      'Resetting vault will permanently delete all accounts. You must have key files backed up if you want to recover them in the future.',\n      'Reset',\n      'Cancel',\n      {\n        requireCheckbox: true,\n        checkboxText: 'I have read and understand the above.'\n      }\n    ).then(() => {\n      this.props.accountManager.resetVault();\n      this.props.errors.dismissLast();\n      this.props.homeContainer.homeForm.$.setPasswordField.reset();\n    });\n  }\n\n  async tryUnlock() {\n    let password = this.props.homeContainer.homeForm.$.unlockPasswordField.$;\n    try {\n      await this.props.accountManager.unlock(password);\n      this.props.homeContainer.homeForm.$.unlockPasswordField.reset();\n      this.props.errors.dismissLast();\n    } catch (e) {\n      this.props.homeContainer.homeForm.$.unlockPasswordField.setError(\n        (e as Error).message\n      );\n    }\n  }\n\n  renderUnlock() {\n    return (\n      <form\n        onSubmit={e => {\n          e.preventDefault();\n        }}\n      >\n        <Grid\n          container\n          spacing={4}\n          direction={'column'}\n          justify={'flex-start'}\n          alignItems={'center'}\n        >\n          <Grid item className={this.props.classes.alignCenter}>\n            <img src={logo} alt=\"logo\" width={120} />\n            <Typography variant={'h4'} align={'center'}>\n              Unlock Vault\n            </Typography>\n          </Grid>\n\n          <Grid item container>\n            <div style={{ textAlign: 'center' }}>\n              <FormControl fullWidth>\n                <TextFieldWithFormState\n                  aria-label=\"Enter password for vault\"\n                  autoFocus={true}\n                  fieldState={\n                    this.props.homeContainer.homeForm.$.unlockPasswordField\n                  }\n                  required\n                  id={'unlock-password'}\n                  label={'Password'}\n                  type={'password'}\n                />\n              </FormControl>\n              {this.props.accountManager.remainingUnlockAttempts < 5 && (\n                <FormControl fullWidth style={{ marginTop: '.5rem' }}>\n                  <Typography variant={'subtitle1'}>\n                    Attempts remaining:{' '}\n                    {this.props.accountManager.remainingUnlockAttempts}\n                  </Typography>\n                </FormControl>\n              )}\n              <FormControl fullWidth className={this.props.classes.margin}>\n                <Button\n                  type=\"submit\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                  classes={{\n                    root: this.props.classes.unlockButton,\n                    disabled: this.props.classes.disabled\n                  }}\n                  disabled={this.props.homeContainer.unlockDisabled}\n                  onClick={async () => await this.tryUnlock()}\n                >\n                  Unlock\n                </Button>\n              </FormControl>\n              <div className=\"reset-vault\">\n                <a\n                  aria-label=\"Reset vault - this will open a confirmation before erasing keys\"\n                  href=\"#\"\n                  className=\"text-danger\"\n                  id=\"reset-link\"\n                  onClick={() => this.resetVaultOnClick()}\n                >\n                  Reset Vault?\n                </a>\n              </div>\n            </div>\n          </Grid>\n        </Grid>\n      </form>\n    );\n  }\n\n  renderLockedOut() {\n    if (\n      this.props.accountManager.isLockedOut &&\n      !this.props.accountManager.lockoutTimerStarted\n    ) {\n      // 5 minute timer before resetting lockout\n      this.props.accountManager.startLockoutTimer(\n        this.props.accountManager.timerDuration\n      );\n    }\n    return (\n      <div className={this.props.classes.lockout}>\n        <NotInterestedIcon style={{ fontSize: '5.5rem' }} />\n        <Typography variant={'body1'}>\n          Your vault has been temporarily locked out due to too many incorrect\n          password attempts.\n        </Typography>\n        <Typography variant={'h6'}>\n          Please try again in{' '}\n          {Math.round(this.props.accountManager.remainingMins)} minute\n          {this.props.accountManager.remainingMins <= 1 ? '.' : 's.'}\n        </Typography>\n      </div>\n    );\n  }\n\n  render() {\n    if (this.props.accountManager.hasCreatedVault) {\n      if (this.props.accountManager.isUnLocked) {\n        if (\n          !this.props.connectionContainer.connectionStatus &&\n          this.props.connectionContainer.connectionRequested\n        ) {\n          // Not connected and there is a request to connect\n          if (this.props.accountManager.userAccounts.length < 1) {\n            // Don't prompt for connection if there are no accounts\n            return this.renderAccountLists();\n          } else {\n            return <Redirect to={Pages.ConnectSigner} />;\n          }\n        } else {\n          if (this.props.signingContainer.deployToSign) {\n            return <Redirect to={Pages.SignDeploy} />;\n          } else if (this.props.signingContainer.messageToSign) {\n            return SignMessagePage(\n              this.props.signingContainer,\n              this.props.popupContainer\n            );\n          } else {\n            return this.renderAccountLists();\n          }\n        }\n      } else {\n        if (this.props.accountManager.isLockedOut) {\n          return this.renderLockedOut();\n        } else {\n          return this.renderUnlock();\n        }\n      }\n    } else {\n      return this.renderCreateNewVault();\n    }\n  }\n  // Nicer way to handle the rendering however this currently breaks some flows\n  // leaving here for me to implement in next release.\n  // render() {\n  //   return this.props.authContainer.hasCreatedVault ? (\n  //     this.props.authContainer.isUnLocked ? (\n  //       !this.props.connectionContainer.connectionStatus &&\n  //       this.props.connectionContainer.connectionRequested ? (\n  //         this.props.authContainer.userAccounts.length > 1 ? (\n  //           this.renderAccountLists()\n  //         ) : (\n  //           <Redirect to={Pages.ConnectSigner} />\n  //         )\n  //       ) : this.props.authContainer.unsignedDeploys.length > 0 ? (\n  //         <Redirect to={Pages.SignMessage} />\n  //       ) : (\n  //         this.renderAccountLists()\n  //       )\n  //     ) : this.props.authContainer.isLockedOut ? (\n  //       this.renderLockedOut()\n  //     ) : (\n  //       this.renderUnlock()\n  //     )\n  //   ) : (\n  //     this.renderCreateNewVault()\n  //   );\n  // }\n}\n\nexport default withStyles(styles, { withTheme: true })(withRouter(Home));\n"]},"metadata":{},"sourceType":"module"}