{"ast":null,"code":"import _initializerDefineProperty from\"/home/chef/Desktop/signer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";import _classCallCheck from\"/home/chef/Desktop/signer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/chef/Desktop/signer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _applyDecoratedDescriptor from\"/home/chef/Desktop/signer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";import _initializerWarningHelper from\"/home/chef/Desktop/signer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";var _class,_descriptor,_descriptor2,_descriptor3,_descriptor4,_descriptor5,_descriptor6,_descriptor7,_descriptor8,_descriptor9,_descriptor10,_descriptor11,_descriptor12,_descriptor13,_descriptor14;import{observable,computed}from'mobx';export var AppState=(_class=/*#__PURE__*/function(){function AppState(){_classCallCheck(this,AppState);_initializerDefineProperty(this,\"isIntegratedSite\",_descriptor,this);_initializerDefineProperty(this,\"isUnlocked\",_descriptor2,this);_initializerDefineProperty(this,\"isTimeToSecurityCheckup\",_descriptor3,this);_initializerDefineProperty(this,\"unlockAttempts\",_descriptor4,this);_initializerDefineProperty(this,\"lockoutTimerStarted\",_descriptor5,this);this.timerDurationMins=5;_initializerDefineProperty(this,\"remainingMins\",_descriptor6,this);_initializerDefineProperty(this,\"idleTimeoutMins\",_descriptor7,this);_initializerDefineProperty(this,\"currentTab\",_descriptor8,this);_initializerDefineProperty(this,\"connectionRequested\",_descriptor9,this);_initializerDefineProperty(this,\"connectedSites\",_descriptor10,this);_initializerDefineProperty(this,\"hasCreatedVault\",_descriptor11,this);_initializerDefineProperty(this,\"activeUserAccount\",_descriptor12,this);this.userAccounts=observable.array([],{deep:true});_initializerDefineProperty(this,\"unsignedDeploys\",_descriptor13,this);_initializerDefineProperty(this,\"unsignedMessages\",_descriptor14,this);}_createClass(AppState,[{key:\"lockedOut\",get:function get(){return this.unlockAttempts===0;}},{key:\"connectionStatus\",get:function get(){var url=this.currentTab&&this.currentTab.url;if(url){return this.connectedSites.some(function(site){return site.url===url&&site.isConnected;});}return false;}}]);return AppState;}(),(_descriptor=_applyDecoratedDescriptor(_class.prototype,\"isIntegratedSite\",[observable],{configurable:true,enumerable:true,writable:true,initializer:function initializer(){return false;}}),_descriptor2=_applyDecoratedDescriptor(_class.prototype,\"isUnlocked\",[observable],{configurable:true,enumerable:true,writable:true,initializer:function initializer(){return false;}}),_descriptor3=_applyDecoratedDescriptor(_class.prototype,\"isTimeToSecurityCheckup\",[observable],{configurable:true,enumerable:true,writable:true,initializer:function initializer(){return false;}}),_descriptor4=_applyDecoratedDescriptor(_class.prototype,\"unlockAttempts\",[observable],{configurable:true,enumerable:true,writable:true,initializer:function initializer(){return 5;}}),_applyDecoratedDescriptor(_class.prototype,\"lockedOut\",[computed],Object.getOwnPropertyDescriptor(_class.prototype,\"lockedOut\"),_class.prototype),_descriptor5=_applyDecoratedDescriptor(_class.prototype,\"lockoutTimerStarted\",[observable],{configurable:true,enumerable:true,writable:true,initializer:function initializer(){return false;}}),_descriptor6=_applyDecoratedDescriptor(_class.prototype,\"remainingMins\",[observable],{configurable:true,enumerable:true,writable:true,initializer:function initializer(){return this.timerDurationMins;}}),_descriptor7=_applyDecoratedDescriptor(_class.prototype,\"idleTimeoutMins\",[observable],{configurable:true,enumerable:true,writable:true,initializer:function initializer(){return 2;}}),_descriptor8=_applyDecoratedDescriptor(_class.prototype,\"currentTab\",[observable],{configurable:true,enumerable:true,writable:true,initializer:function initializer(){return null;}}),_applyDecoratedDescriptor(_class.prototype,\"connectionStatus\",[computed],Object.getOwnPropertyDescriptor(_class.prototype,\"connectionStatus\"),_class.prototype),_descriptor9=_applyDecoratedDescriptor(_class.prototype,\"connectionRequested\",[observable],{configurable:true,enumerable:true,writable:true,initializer:function initializer(){return false;}}),_descriptor10=_applyDecoratedDescriptor(_class.prototype,\"connectedSites\",[observable],{configurable:true,enumerable:true,writable:true,initializer:function initializer(){return observable.array([],{deep:true});}}),_descriptor11=_applyDecoratedDescriptor(_class.prototype,\"hasCreatedVault\",[observable],{configurable:true,enumerable:true,writable:true,initializer:function initializer(){return false;}}),_descriptor12=_applyDecoratedDescriptor(_class.prototype,\"activeUserAccount\",[observable],{configurable:true,enumerable:true,writable:true,initializer:function initializer(){return null;}}),_descriptor13=_applyDecoratedDescriptor(_class.prototype,\"unsignedDeploys\",[observable],{configurable:true,enumerable:true,writable:true,initializer:function initializer(){return observable.array([],{deep:true});}}),_descriptor14=_applyDecoratedDescriptor(_class.prototype,\"unsignedMessages\",[observable],{configurable:true,enumerable:true,writable:true,initializer:function initializer(){return observable.array([],{deep:true});}})),_class);","map":{"version":3,"sources":["/home/chef/Desktop/signer/src/lib/MemStore.ts"],"names":["observable","computed","AppState","timerDurationMins","userAccounts","array","deep","unlockAttempts","url","currentTab","connectedSites","some","site","isConnected"],"mappings":"u9BAAA,OAA2BA,UAA3B,CAAuCC,QAAvC,KAAuD,MAAvD,CAKA,UAAaC,CAAAA,QAAb,wbASEC,iBATF,CAS8B,CAT9B,0eA6BEC,YA7BF,CA8BIJ,UAAU,CAACK,KAAX,CAAmC,EAAnC,CAAuC,CAAEC,IAAI,CAAE,IAAR,CAAvC,CA9BJ,2LAKE,cAAmC,CACjC,MAAO,MAAKC,cAAL,GAAwB,CAA/B,CACD,CAPH,8BAaE,cAA0C,CACxC,GAAMC,CAAAA,GAAG,CAAG,KAAKC,UAAL,EAAmB,KAAKA,UAAL,CAAgBD,GAA/C,CACA,GAAIA,GAAJ,CAAS,CACP,MAAO,MAAKE,cAAL,CAAoBC,IAApB,CACL,SAAAC,IAAI,QAAIA,CAAAA,IAAI,CAACJ,GAAL,GAAaA,GAAb,EAAoBI,IAAI,CAACC,WAA7B,EADC,CAAP,CAGD,CACD,MAAO,MAAP,CACD,CArBH,oGACGb,UADH,4FAC0C,MAD1C,2EAEGA,UAFH,4FAEoC,MAFpC,wFAGGA,UAHH,4FAGiD,MAHjD,+EAIGA,UAJH,4FAIuC,EAJvC,6DAKGC,QALH,iKAQGD,UARH,4FAQ6C,MAR7C,8EAUGA,UAVH,4FAUsC,MAAKG,iBAV3C,gFAWGH,UAXH,4FAWwC,EAXxC,2EAYGA,UAZH,4FAYuC,KAZvC,oEAaGC,QAbH,wKAsBGD,UAtBH,4FAsB6C,MAtB7C,gFAuBGA,UAvBH,4FAuBuDA,CAAAA,UAAU,CAACK,KAAX,CACnD,EADmD,CAEnD,CAAEC,IAAI,CAAE,IAAR,CAFmD,CAvBvD,iFA2BGN,UA3BH,4FA2ByC,MA3BzC,mFA4BGA,UA5BH,4FA4B2D,KA5B3D,iFA+BGA,UA/BH,4FAgCIA,CAAAA,UAAU,CAACK,KAAX,CAA+B,EAA/B,CAAmC,CAAEC,IAAI,CAAE,IAAR,CAAnC,CAhCJ,kFAiCGN,UAjCH,4FAkCIA,CAAAA,UAAU,CAACK,KAAX,CAAgC,EAAhC,CAAoC,CAAEC,IAAI,CAAE,IAAR,CAApC,CAlCJ","sourcesContent":["import { IObservableArray, observable, computed } from 'mobx';\nimport { Tab, Site } from '../background/ConnectionManager';\nimport { KeyPairWithAlias } from '../@types/models';\nimport { deployWithID, messageWithID } from '../background/SigningManager';\n\nexport class AppState {\n  @observable isIntegratedSite: boolean = false;\n  @observable isUnlocked: boolean = false;\n  @observable isTimeToSecurityCheckup: boolean = false;\n  @observable unlockAttempts: number = 5;\n  @computed get lockedOut(): boolean {\n    return this.unlockAttempts === 0;\n  }\n  @observable lockoutTimerStarted: boolean = false;\n  timerDurationMins: number = 5;\n  @observable remainingMins: number = this.timerDurationMins;\n  @observable idleTimeoutMins: number = 2;\n  @observable currentTab: Tab | null = null;\n  @computed get connectionStatus(): boolean {\n    const url = this.currentTab && this.currentTab.url;\n    if (url) {\n      return this.connectedSites.some(\n        site => site.url === url && site.isConnected\n      );\n    }\n    return false;\n  }\n  @observable connectionRequested: boolean = false;\n  @observable connectedSites: IObservableArray<Site> = observable.array<Site>(\n    [],\n    { deep: true }\n  );\n  @observable hasCreatedVault: boolean = false;\n  @observable activeUserAccount: KeyPairWithAlias | null = null;\n  userAccounts: IObservableArray<KeyPairWithAlias> =\n    observable.array<KeyPairWithAlias>([], { deep: true });\n  @observable unsignedDeploys: IObservableArray<deployWithID> =\n    observable.array<deployWithID>([], { deep: true });\n  @observable unsignedMessages: IObservableArray<messageWithID> =\n    observable.array<messageWithID>([], { deep: true });\n}\n"]},"metadata":{},"sourceType":"module"}