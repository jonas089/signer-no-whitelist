{"ast":null,"code":"import React from'react';import{List,ListItem,ListItemText,IconButton,ListItemSecondaryAction,Tooltip,Typography}from'@material-ui/core';import DeleteIcon from'@material-ui/icons/Delete';import CheckCircleIcon from'@material-ui/icons/CheckCircle';import CheckCircleOutlineIcon from'@material-ui/icons/CheckCircleOutline';import{observer}from'mobx-react';import{confirm}from'./Confirmation';import{Redirect}from'react-router-dom';import Pages from'./Pages';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var ConnectedSitesPage=observer(function(props){var handleClickRemove=function handleClickRemove(name){confirm(/*#__PURE__*/_jsx(\"div\",{className:\"text-danger\",children:\"Remove Site\"}),'Are you sure you want to disconnect and remove this site?').then(function(){return props.connectionContainer.removeSite(name);});};return!props.accountManager.isUnLocked?/*#__PURE__*/_jsx(Redirect,{to:Pages.Home}):props.connectionContainer.connectedSites[0]?/*#__PURE__*/_jsx(List,{children:props.connectionContainer.connectedSites.map(function(item,index){return/*#__PURE__*/_jsxs(ListItem,{children:[/*#__PURE__*/_jsx(ListItemText,{primary:item.url}),/*#__PURE__*/_jsxs(ListItemSecondaryAction,{children:[/*#__PURE__*/_jsx(Tooltip,{title:\"Delete\",children:/*#__PURE__*/_jsx(IconButton,{edge:'end',onClick:function onClick(){handleClickRemove(item.url);},children:/*#__PURE__*/_jsx(DeleteIcon,{})})}),item.isConnected?/*#__PURE__*/_jsx(Tooltip,{title:\"Disconnect\",children:/*#__PURE__*/_jsx(IconButton,{edge:'end',onClick:function onClick(){props.connectionContainer.disconnectFromSite(item.url);},children:/*#__PURE__*/_jsx(CheckCircleIcon,{})})}):/*#__PURE__*/_jsx(Tooltip,{title:\"Connect\",children:/*#__PURE__*/_jsx(IconButton,{edge:'end',onClick:function onClick(){props.connectionContainer.connectToSite(item.url);},children:/*#__PURE__*/_jsx(CheckCircleOutlineIcon,{})})})]})]});})}):/*#__PURE__*/_jsx(Typography,{variant:\"h5\",children:\"No Saved Sites\"});});","map":{"version":3,"sources":["/home/chef/Desktop/signer/src/popup/components/ConnectedSitesPage.tsx"],"names":["React","List","ListItem","ListItemText","IconButton","ListItemSecondaryAction","Tooltip","Typography","DeleteIcon","CheckCircleIcon","CheckCircleOutlineIcon","observer","confirm","Redirect","Pages","ConnectedSitesPage","props","handleClickRemove","name","then","connectionContainer","removeSite","accountManager","isUnLocked","Home","connectedSites","map","item","index","url","isConnected","disconnectFromSite","connectToSite"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OACEC,IADF,CAEEC,QAFF,CAGEC,YAHF,CAIEC,UAJF,CAKEC,uBALF,CAMEC,OANF,CAOEC,UAPF,KAQO,mBARP,CASA,MAAOC,CAAAA,UAAP,KAAuB,2BAAvB,CACA,MAAOC,CAAAA,eAAP,KAA4B,gCAA5B,CACA,MAAOC,CAAAA,sBAAP,KAAmC,uCAAnC,CAGA,OAASC,QAAT,KAAyB,YAAzB,CACA,OAASC,OAAT,KAAwB,gBAAxB,CACA,OAASC,QAAT,KAAyB,kBAAzB,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,C,wFAOA,MAAO,IAAMC,CAAAA,kBAAkB,CAAGJ,QAAQ,CAAC,SAACK,KAAD,CAAkB,CAC3D,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,IAAD,CAAkB,CAC1CN,OAAO,cACL,YAAK,SAAS,CAAC,aAAf,yBADK,CAEL,2DAFK,CAAP,CAGEO,IAHF,CAGO,iBAAMH,CAAAA,KAAK,CAACI,mBAAN,CAA0BC,UAA1B,CAAqCH,IAArC,CAAN,EAHP,EAID,CALD,CAOA,MAAO,CAACF,KAAK,CAACM,cAAN,CAAqBC,UAAtB,cACL,KAAC,QAAD,EAAU,EAAE,CAAET,KAAK,CAACU,IAApB,EADK,CAEHR,KAAK,CAACI,mBAAN,CAA0BK,cAA1B,CAAyC,CAAzC,eACF,KAAC,IAAD,WACGT,KAAK,CAACI,mBAAN,CAA0BK,cAA1B,CAAyCC,GAAzC,CAA6C,SAACC,IAAD,CAAOC,KAAP,CAAiB,CAC7D,mBACE,MAAC,QAAD,yBACE,KAAC,YAAD,EAAc,OAAO,CAAED,IAAI,CAACE,GAA5B,EADF,cAEE,MAAC,uBAAD,yBACE,KAAC,OAAD,EAAS,KAAK,CAAC,QAAf,uBACE,KAAC,UAAD,EACE,IAAI,CAAE,KADR,CAEE,OAAO,CAAE,kBAAM,CACbZ,iBAAiB,CAACU,IAAI,CAACE,GAAN,CAAjB,CACD,CAJH,uBAME,KAAC,UAAD,IANF,EADF,EADF,CAWGF,IAAI,CAACG,WAAL,cACC,KAAC,OAAD,EAAS,KAAK,CAAC,YAAf,uBACE,KAAC,UAAD,EACE,IAAI,CAAE,KADR,CAEE,OAAO,CAAE,kBAAM,CACbd,KAAK,CAACI,mBAAN,CAA0BW,kBAA1B,CAA6CJ,IAAI,CAACE,GAAlD,EACD,CAJH,uBAME,KAAC,eAAD,IANF,EADF,EADD,cAYC,KAAC,OAAD,EAAS,KAAK,CAAC,SAAf,uBACE,KAAC,UAAD,EACE,IAAI,CAAE,KADR,CAEE,OAAO,CAAE,kBAAM,CACbb,KAAK,CAACI,mBAAN,CAA0BY,aAA1B,CAAwCL,IAAI,CAACE,GAA7C,EACD,CAJH,uBAME,KAAC,sBAAD,IANF,EADF,EAvBJ,GAFF,GADF,CAwCD,CAzCA,CADH,EADE,cA8CF,KAAC,UAAD,EAAY,OAAO,CAAC,IAApB,4BAhDF,CAkDD,CA1DyC,CAAnC","sourcesContent":["import React from 'react';\nimport {\n  List,\n  ListItem,\n  ListItemText,\n  IconButton,\n  ListItemSecondaryAction,\n  Tooltip,\n  Typography\n} from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport ConnectSignerContainer from '../container/ConnectSignerContainer';\nimport AccountManager from '../container/AccountManager';\nimport { observer } from 'mobx-react';\nimport { confirm } from './Confirmation';\nimport { Redirect } from 'react-router-dom';\nimport Pages from './Pages';\n\ninterface Props {\n  connectionContainer: ConnectSignerContainer;\n  accountManager: AccountManager;\n}\n\nexport const ConnectedSitesPage = observer((props: Props) => {\n  const handleClickRemove = (name: string) => {\n    confirm(\n      <div className=\"text-danger\">Remove Site</div>,\n      'Are you sure you want to disconnect and remove this site?'\n    ).then(() => props.connectionContainer.removeSite(name));\n  };\n\n  return !props.accountManager.isUnLocked ? (\n    <Redirect to={Pages.Home} />\n  ) : props.connectionContainer.connectedSites[0] ? (\n    <List>\n      {props.connectionContainer.connectedSites.map((item, index) => {\n        return (\n          <ListItem>\n            <ListItemText primary={item.url} />\n            <ListItemSecondaryAction>\n              <Tooltip title=\"Delete\">\n                <IconButton\n                  edge={'end'}\n                  onClick={() => {\n                    handleClickRemove(item.url);\n                  }}\n                >\n                  <DeleteIcon />\n                </IconButton>\n              </Tooltip>\n              {item.isConnected ? (\n                <Tooltip title=\"Disconnect\">\n                  <IconButton\n                    edge={'end'}\n                    onClick={() => {\n                      props.connectionContainer.disconnectFromSite(item.url);\n                    }}\n                  >\n                    <CheckCircleIcon />\n                  </IconButton>\n                </Tooltip>\n              ) : (\n                <Tooltip title=\"Connect\">\n                  <IconButton\n                    edge={'end'}\n                    onClick={() => {\n                      props.connectionContainer.connectToSite(item.url);\n                    }}\n                  >\n                    <CheckCircleOutlineIcon />\n                  </IconButton>\n                </Tooltip>\n              )}\n            </ListItemSecondaryAction>\n          </ListItem>\n        );\n      })}\n    </List>\n  ) : (\n    <Typography variant=\"h5\">No Saved Sites</Typography>\n  );\n});\n"]},"metadata":{},"sourceType":"module"}