{"ast":null,"code":"var _jsxFileName = \"/home/chef/Desktop/signer/src/popup/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react'; // see https://github.com/mobxjs/mobx-react-lite/#observer-batching\n\nimport 'mobx-react-lite/batchingForReactDom';\nimport './App.scss';\nimport { Route, Switch } from 'react-router-dom';\nimport Pages from './components/Pages';\nimport Home from './components/Home';\nimport { observer } from 'mobx-react';\nimport SignDeployPage from './components/SignDeployPage';\nimport ConnectSignerPage from './components/ConnectSignerPage';\nimport AccountPage from './components/AccountPage';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport { Container } from '@material-ui/core';\nimport { MainAppBar } from './components/MainAppBar';\nimport AnalyticsProvider from './components/AnalyticsProvider';\nimport AccountManagementPage from './components/AccountManagementPage';\nimport { ConnectedSitesPage } from './components/ConnectedSitesPage';\nimport { useIdleTimer } from 'react-idle-timer';\nimport { SignMessagePage } from './components/SignMessagePage';\nimport { ConfigureTimeoutPage } from './components/ConfigureTimeout';\nimport SecurityCheckupPrompt, { useSecurityCheckupRenderFunctions } from './components/Prompt';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = observer(_c = _s(props => {\n  _s();\n\n  const lockOnIdle = () => {\n    if (props.accountManager.isUnLocked) props.accountManager.lock();\n  };\n\n  useIdleTimer({\n    timeout: 1000 * 60 * props.accountManager.idleTimeoutMins,\n    onIdle: lockOnIdle,\n    debounce: 500\n  });\n  const {\n    isTimeToSecurityCheckup\n  } = props.accountManager;\n\n  const createCloseHandler = accountManager => () => accountManager.resetSecurityCheckup();\n\n  const closeHandler = createCloseHandler(props.accountManager);\n  const securityCheckupRenderFunctions = useSecurityCheckupRenderFunctions({\n    closeHandler,\n    accountManager: props.accountManager\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SecurityCheckupPrompt, {\n      isOpened: isTimeToSecurityCheckup,\n      ...securityCheckupRenderFunctions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AnalyticsProvider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MainAppBar, {\n      accountManager: props.accountManager,\n      connectionContainer: props.connectSignerContainer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Alerts, { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: Pages.Home,\n          render: _ => /*#__PURE__*/_jsxDEV(Home, {\n            accountManager: props.accountManager,\n            homeContainer: props.homeContainer,\n            connectionContainer: props.connectSignerContainer,\n            signingContainer: props.signingContainer,\n            popupContainer: props.popupContainer,\n            errors: props.errors\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: Pages.AccountManagement,\n          render: _ => /*#__PURE__*/_jsxDEV(AccountManagementPage, {\n            accountManager: props.accountManager,\n            connectionContainer: props.connectSignerContainer,\n            errorsContainer: props.errors\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: Pages.ConnectedSites,\n          render: _ => /*#__PURE__*/_jsxDEV(ConnectedSitesPage, {\n            connectionContainer: props.connectSignerContainer,\n            accountManager: props.accountManager\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: Pages.ImportAccount,\n          exact: true,\n          render: _ => /*#__PURE__*/_jsxDEV(AccountPage, {\n            errors: props.errors,\n            action: 'Import',\n            accountManager: props.accountManager,\n            connectionContainer: props.connectSignerContainer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: Pages.CreateAccount,\n          exact: true,\n          render: _ => /*#__PURE__*/_jsxDEV(AccountPage, {\n            errors: props.errors,\n            action: 'Create',\n            accountManager: props.accountManager,\n            connectionContainer: props.connectSignerContainer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: Pages.SignDeploy,\n          exact: true,\n          render: _ => /*#__PURE__*/_jsxDEV(SignDeployPage, {\n            signingContainer: props.signingContainer,\n            accountManager: props.accountManager,\n            popupContainer: props.popupContainer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: Pages.SignMessage,\n          exact: true,\n          render: _ => SignMessagePage(props.signingContainer, props.popupContainer)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: Pages.ConnectSigner,\n          exact: true,\n          render: _ => /*#__PURE__*/_jsxDEV(ConnectSignerPage, {\n            connectSignerContainer: props.connectSignerContainer,\n            accountManager: props.accountManager\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: Pages.ConfigureTimeout,\n          exact: true,\n          render: _ => /*#__PURE__*/_jsxDEV(ConfigureTimeoutPage, {\n            accountManager: props.accountManager\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}, \"3pz4XvMwV5d2TdqEMPSg9ghYKEY=\", false, function () {\n  return [useIdleTimer, useSecurityCheckupRenderFunctions];\n}));\n_c2 = App;\nexport default App; // Alerts displays the outcome of the last async error on the top of the page.\n// Dismissing the error clears the state and removes the element.\n\nconst Alerts = observer(_c3 = props => {\n  if (props.errors.lastError == null) return null; // Not using the `data-dismiss=\"alert\"` to dismiss via Bootstrap JS\n  // becuase then it doesn't re-render when there's a new error.\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"alert-message\",\n    children: /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      onClose: () => props.errors.dismissLast(),\n      children: [/*#__PURE__*/_jsxDEV(AlertTitle, {\n        children: \"Error!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), props.errors.lastError]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 5\n  }, this);\n});\n_c4 = Alerts;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"App$observer\");\n$RefreshReg$(_c2, \"App\");\n$RefreshReg$(_c3, \"Alerts$observer\");\n$RefreshReg$(_c4, \"Alerts\");","map":{"version":3,"sources":["/home/chef/Desktop/signer/src/popup/App.tsx"],"names":["React","Route","Switch","Pages","Home","observer","SignDeployPage","ConnectSignerPage","AccountPage","Alert","AlertTitle","Container","MainAppBar","AnalyticsProvider","AccountManagementPage","ConnectedSitesPage","useIdleTimer","SignMessagePage","ConfigureTimeoutPage","SecurityCheckupPrompt","useSecurityCheckupRenderFunctions","App","props","lockOnIdle","accountManager","isUnLocked","lock","timeout","idleTimeoutMins","onIdle","debounce","isTimeToSecurityCheckup","createCloseHandler","resetSecurityCheckup","closeHandler","securityCheckupRenderFunctions","connectSignerContainer","_","homeContainer","signingContainer","popupContainer","errors","AccountManagement","ConnectedSites","ImportAccount","CreateAccount","SignDeploy","SignMessage","ConnectSigner","ConfigureTimeout","Alerts","lastError","dismissLast"],"mappings":"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","sourcesContent":["import React from 'react';\n// see https://github.com/mobxjs/mobx-react-lite/#observer-batching\nimport 'mobx-react-lite/batchingForReactDom';\nimport './App.scss';\nimport { Route, Switch } from 'react-router-dom';\nimport Pages from './components/Pages';\nimport Home from './components/Home';\nimport AccountManager from './container/AccountManager';\nimport { HomeContainer } from './container/HomeContainer';\nimport { observer } from 'mobx-react';\nimport ErrorContainer from './container/ErrorContainer';\nimport SignDeployPage from './components/SignDeployPage';\nimport SigningContainer from './container/SigningContainer';\nimport ConnectSignerPage from './components/ConnectSignerPage';\nimport ConnectSignerContainer from './container/ConnectSignerContainer';\nimport AccountPage from './components/AccountPage';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport { Container } from '@material-ui/core';\nimport { MainAppBar } from './components/MainAppBar';\nimport AnalyticsProvider from './components/AnalyticsProvider';\nimport AccountManagementPage from './components/AccountManagementPage';\nimport { ConnectedSitesPage } from './components/ConnectedSitesPage';\nimport { useIdleTimer } from 'react-idle-timer';\nimport { SignMessagePage } from './components/SignMessagePage';\nimport { ConfigureTimeoutPage } from './components/ConfigureTimeout';\nimport PopupContainer from './container/PopupContainer';\nimport SecurityCheckupPrompt, {\n  useSecurityCheckupRenderFunctions\n} from './components/Prompt';\n\nexport interface AppProps {\n  errors: ErrorContainer;\n  accountManager: AccountManager;\n  popupContainer: PopupContainer;\n  homeContainer: HomeContainer;\n  signingContainer: SigningContainer;\n  connectSignerContainer: ConnectSignerContainer;\n}\n\nconst App = observer((props: AppProps) => {\n  const lockOnIdle = () => {\n    if (props.accountManager.isUnLocked) props.accountManager.lock();\n  };\n\n  useIdleTimer({\n    timeout: 1000 * 60 * props.accountManager.idleTimeoutMins,\n    onIdle: lockOnIdle,\n    debounce: 500\n  });\n\n  const { isTimeToSecurityCheckup } = props.accountManager;\n  const createCloseHandler = (accountManager: AccountManager) => () =>\n    accountManager.resetSecurityCheckup();\n  const closeHandler = createCloseHandler(props.accountManager);\n\n  const securityCheckupRenderFunctions = useSecurityCheckupRenderFunctions({\n    closeHandler,\n    accountManager: props.accountManager\n  });\n\n  return (\n    <div>\n      <SecurityCheckupPrompt\n        isOpened={isTimeToSecurityCheckup}\n        {...securityCheckupRenderFunctions}\n      />\n      <AnalyticsProvider />\n      <MainAppBar\n        accountManager={props.accountManager}\n        connectionContainer={props.connectSignerContainer}\n      />\n      <Container>\n        <Alerts {...props} />\n        <Switch>\n          <Route\n            exact\n            path={Pages.Home}\n            render={_ => (\n              <Home\n                accountManager={props.accountManager}\n                homeContainer={props.homeContainer}\n                connectionContainer={props.connectSignerContainer}\n                signingContainer={props.signingContainer}\n                popupContainer={props.popupContainer}\n                errors={props.errors}\n              />\n            )}\n          />\n          <Route\n            exact\n            path={Pages.AccountManagement}\n            render={_ => (\n              <AccountManagementPage\n                accountManager={props.accountManager}\n                connectionContainer={props.connectSignerContainer}\n                errorsContainer={props.errors}\n              />\n            )}\n          />\n          <Route\n            exact\n            path={Pages.ConnectedSites}\n            render={_ => (\n              <ConnectedSitesPage\n                connectionContainer={props.connectSignerContainer}\n                accountManager={props.accountManager}\n              />\n            )}\n          />\n          <Route\n            path={Pages.ImportAccount}\n            exact\n            render={_ => (\n              <AccountPage\n                errors={props.errors}\n                action={'Import'}\n                accountManager={props.accountManager}\n                connectionContainer={props.connectSignerContainer}\n              />\n            )}\n          />\n          <Route\n            path={Pages.CreateAccount}\n            exact\n            render={_ => (\n              <AccountPage\n                errors={props.errors}\n                action={'Create'}\n                accountManager={props.accountManager}\n                connectionContainer={props.connectSignerContainer}\n              />\n            )}\n          />\n          <Route\n            path={Pages.SignDeploy}\n            exact\n            render={_ => (\n              <SignDeployPage\n                signingContainer={props.signingContainer}\n                accountManager={props.accountManager}\n                popupContainer={props.popupContainer}\n              />\n            )}\n          />\n          <Route\n            path={Pages.SignMessage}\n            exact\n            render={_ =>\n              SignMessagePage(props.signingContainer, props.popupContainer)\n            }\n          />\n          <Route\n            path={Pages.ConnectSigner}\n            exact\n            render={_ => (\n              <ConnectSignerPage\n                connectSignerContainer={props.connectSignerContainer}\n                accountManager={props.accountManager}\n              />\n            )}\n          />\n          <Route\n            path={Pages.ConfigureTimeout}\n            exact\n            render={_ => (\n              <ConfigureTimeoutPage accountManager={props.accountManager} />\n            )}\n          />\n        </Switch>\n      </Container>\n    </div>\n  );\n});\n\nexport default App;\n\n// Alerts displays the outcome of the last async error on the top of the page.\n// Dismissing the error clears the state and removes the element.\nconst Alerts = observer((props: AppProps) => {\n  if (props.errors.lastError == null) return null;\n  // Not using the `data-dismiss=\"alert\"` to dismiss via Bootstrap JS\n  // becuase then it doesn't re-render when there's a new error.\n  return (\n    <div id=\"alert-message\">\n      <Alert severity=\"error\" onClose={() => props.errors.dismissLast()}>\n        <AlertTitle>Error!</AlertTitle>\n        {props.errors.lastError}\n      </Alert>\n    </div>\n  );\n});\n"]},"metadata":{},"sourceType":"module"}