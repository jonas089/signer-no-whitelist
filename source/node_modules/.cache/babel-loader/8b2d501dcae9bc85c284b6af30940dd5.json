{"ast":null,"code":"import _initializerDefineProperty from \"/home/chef/Desktop/signer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"/home/chef/Desktop/signer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"/home/chef/Desktop/signer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor;\n\nimport { observable } from 'mobx';\nexport let ErrorContainer = (_class = class ErrorContainer {\n  constructor() {\n    _initializerDefineProperty(this, \"lastError\", _descriptor, this);\n  }\n\n  // This version just sets the error message.\n  capture(p) {\n    return p.catch(err => {\n      this.lastError = err.message;\n    });\n  } // This version re-raises the error, which, if uncaught, shows up in the console.\n\n\n  withCapture(p) {\n    return p.catch(err => {\n      this.lastError = err.message;\n      throw err;\n    });\n  }\n\n  dismissLast() {\n    this.lastError = null;\n  }\n\n}, (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"lastError\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return null;\n  }\n})), _class);\nexport default ErrorContainer;","map":{"version":3,"sources":["/home/chef/Desktop/signer/src/popup/container/ErrorContainer.ts"],"names":["observable","ErrorContainer","capture","p","catch","err","lastError","message","withCapture","dismissLast"],"mappings":";;;;;;AAAA,SAASA,UAAT,QAA2B,MAA3B;AAEA,WAAaC,cAAb,aAAO,MAAMA,cAAN,CAAqB;AAAA;AAAA;AAAA;;AAI1B;AACAC,EAAAA,OAAO,CAACC,CAAD,EAAkC;AACvC,WAAOA,CAAC,CAACC,KAAF,CAAQC,GAAG,IAAI;AACpB,WAAKC,SAAL,GAAiBD,GAAG,CAACE,OAArB;AACD,KAFM,CAAP;AAGD,GATyB,CAW1B;;;AACAC,EAAAA,WAAW,CAAIL,CAAJ,EAA+B;AACxC,WAAOA,CAAC,CAACC,KAAF,CAAQC,GAAG,IAAI;AACpB,WAAKC,SAAL,GAAiBD,GAAG,CAACE,OAArB;AACA,YAAMF,GAAN;AACD,KAHM,CAAP;AAID;;AAEDI,EAAAA,WAAW,GAAG;AACZ,SAAKH,SAAL,GAAiB,IAAjB;AACD;;AArByB,CAA5B,2EAEGN,UAFH;AAAA;AAAA;AAAA;AAAA;AAAA,WAEyC,IAFzC;AAAA;AAAA;AAwBA,eAAeC,cAAf","sourcesContent":["import { observable } from 'mobx';\n\nexport class ErrorContainer {\n  // We can display the last error when it happens.\n  @observable lastError: string | null = null;\n\n  // This version just sets the error message.\n  capture(p: Promise<void>): Promise<void> {\n    return p.catch(err => {\n      this.lastError = err.message;\n    });\n  }\n\n  // This version re-raises the error, which, if uncaught, shows up in the console.\n  withCapture<T>(p: Promise<T>): Promise<T> {\n    return p.catch(err => {\n      this.lastError = err.message;\n      throw err;\n    });\n  }\n\n  dismissLast() {\n    this.lastError = null;\n  }\n}\n\nexport default ErrorContainer;\n"]},"metadata":{},"sourceType":"module"}