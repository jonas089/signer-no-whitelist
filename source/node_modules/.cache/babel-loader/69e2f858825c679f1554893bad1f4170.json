{"ast":null,"code":"import _regeneratorRuntime from\"/home/chef/Desktop/signer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/chef/Desktop/signer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/home/chef/Desktop/signer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/chef/Desktop/signer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/chef/Desktop/signer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/chef/Desktop/signer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import{confirmable,createConfirmation}from'react-confirm';import{Button,Checkbox,Dialog,DialogActions,DialogContent,DialogContentText,DialogTitle,FormControl,FormControlLabel}from'@material-ui/core';import{TextFieldWithFormState}from'../components/Forms';import AccountManager from'../container/AccountManager';import{ErrorContainer}from'../container/ErrorContainer';import{BackgroundManager}from'../BackgroundManager';import{AppState}from'../../lib/MemStore';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Confirmation=/*#__PURE__*/function(_React$Component){_inherits(Confirmation,_React$Component);var _super=_createSuper(Confirmation);function Confirmation(props){var _this;_classCallCheck(this,Confirmation);_this=_super.call(this,props);_this.errors=new ErrorContainer();_this.appState=new AppState();_this.background=new BackgroundManager(_this.appState,_this.errors);_this.accountManager=new AccountManager(_this.errors,_this.background,_this.appState);_this.handleCheckboxChange=function(event){_this.setState({boxChecked:event.target.checked});};_this.state={boxChecked:false};return _this;}_createClass(Confirmation,[{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/_jsxs(Dialog,{open:this.props.show,onClose:this.props.dismiss,\"aria-labelledby\":\"alert-dialog-title\",\"aria-describedby\":\"alert-dialog-description\",style:{margin:'-1rem -0.5rem'},children:[/*#__PURE__*/_jsx(DialogTitle,{id:\"alert-dialog-title\",children:this.props.title}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:function onSubmit(e){e.preventDefault();},children:[/*#__PURE__*/_jsxs(DialogContent,{children:[/*#__PURE__*/_jsx(DialogContentText,{id:\"alert-dialog-description\",children:this.props.confirmation}),this.props.options.requireCheckbox&&/*#__PURE__*/_jsx(FormControlLabel,{control:/*#__PURE__*/_jsx(Checkbox,{style:{alignSelf:'flex-start'},checked:this.state.boxChecked,onChange:this.handleCheckboxChange}),label:this.props.options.checkboxText,style:{fontSize:'0.6rem',marginRight:'-1rem',marginBottom:this.props.options.requirePassword?'0.5rem':'auto'}}),this.props.options.requirePassword&&/*#__PURE__*/_jsx(FormControl,{children:/*#__PURE__*/_jsx(TextFieldWithFormState,{autoFocus:true,fieldState:this.accountManager.confirmPasswordForm.$.confirmPasswordField,required:true,label:'Password',type:'password'})})]}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:function onClick(){_this2.props.cancel();},color:\"secondary\",children:this.props.cancelLabel}),/*#__PURE__*/_jsx(FormControl,{children:this.props.options.requireCheckbox&&this.props.options.requirePassword?/*#__PURE__*/_jsx(Button,{type:\"submit\",disabled:!this.state.boxChecked,onClick:/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var givenPassword;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:givenPassword=_this2.accountManager.confirmPasswordForm.$.confirmPasswordField.$;_context.prev=1;_context.next=4;return _this2.accountManager.confirmPassword(givenPassword);case 4:_this2.accountManager.confirmPasswordForm.$.confirmPasswordField.reset();_this2.errors.dismissLast();_this2.props.proceed();_context.next=12;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](1);_this2.accountManager.confirmPasswordForm.$.confirmPasswordField.setError(_context.t0.message);case 12:case\"end\":return _context.stop();}}},_callee,null,[[1,9]]);})),color:\"primary\",children:this.props.proceedLabel}):this.props.options.requirePassword?/*#__PURE__*/_jsx(Button,{type:\"submit\",onClick:/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var givenPassword;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:givenPassword=_this2.accountManager.confirmPasswordForm.$.confirmPasswordField.$;_context2.prev=1;_context2.next=4;return _this2.accountManager.confirmPassword(givenPassword);case 4:_this2.accountManager.confirmPasswordForm.$.confirmPasswordField.reset();_this2.errors.dismissLast();_this2.props.proceed();_context2.next=12;break;case 9:_context2.prev=9;_context2.t0=_context2[\"catch\"](1);_this2.accountManager.confirmPasswordForm.$.confirmPasswordField.setError(_context2.t0.message);case 12:case\"end\":return _context2.stop();}}},_callee2,null,[[1,9]]);})),color:\"primary\",children:this.props.proceedLabel}):/*#__PURE__*/_jsx(Button,{type:\"submit\",disabled:this.props.options.requireCheckbox?!this.state.boxChecked:false,onClick:function onClick(){_this2.props.proceed();},color:\"primary\",children:this.props.proceedLabel})})]})]})]});}}]);return Confirmation;}(React.Component);export function confirm(title,confirmation){var proceedLabel=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'OK';var cancelLabel=arguments.length>3&&arguments[3]!==undefined?arguments[3]:'cancel';var options=arguments.length>4&&arguments[4]!==undefined?arguments[4]:{requirePassword:false,requireCheckbox:false,checkboxText:'',unmountAfter:10000};return createConfirmation(confirmable(Confirmation),options.unmountAfter)({title:title,confirmation:confirmation,proceedLabel:proceedLabel,cancelLabel:cancelLabel,options:options});}","map":{"version":3,"sources":["/home/chef/Desktop/signer/src/popup/components/Confirmation.tsx"],"names":["React","confirmable","createConfirmation","Button","Checkbox","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","FormControl","FormControlLabel","TextFieldWithFormState","AccountManager","ErrorContainer","BackgroundManager","AppState","Confirmation","props","errors","appState","background","accountManager","handleCheckboxChange","event","setState","boxChecked","target","checked","state","show","dismiss","margin","title","e","preventDefault","confirmation","options","requireCheckbox","alignSelf","checkboxText","fontSize","marginRight","marginBottom","requirePassword","confirmPasswordForm","$","confirmPasswordField","cancel","cancelLabel","givenPassword","confirmPassword","reset","dismissLast","proceed","setError","message","proceedLabel","Component","confirm","unmountAfter"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  confirmable,\n  createConfirmation,\n  ReactConfirmProps\n} from 'react-confirm';\nimport {\n  Button,\n  Checkbox,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  FormControl,\n  FormControlLabel\n} from '@material-ui/core';\nimport { TextFieldWithFormState } from '../components/Forms';\nimport AccountManager from '../container/AccountManager';\nimport { ErrorContainer } from '../container/ErrorContainer';\nimport { BackgroundManager } from '../BackgroundManager';\nimport { AppState } from '../../lib/MemStore';\n\ninterface Props extends ReactConfirmProps {\n  proceedLabel: string;\n  cancelLabel: string;\n  title: string | React.ReactElement;\n  options: {\n    requirePassword: boolean;\n    requireCheckbox: boolean;\n    checkboxText: string;\n    unmountAfter: number;\n  };\n}\n\nclass Confirmation extends React.Component<Props, { boxChecked: boolean }> {\n  private errors = new ErrorContainer();\n  private appState = new AppState();\n  private background = new BackgroundManager(this.appState, this.errors);\n  private accountManager = new AccountManager(\n    this.errors,\n    this.background,\n    this.appState\n  );\n\n  constructor(props: Props) {\n    super(props);\n    this.state = { boxChecked: false };\n  }\n\n  handleCheckboxChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ boxChecked: event.target.checked });\n  };\n\n  render() {\n    return (\n      <Dialog\n        open={this.props.show}\n        onClose={this.props.dismiss}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n        style={{ margin: '-1rem -0.5rem' }}\n      >\n        <DialogTitle id=\"alert-dialog-title\">{this.props.title}</DialogTitle>\n        <form\n          onSubmit={e => {\n            e.preventDefault();\n          }}\n        >\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              {this.props.confirmation}\n            </DialogContentText>\n            {this.props.options.requireCheckbox && (\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    style={{ alignSelf: 'flex-start' }}\n                    checked={this.state.boxChecked}\n                    onChange={this.handleCheckboxChange}\n                  />\n                }\n                label={this.props.options.checkboxText}\n                style={{\n                  fontSize: '0.6rem',\n                  marginRight: '-1rem',\n                  marginBottom: this.props.options.requirePassword\n                    ? '0.5rem'\n                    : 'auto'\n                }}\n              />\n            )}\n            {this.props.options.requirePassword && (\n              <FormControl>\n                <TextFieldWithFormState\n                  autoFocus={true}\n                  fieldState={\n                    this.accountManager.confirmPasswordForm.$\n                      .confirmPasswordField\n                  }\n                  required\n                  label={'Password'}\n                  type={'password'}\n                />\n              </FormControl>\n            )}\n          </DialogContent>\n          <DialogActions>\n            <Button\n              onClick={() => {\n                this.props.cancel();\n              }}\n              color=\"secondary\"\n            >\n              {this.props.cancelLabel}\n            </Button>\n            <FormControl>\n              {this.props.options.requireCheckbox &&\n              this.props.options.requirePassword ? (\n                <Button\n                  type=\"submit\"\n                  disabled={!this.state.boxChecked}\n                  onClick={async () => {\n                    let givenPassword =\n                      this.accountManager.confirmPasswordForm.$\n                        .confirmPasswordField.$;\n                    try {\n                      await this.accountManager.confirmPassword(givenPassword);\n                      this.accountManager.confirmPasswordForm.$.confirmPasswordField.reset();\n                      this.errors.dismissLast();\n                      this.props.proceed();\n                    } catch (e) {\n                      this.accountManager.confirmPasswordForm.$.confirmPasswordField.setError(\n                        (e as Error).message\n                      );\n                    }\n                  }}\n                  color=\"primary\"\n                >\n                  {this.props.proceedLabel}\n                </Button>\n              ) : this.props.options.requirePassword ? (\n                <Button\n                  type=\"submit\"\n                  onClick={async () => {\n                    let givenPassword =\n                      this.accountManager.confirmPasswordForm.$\n                        .confirmPasswordField.$;\n                    try {\n                      await this.accountManager.confirmPassword(givenPassword);\n                      this.accountManager.confirmPasswordForm.$.confirmPasswordField.reset();\n                      this.errors.dismissLast();\n                      this.props.proceed();\n                    } catch (e) {\n                      this.accountManager.confirmPasswordForm.$.confirmPasswordField.setError(\n                        (e as Error).message\n                      );\n                    }\n                  }}\n                  color=\"primary\"\n                >\n                  {this.props.proceedLabel}\n                </Button>\n              ) : (\n                <Button\n                  type=\"submit\"\n                  disabled={\n                    this.props.options.requireCheckbox\n                      ? !this.state.boxChecked\n                      : false\n                  }\n                  onClick={() => {\n                    this.props.proceed();\n                  }}\n                  color=\"primary\"\n                >\n                  {this.props.proceedLabel}\n                </Button>\n              )}\n            </FormControl>\n          </DialogActions>\n        </form>\n      </Dialog>\n    );\n  }\n}\n\nexport function confirm(\n  title: string | React.ReactElement,\n  confirmation: string | React.ReactElement,\n  proceedLabel = 'OK',\n  cancelLabel = 'cancel',\n  options: {\n    requirePassword?: boolean;\n    requireCheckbox?: boolean;\n    checkboxText?: string;\n    unmountAfter?: number;\n  } = {\n    requirePassword: false,\n    requireCheckbox: false,\n    checkboxText: '',\n    unmountAfter: 10000\n  }\n) {\n  return createConfirmation(\n    confirmable(Confirmation),\n    options.unmountAfter\n  )({\n    title,\n    confirmation,\n    proceedLabel,\n    cancelLabel,\n    options\n  });\n}\n"]},"metadata":{},"sourceType":"module"}