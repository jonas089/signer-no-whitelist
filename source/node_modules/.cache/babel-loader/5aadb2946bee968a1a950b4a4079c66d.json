{"ast":null,"code":"// Big integer base-10 printing library\n// Copyright (c) 2008-2020 Lapo Luchini <lapo@lapo.it>\n// Permission to use, copy, modify, and/or distribute this software for any\n// purpose with or without fee is hereby granted, provided that the above\n// copyright notice and this permission notice appear in all copies.\n// \n// THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\n// WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\n// MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\n// ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\n// WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\n// ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\n// OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n(typeof define != 'undefined' ? define : function (factory) {\n  'use strict';\n\n  if (typeof module == 'object') module.exports = factory();else window.int10 = factory();\n})(function () {\n  \"use strict\";\n\n  var max = 10000000000000; // biggest 10^n integer that can still fit 2^53 when multiplied by 256\n\n  /**\n   * Arbitrary length base-10 value.\n   * @param {number} value - Optional initial value (will be 0 otherwise).\n   */\n\n  function Int10(value) {\n    this.buf = [+value || 0];\n  }\n  /**\n   * Multiply value by m and add c.\n   * @param {number} m - multiplier, must be < =256\n   * @param {number} c - value to add\n   */\n\n\n  Int10.prototype.mulAdd = function (m, c) {\n    // assert(m <= 256)\n    var b = this.buf,\n        l = b.length,\n        i,\n        t;\n\n    for (i = 0; i < l; ++i) {\n      t = b[i] * m + c;\n      if (t < max) c = 0;else {\n        c = 0 | t / max;\n        t -= c * max;\n      }\n      b[i] = t;\n    }\n\n    if (c > 0) b[i] = c;\n  };\n  /**\n   * Subtract value.\n   * @param {number} c - value to subtract\n   */\n\n\n  Int10.prototype.sub = function (c) {\n    var b = this.buf,\n        l = b.length,\n        i,\n        t;\n\n    for (i = 0; i < l; ++i) {\n      t = b[i] - c;\n\n      if (t < 0) {\n        t += max;\n        c = 1;\n      } else c = 0;\n\n      b[i] = t;\n    }\n\n    while (b[b.length - 1] === 0) b.pop();\n  };\n  /**\n   * Convert to decimal string representation.\n   * @param {*} base - optional value, only value accepted is 10\n   */\n\n\n  Int10.prototype.toString = function (base) {\n    if ((base || 10) != 10) throw 'only base 10 is supported';\n    var b = this.buf,\n        s = b[b.length - 1].toString();\n\n    for (var i = b.length - 2; i >= 0; --i) s += (max + b[i]).toString().substring(1);\n\n    return s;\n  };\n  /**\n   * Convert to Number value representation.\n   * Will probably overflow 2^53 and thus become approximate.\n   */\n\n\n  Int10.prototype.valueOf = function () {\n    var b = this.buf,\n        v = 0;\n\n    for (var i = b.length - 1; i >= 0; --i) v = v * max + b[i];\n\n    return v;\n  };\n  /**\n   * Return value as a simple Number (if it is <= 10000000000000), or return this.\n   */\n\n\n  Int10.prototype.simplify = function () {\n    var b = this.buf;\n    return b.length == 1 ? b[0] : this;\n  };\n\n  return Int10;\n});","map":{"version":3,"sources":["/home/chef/Desktop/signer/node_modules/@lapo/asn1js/int10.js"],"names":["define","factory","module","exports","window","int10","max","Int10","value","buf","prototype","mulAdd","m","c","b","l","length","i","t","sub","pop","toString","base","s","substring","valueOf","v","simplify"],"mappings":"AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,CAAC,OAAOA,MAAP,IAAiB,WAAjB,GAA+BA,MAA/B,GAAwC,UAAUC,OAAV,EAAmB;AAAE;;AAC1D,MAAI,OAAOC,MAAP,IAAiB,QAArB,EAA+BA,MAAM,CAACC,OAAP,GAAiBF,OAAO,EAAxB,CAA/B,KACKG,MAAM,CAACC,KAAP,GAAeJ,OAAO,EAAtB;AACR,CAHD,EAGG,YAAY;AACf;;AAEA,MAAIK,GAAG,GAAG,cAAV,CAHe,CAGW;;AAE1B;AACA;AACA;AACA;;AACA,WAASC,KAAT,CAAeC,KAAf,EAAsB;AAClB,SAAKC,GAAL,GAAW,CAAC,CAACD,KAAD,IAAU,CAAX,CAAX;AACH;AAED;AACA;AACA;AACA;AACA;;;AACAD,EAAAA,KAAK,CAACG,SAAN,CAAgBC,MAAhB,GAAyB,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AACrC;AACA,QAAIC,CAAC,GAAG,KAAKL,GAAb;AAAA,QACIM,CAAC,GAAGD,CAAC,CAACE,MADV;AAAA,QAEIC,CAFJ;AAAA,QAEOC,CAFP;;AAGA,SAAKD,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGF,CAAhB,EAAmB,EAAEE,CAArB,EAAwB;AACpBC,MAAAA,CAAC,GAAGJ,CAAC,CAACG,CAAD,CAAD,GAAOL,CAAP,GAAWC,CAAf;AACA,UAAIK,CAAC,GAAGZ,GAAR,EACIO,CAAC,GAAG,CAAJ,CADJ,KAEK;AACDA,QAAAA,CAAC,GAAG,IAAGK,CAAC,GAAGZ,GAAX;AACAY,QAAAA,CAAC,IAAIL,CAAC,GAAGP,GAAT;AACH;AACDQ,MAAAA,CAAC,CAACG,CAAD,CAAD,GAAOC,CAAP;AACH;;AACD,QAAIL,CAAC,GAAG,CAAR,EACIC,CAAC,CAACG,CAAD,CAAD,GAAOJ,CAAP;AACP,GAjBD;AAmBA;AACA;AACA;AACA;;;AACAN,EAAAA,KAAK,CAACG,SAAN,CAAgBS,GAAhB,GAAsB,UAAUN,CAAV,EAAa;AAC/B,QAAIC,CAAC,GAAG,KAAKL,GAAb;AAAA,QACIM,CAAC,GAAGD,CAAC,CAACE,MADV;AAAA,QAEIC,CAFJ;AAAA,QAEOC,CAFP;;AAGA,SAAKD,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGF,CAAhB,EAAmB,EAAEE,CAArB,EAAwB;AACpBC,MAAAA,CAAC,GAAGJ,CAAC,CAACG,CAAD,CAAD,GAAOJ,CAAX;;AACA,UAAIK,CAAC,GAAG,CAAR,EAAW;AACPA,QAAAA,CAAC,IAAIZ,GAAL;AACAO,QAAAA,CAAC,GAAG,CAAJ;AACH,OAHD,MAIIA,CAAC,GAAG,CAAJ;;AACJC,MAAAA,CAAC,CAACG,CAAD,CAAD,GAAOC,CAAP;AACH;;AACD,WAAOJ,CAAC,CAACA,CAAC,CAACE,MAAF,GAAW,CAAZ,CAAD,KAAoB,CAA3B,EACIF,CAAC,CAACM,GAAF;AACP,GAfD;AAiBA;AACA;AACA;AACA;;;AACAb,EAAAA,KAAK,CAACG,SAAN,CAAgBW,QAAhB,GAA2B,UAAUC,IAAV,EAAgB;AACvC,QAAI,CAACA,IAAI,IAAI,EAAT,KAAgB,EAApB,EACI,MAAM,2BAAN;AACJ,QAAIR,CAAC,GAAG,KAAKL,GAAb;AAAA,QACIc,CAAC,GAAGT,CAAC,CAACA,CAAC,CAACE,MAAF,GAAW,CAAZ,CAAD,CAAgBK,QAAhB,EADR;;AAEA,SAAK,IAAIJ,CAAC,GAAGH,CAAC,CAACE,MAAF,GAAW,CAAxB,EAA2BC,CAAC,IAAI,CAAhC,EAAmC,EAAEA,CAArC,EACIM,CAAC,IAAI,CAACjB,GAAG,GAAGQ,CAAC,CAACG,CAAD,CAAR,EAAaI,QAAb,GAAwBG,SAAxB,CAAkC,CAAlC,CAAL;;AACJ,WAAOD,CAAP;AACH,GARD;AAUA;AACA;AACA;AACA;;;AACAhB,EAAAA,KAAK,CAACG,SAAN,CAAgBe,OAAhB,GAA0B,YAAY;AAClC,QAAIX,CAAC,GAAG,KAAKL,GAAb;AAAA,QACIiB,CAAC,GAAG,CADR;;AAEA,SAAK,IAAIT,CAAC,GAAGH,CAAC,CAACE,MAAF,GAAW,CAAxB,EAA2BC,CAAC,IAAI,CAAhC,EAAmC,EAAEA,CAArC,EACIS,CAAC,GAAGA,CAAC,GAAGpB,GAAJ,GAAUQ,CAAC,CAACG,CAAD,CAAf;;AACJ,WAAOS,CAAP;AACH,GAND;AAQA;AACA;AACA;;;AACAnB,EAAAA,KAAK,CAACG,SAAN,CAAgBiB,QAAhB,GAA2B,YAAY;AACnC,QAAIb,CAAC,GAAG,KAAKL,GAAb;AACA,WAAQK,CAAC,CAACE,MAAF,IAAY,CAAb,GAAkBF,CAAC,CAAC,CAAD,CAAnB,GAAyB,IAAhC;AACH,GAHD;;AAKA,SAAOP,KAAP;AAEC,CAjGD","sourcesContent":["// Big integer base-10 printing library\n// Copyright (c) 2008-2020 Lapo Luchini <lapo@lapo.it>\n\n// Permission to use, copy, modify, and/or distribute this software for any\n// purpose with or without fee is hereby granted, provided that the above\n// copyright notice and this permission notice appear in all copies.\n// \n// THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\n// WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\n// MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\n// ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\n// WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\n// ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\n// OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n\n(typeof define != 'undefined' ? define : function (factory) { 'use strict';\n    if (typeof module == 'object') module.exports = factory();\n    else window.int10 = factory();\n})(function () {\n\"use strict\";\n\nvar max = 10000000000000; // biggest 10^n integer that can still fit 2^53 when multiplied by 256\n\n/**\n * Arbitrary length base-10 value.\n * @param {number} value - Optional initial value (will be 0 otherwise).\n */\nfunction Int10(value) {\n    this.buf = [+value || 0];\n}\n\n/**\n * Multiply value by m and add c.\n * @param {number} m - multiplier, must be < =256\n * @param {number} c - value to add\n */\nInt10.prototype.mulAdd = function (m, c) {\n    // assert(m <= 256)\n    var b = this.buf,\n        l = b.length,\n        i, t;\n    for (i = 0; i < l; ++i) {\n        t = b[i] * m + c;\n        if (t < max)\n            c = 0;\n        else {\n            c = 0|(t / max);\n            t -= c * max;\n        }\n        b[i] = t;\n    }\n    if (c > 0)\n        b[i] = c;\n};\n\n/**\n * Subtract value.\n * @param {number} c - value to subtract\n */\nInt10.prototype.sub = function (c) {\n    var b = this.buf,\n        l = b.length,\n        i, t;\n    for (i = 0; i < l; ++i) {\n        t = b[i] - c;\n        if (t < 0) {\n            t += max;\n            c = 1;\n        } else\n            c = 0;\n        b[i] = t;\n    }\n    while (b[b.length - 1] === 0)\n        b.pop();\n};\n\n/**\n * Convert to decimal string representation.\n * @param {*} base - optional value, only value accepted is 10\n */\nInt10.prototype.toString = function (base) {\n    if ((base || 10) != 10)\n        throw 'only base 10 is supported';\n    var b = this.buf,\n        s = b[b.length - 1].toString();\n    for (var i = b.length - 2; i >= 0; --i)\n        s += (max + b[i]).toString().substring(1);\n    return s;\n};\n\n/**\n * Convert to Number value representation.\n * Will probably overflow 2^53 and thus become approximate.\n */\nInt10.prototype.valueOf = function () {\n    var b = this.buf,\n        v = 0;\n    for (var i = b.length - 1; i >= 0; --i)\n        v = v * max + b[i];\n    return v;\n};\n\n/**\n * Return value as a simple Number (if it is <= 10000000000000), or return this.\n */\nInt10.prototype.simplify = function () {\n    var b = this.buf;\n    return (b.length == 1) ? b[0] : this;\n};\n\nreturn Int10;\n\n});\n"]},"metadata":{},"sourceType":"script"}