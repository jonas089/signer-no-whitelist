{"ast":null,"code":"import _objectSpread from\"/home/chef/Desktop/signer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React from'react';// see https://github.com/mobxjs/mobx-react-lite/#observer-batching\nimport'mobx-react-lite/batchingForReactDom';import'./App.scss';import{Route,Switch}from'react-router-dom';import Pages from'./components/Pages';import Home from'./components/Home';import{observer}from'mobx-react';import SignDeployPage from'./components/SignDeployPage';import ConnectSignerPage from'./components/ConnectSignerPage';import AccountPage from'./components/AccountPage';import{Alert,AlertTitle}from'@material-ui/lab';import{Container}from'@material-ui/core';import{MainAppBar}from'./components/MainAppBar';import AnalyticsProvider from'./components/AnalyticsProvider';import AccountManagementPage from'./components/AccountManagementPage';import{ConnectedSitesPage}from'./components/ConnectedSitesPage';import{useIdleTimer}from'react-idle-timer';import{SignMessagePage}from'./components/SignMessagePage';import{ConfigureTimeoutPage}from'./components/ConfigureTimeout';import SecurityCheckupPrompt,{useSecurityCheckupRenderFunctions}from'./components/Prompt';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=observer(function(props){var lockOnIdle=function lockOnIdle(){if(props.accountManager.isUnLocked)props.accountManager.lock();};useIdleTimer({timeout:1000*60*props.accountManager.idleTimeoutMins,onIdle:lockOnIdle,debounce:500});var isTimeToSecurityCheckup=props.accountManager.isTimeToSecurityCheckup;var createCloseHandler=function createCloseHandler(accountManager){return function(){return accountManager.resetSecurityCheckup();};};var closeHandler=createCloseHandler(props.accountManager);var securityCheckupRenderFunctions=useSecurityCheckupRenderFunctions({closeHandler:closeHandler,accountManager:props.accountManager});return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(SecurityCheckupPrompt,_objectSpread({isOpened:isTimeToSecurityCheckup},securityCheckupRenderFunctions)),/*#__PURE__*/_jsx(AnalyticsProvider,{}),/*#__PURE__*/_jsx(MainAppBar,{accountManager:props.accountManager,connectionContainer:props.connectSignerContainer}),/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(Alerts,_objectSpread({},props)),/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{exact:true,path:Pages.Home,render:function render(_){return/*#__PURE__*/_jsx(Home,{accountManager:props.accountManager,homeContainer:props.homeContainer,connectionContainer:props.connectSignerContainer,signingContainer:props.signingContainer,popupContainer:props.popupContainer,errors:props.errors});}}),/*#__PURE__*/_jsx(Route,{exact:true,path:Pages.AccountManagement,render:function render(_){return/*#__PURE__*/_jsx(AccountManagementPage,{accountManager:props.accountManager,connectionContainer:props.connectSignerContainer,errorsContainer:props.errors});}}),/*#__PURE__*/_jsx(Route,{exact:true,path:Pages.ConnectedSites,render:function render(_){return/*#__PURE__*/_jsx(ConnectedSitesPage,{connectionContainer:props.connectSignerContainer,accountManager:props.accountManager});}}),/*#__PURE__*/_jsx(Route,{path:Pages.ImportAccount,exact:true,render:function render(_){return/*#__PURE__*/_jsx(AccountPage,{errors:props.errors,action:'Import',accountManager:props.accountManager,connectionContainer:props.connectSignerContainer});}}),/*#__PURE__*/_jsx(Route,{path:Pages.CreateAccount,exact:true,render:function render(_){return/*#__PURE__*/_jsx(AccountPage,{errors:props.errors,action:'Create',accountManager:props.accountManager,connectionContainer:props.connectSignerContainer});}}),/*#__PURE__*/_jsx(Route,{path:Pages.SignDeploy,exact:true,render:function render(_){return/*#__PURE__*/_jsx(SignDeployPage,{signingContainer:props.signingContainer,accountManager:props.accountManager,popupContainer:props.popupContainer});}}),/*#__PURE__*/_jsx(Route,{path:Pages.SignMessage,exact:true,render:function render(_){return SignMessagePage(props.signingContainer,props.popupContainer);}}),/*#__PURE__*/_jsx(Route,{path:Pages.ConnectSigner,exact:true,render:function render(_){return/*#__PURE__*/_jsx(ConnectSignerPage,{connectSignerContainer:props.connectSignerContainer,accountManager:props.accountManager});}}),/*#__PURE__*/_jsx(Route,{path:Pages.ConfigureTimeout,exact:true,render:function render(_){return/*#__PURE__*/_jsx(ConfigureTimeoutPage,{accountManager:props.accountManager});}})]})]})]});});export default App;// Alerts displays the outcome of the last async error on the top of the page.\n// Dismissing the error clears the state and removes the element.\nvar Alerts=observer(function(props){if(props.errors.lastError==null)return null;// Not using the `data-dismiss=\"alert\"` to dismiss via Bootstrap JS\n// becuase then it doesn't re-render when there's a new error.\nreturn/*#__PURE__*/_jsx(\"div\",{id:\"alert-message\",children:/*#__PURE__*/_jsxs(Alert,{severity:\"error\",onClose:function onClose(){return props.errors.dismissLast();},children:[/*#__PURE__*/_jsx(AlertTitle,{children:\"Error!\"}),props.errors.lastError]})});});","map":{"version":3,"sources":["/home/chef/Desktop/signer/src/popup/App.tsx"],"names":["React","Route","Switch","Pages","Home","observer","SignDeployPage","ConnectSignerPage","AccountPage","Alert","AlertTitle","Container","MainAppBar","AnalyticsProvider","AccountManagementPage","ConnectedSitesPage","useIdleTimer","SignMessagePage","ConfigureTimeoutPage","SecurityCheckupPrompt","useSecurityCheckupRenderFunctions","App","props","lockOnIdle","accountManager","isUnLocked","lock","timeout","idleTimeoutMins","onIdle","debounce","isTimeToSecurityCheckup","createCloseHandler","resetSecurityCheckup","closeHandler","securityCheckupRenderFunctions","connectSignerContainer","_","homeContainer","signingContainer","popupContainer","errors","AccountManagement","ConnectedSites","ImportAccount","CreateAccount","SignDeploy","SignMessage","ConnectSigner","ConfigureTimeout","Alerts","lastError","dismissLast"],"mappings":"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","sourcesContent":["import React from 'react';\n// see https://github.com/mobxjs/mobx-react-lite/#observer-batching\nimport 'mobx-react-lite/batchingForReactDom';\nimport './App.scss';\nimport { Route, Switch } from 'react-router-dom';\nimport Pages from './components/Pages';\nimport Home from './components/Home';\nimport AccountManager from './container/AccountManager';\nimport { HomeContainer } from './container/HomeContainer';\nimport { observer } from 'mobx-react';\nimport ErrorContainer from './container/ErrorContainer';\nimport SignDeployPage from './components/SignDeployPage';\nimport SigningContainer from './container/SigningContainer';\nimport ConnectSignerPage from './components/ConnectSignerPage';\nimport ConnectSignerContainer from './container/ConnectSignerContainer';\nimport AccountPage from './components/AccountPage';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport { Container } from '@material-ui/core';\nimport { MainAppBar } from './components/MainAppBar';\nimport AnalyticsProvider from './components/AnalyticsProvider';\nimport AccountManagementPage from './components/AccountManagementPage';\nimport { ConnectedSitesPage } from './components/ConnectedSitesPage';\nimport { useIdleTimer } from 'react-idle-timer';\nimport { SignMessagePage } from './components/SignMessagePage';\nimport { ConfigureTimeoutPage } from './components/ConfigureTimeout';\nimport PopupContainer from './container/PopupContainer';\nimport SecurityCheckupPrompt, {\n  useSecurityCheckupRenderFunctions\n} from './components/Prompt';\n\nexport interface AppProps {\n  errors: ErrorContainer;\n  accountManager: AccountManager;\n  popupContainer: PopupContainer;\n  homeContainer: HomeContainer;\n  signingContainer: SigningContainer;\n  connectSignerContainer: ConnectSignerContainer;\n}\n\nconst App = observer((props: AppProps) => {\n  const lockOnIdle = () => {\n    if (props.accountManager.isUnLocked) props.accountManager.lock();\n  };\n\n  useIdleTimer({\n    timeout: 1000 * 60 * props.accountManager.idleTimeoutMins,\n    onIdle: lockOnIdle,\n    debounce: 500\n  });\n\n  const { isTimeToSecurityCheckup } = props.accountManager;\n  const createCloseHandler = (accountManager: AccountManager) => () =>\n    accountManager.resetSecurityCheckup();\n  const closeHandler = createCloseHandler(props.accountManager);\n\n  const securityCheckupRenderFunctions = useSecurityCheckupRenderFunctions({\n    closeHandler,\n    accountManager: props.accountManager\n  });\n\n  return (\n    <div>\n      <SecurityCheckupPrompt\n        isOpened={isTimeToSecurityCheckup}\n        {...securityCheckupRenderFunctions}\n      />\n      <AnalyticsProvider />\n      <MainAppBar\n        accountManager={props.accountManager}\n        connectionContainer={props.connectSignerContainer}\n      />\n      <Container>\n        <Alerts {...props} />\n        <Switch>\n          <Route\n            exact\n            path={Pages.Home}\n            render={_ => (\n              <Home\n                accountManager={props.accountManager}\n                homeContainer={props.homeContainer}\n                connectionContainer={props.connectSignerContainer}\n                signingContainer={props.signingContainer}\n                popupContainer={props.popupContainer}\n                errors={props.errors}\n              />\n            )}\n          />\n          <Route\n            exact\n            path={Pages.AccountManagement}\n            render={_ => (\n              <AccountManagementPage\n                accountManager={props.accountManager}\n                connectionContainer={props.connectSignerContainer}\n                errorsContainer={props.errors}\n              />\n            )}\n          />\n          <Route\n            exact\n            path={Pages.ConnectedSites}\n            render={_ => (\n              <ConnectedSitesPage\n                connectionContainer={props.connectSignerContainer}\n                accountManager={props.accountManager}\n              />\n            )}\n          />\n          <Route\n            path={Pages.ImportAccount}\n            exact\n            render={_ => (\n              <AccountPage\n                errors={props.errors}\n                action={'Import'}\n                accountManager={props.accountManager}\n                connectionContainer={props.connectSignerContainer}\n              />\n            )}\n          />\n          <Route\n            path={Pages.CreateAccount}\n            exact\n            render={_ => (\n              <AccountPage\n                errors={props.errors}\n                action={'Create'}\n                accountManager={props.accountManager}\n                connectionContainer={props.connectSignerContainer}\n              />\n            )}\n          />\n          <Route\n            path={Pages.SignDeploy}\n            exact\n            render={_ => (\n              <SignDeployPage\n                signingContainer={props.signingContainer}\n                accountManager={props.accountManager}\n                popupContainer={props.popupContainer}\n              />\n            )}\n          />\n          <Route\n            path={Pages.SignMessage}\n            exact\n            render={_ =>\n              SignMessagePage(props.signingContainer, props.popupContainer)\n            }\n          />\n          <Route\n            path={Pages.ConnectSigner}\n            exact\n            render={_ => (\n              <ConnectSignerPage\n                connectSignerContainer={props.connectSignerContainer}\n                accountManager={props.accountManager}\n              />\n            )}\n          />\n          <Route\n            path={Pages.ConfigureTimeout}\n            exact\n            render={_ => (\n              <ConfigureTimeoutPage accountManager={props.accountManager} />\n            )}\n          />\n        </Switch>\n      </Container>\n    </div>\n  );\n});\n\nexport default App;\n\n// Alerts displays the outcome of the last async error on the top of the page.\n// Dismissing the error clears the state and removes the element.\nconst Alerts = observer((props: AppProps) => {\n  if (props.errors.lastError == null) return null;\n  // Not using the `data-dismiss=\"alert\"` to dismiss via Bootstrap JS\n  // becuase then it doesn't re-render when there's a new error.\n  return (\n    <div id=\"alert-message\">\n      <Alert severity=\"error\" onClose={() => props.errors.dismissLast()}>\n        <AlertTitle>Error!</AlertTitle>\n        {props.errors.lastError}\n      </Alert>\n    </div>\n  );\n});\n"]},"metadata":{},"sourceType":"module"}