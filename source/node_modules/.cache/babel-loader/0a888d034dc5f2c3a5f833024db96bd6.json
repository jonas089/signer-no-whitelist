{"ast":null,"code":"import _regeneratorRuntime from\"/home/chef/Desktop/signer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/chef/Desktop/signer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/home/chef/Desktop/signer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/chef/Desktop/signer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _applyDecoratedDescriptor from\"/home/chef/Desktop/signer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";var _class;import{computed}from'mobx';import{isNumberish,isURefString,motesToCSPR,numberWithSpaces,truncateString}from'../../shared';var SigningContainer=(_class=/*#__PURE__*/function(){function SigningContainer(backgroundManager,appState){_classCallCheck(this,SigningContainer);this.backgroundManager=backgroundManager;this.appState=appState;}_createClass(SigningContainer,[{key:\"deployToSign\",get:function get(){if(this.appState.unsignedDeploys.length>0){return this.appState.unsignedDeploys[0];}return null;}},{key:\"messageToSign\",get:function get(){if(this.appState.unsignedMessages.length>0){return this.appState.unsignedMessages[0];}return null;}},{key:\"parseDeployData\",value:function(){var _parseDeployData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(deployId){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return this.backgroundManager.parseDeployData(deployId);case 2:return _context.abrupt(\"return\",_context.sent);case 3:case\"end\":return _context.stop();}}},_callee,this);}));function parseDeployData(_x){return _parseDeployData.apply(this,arguments);}return parseDeployData;}()},{key:\"signDeploy\",value:function(){var _signDeploy=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(deployId){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return this.backgroundManager.signDeploy(deployId);case 2:case\"end\":return _context2.stop();}}},_callee2,this);}));function signDeploy(_x2){return _signDeploy.apply(this,arguments);}return signDeploy;}()},{key:\"cancel\",value:function(){var _cancel=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(deployId){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return this.backgroundManager.rejectSignDeploy(deployId);case 2:case\"end\":return _context3.stop();}}},_callee3,this);}));function cancel(_x3){return _cancel.apply(this,arguments);}return cancel;}()},{key:\"approveSigningMessage\",value:function(){var _approveSigningMessage=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(messageId){return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return this.backgroundManager.approveSigningMessage(messageId);case 2:case\"end\":return _context4.stop();}}},_callee4,this);}));function approveSigningMessage(_x4){return _approveSigningMessage.apply(this,arguments);}return approveSigningMessage;}()},{key:\"cancelSigningMessage\",value:function(){var _cancelSigningMessage=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(messageId){return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.next=2;return this.backgroundManager.cancelSigningMessage(messageId);case 2:case\"end\":return _context5.stop();}}},_callee5,this);}));function cancelSigningMessage(_x5){return _cancelSigningMessage.apply(this,arguments);}return cancelSigningMessage;}()}]);return SigningContainer;}(),(_applyDecoratedDescriptor(_class.prototype,\"deployToSign\",[computed],Object.getOwnPropertyDescriptor(_class.prototype,\"deployToSign\"),_class.prototype),_applyDecoratedDescriptor(_class.prototype,\"messageToSign\",[computed],Object.getOwnPropertyDescriptor(_class.prototype,\"messageToSign\"),_class.prototype)),_class);export var truncationLengthCutoff=13;export var isLongValue=function isLongValue(value){return value.length>truncationLengthCutoff;};export var isCSPRValueByKey=function isCSPRValueByKey(key){return['Amount','Payment','Transaction Fee'].includes(key);};export var shouldNotTruncate=function shouldNotTruncate(key){return['Timestamp','Chain Name'].includes(key);};export var parseRow=function parseRow(row){// Special case for items that should not be truncated for readability e.g. Timestamp\nif(shouldNotTruncate(row.key)){return row;}// The value is a list e.g. a CLList or CLTuple\nif(Array.isArray(row.value)){return row;}// The value is a stringified number e.g. an amount in motes\nif(isNumberish(row.value)){// If the number represents Motes then display the CSPR value in the tooltip\nif(isCSPRValueByKey(row.key)){row.tooltipContent=\"\".concat(motesToCSPR(row.value),\" CSPR\");}// If the number was truncated show it fully in the tooltip\nif(isLongValue(row.value)){row.tooltipContent=row.value;}// If the number is particularly long then truncate it\nrow.value=isLongValue(row.value)?truncateString(row.value,6,6):numberWithSpaces(row.value);return row;}// The value is formatted string URef\nif(isURefString(row.value)){// The main value will be truncated so display the full string in the tooltip\nrow.tooltipContent=row.value;// Due to the standard prefix and suffix we use longer chunks to show more of the unique data\nrow.value=truncateString(row.value,9,9);return row;}// The value is a long string e.g. a key or hash\nif(isLongValue(row.value)){// The main value will be truncated so display the full string in the tooltip\nrow.tooltipContent=row.value;row.value=truncateString(row.value,6,6);return row;}return row;};export default SigningContainer;","map":{"version":3,"sources":["/home/chef/Desktop/signer/src/popup/container/SigningContainer.ts"],"names":["computed","isNumberish","isURefString","motesToCSPR","numberWithSpaces","truncateString","SigningContainer","backgroundManager","appState","unsignedDeploys","length","unsignedMessages","deployId","parseDeployData","signDeploy","rejectSignDeploy","messageId","approveSigningMessage","cancelSigningMessage","truncationLengthCutoff","isLongValue","value","isCSPRValueByKey","key","includes","shouldNotTruncate","parseRow","row","Array","isArray","tooltipContent"],"mappings":"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","sourcesContent":["import { BackgroundManager } from '../BackgroundManager';\nimport { AppState } from '../../lib/MemStore';\nimport { computed } from 'mobx';\nimport {\n  isNumberish,\n  isURefString,\n  motesToCSPR,\n  numberWithSpaces,\n  SigningDataRow,\n  truncateString\n} from '../../shared';\n\nclass SigningContainer {\n  constructor(\n    private backgroundManager: BackgroundManager,\n    private appState: AppState\n  ) {}\n\n  @computed\n  get deployToSign() {\n    if (this.appState.unsignedDeploys.length > 0) {\n      return this.appState.unsignedDeploys[0];\n    }\n    return null;\n  }\n\n  @computed\n  get messageToSign() {\n    if (this.appState.unsignedMessages.length > 0) {\n      return this.appState.unsignedMessages[0];\n    }\n    return null;\n  }\n\n  async parseDeployData(deployId: number) {\n    return await this.backgroundManager.parseDeployData(deployId);\n  }\n\n  async signDeploy(deployId: number) {\n    await this.backgroundManager.signDeploy(deployId);\n  }\n\n  async cancel(deployId: number) {\n    await this.backgroundManager.rejectSignDeploy(deployId);\n  }\n\n  async approveSigningMessage(messageId: number) {\n    await this.backgroundManager.approveSigningMessage(messageId);\n  }\n\n  async cancelSigningMessage(messageId: number) {\n    await this.backgroundManager.cancelSigningMessage(messageId);\n  }\n}\n\nexport const truncationLengthCutoff = 13;\nexport const isLongValue = (value: string) =>\n  value.length > truncationLengthCutoff;\nexport const isCSPRValueByKey = (key: string) =>\n  ['Amount', 'Payment', 'Transaction Fee'].includes(key);\nexport const shouldNotTruncate = (key: string) =>\n  ['Timestamp', 'Chain Name'].includes(key);\n\nexport const parseRow = (row: SigningDataRow): SigningDataRow => {\n  // Special case for items that should not be truncated for readability e.g. Timestamp\n  if (shouldNotTruncate(row.key)) {\n    return row;\n  }\n  // The value is a list e.g. a CLList or CLTuple\n  if (Array.isArray(row.value)) {\n    return row;\n  }\n\n  // The value is a stringified number e.g. an amount in motes\n  if (isNumberish(row.value)) {\n    // If the number represents Motes then display the CSPR value in the tooltip\n    if (isCSPRValueByKey(row.key)) {\n      row.tooltipContent = `${motesToCSPR(row.value)} CSPR`;\n    }\n    // If the number was truncated show it fully in the tooltip\n    if (isLongValue(row.value)) {\n      row.tooltipContent = row.value;\n    }\n\n    // If the number is particularly long then truncate it\n    row.value = isLongValue(row.value)\n      ? truncateString(row.value, 6, 6)\n      : numberWithSpaces(row.value);\n\n    return row;\n  }\n\n  // The value is formatted string URef\n  if (isURefString(row.value)) {\n    // The main value will be truncated so display the full string in the tooltip\n    row.tooltipContent = row.value;\n    // Due to the standard prefix and suffix we use longer chunks to show more of the unique data\n    row.value = truncateString(row.value, 9, 9);\n\n    return row;\n  }\n\n  // The value is a long string e.g. a key or hash\n  if (isLongValue(row.value)) {\n    // The main value will be truncated so display the full string in the tooltip\n    row.tooltipContent = row.value;\n    row.value = truncateString(row.value, 6, 6);\n\n    return row;\n  }\n\n  return row;\n};\n\nexport default SigningContainer;\n"]},"metadata":{},"sourceType":"module"}