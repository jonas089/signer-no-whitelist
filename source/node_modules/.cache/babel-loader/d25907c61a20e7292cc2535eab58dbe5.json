{"ast":null,"code":"import React from'react';import{Link}from'react-router-dom';import{createStyles,makeStyles}from'@material-ui/core/styles';import MoreMenu from'./Menu';import HomeIcon from'@material-ui/icons/Home';import{observer}from'mobx-react';import{AppBar,Toolbar,IconButton,Button,Tooltip}from'@material-ui/core';import confirmConnect from'./ConfirmConnect';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var useStyles=makeStyles(function(theme){return createStyles({root:{width:'100vw',flexGrow:1,color:'#c4c4c4',backgroundColor:'var(--cspr-dark-blue)'},toolbarMargin:{minHeight:'40px'},menuButton:{marginRight:theme.spacing(2)},toggleWrapper:{flexGrow:1,textAlign:'center'},toggleButton:{width:'100%',height:'2rem'}});});export var MainAppBar=observer(function(props){var classes=useStyles();var _props$connectionCont=props.connectionContainer,currentTab=_props$connectionCont.currentTab,connectedSites=_props$connectionCont.connectedSites;var connected=currentTab&&connectedSites.some(function(site){return site.url===currentTab.url&&site.isConnected;});if(props.accountManager.hasCreatedVault&&props.accountManager.isUnLocked){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(AppBar,{position:\"static\",className:classes.root,color:'transparent',children:/*#__PURE__*/_jsxs(Toolbar,{children:[/*#__PURE__*/_jsx(IconButton,{edge:\"start\",component:Link,to:'/',children:/*#__PURE__*/_jsx(HomeIcon,{style:{color:'#C4C4C4'}})}),/*#__PURE__*/_jsx(Tooltip,{title:props.connectionContainer.integratedSite?props.accountManager.userAccounts.length?'Toggle Connection to Site':'Add an Account to Connect':'This site is not integrated with Signer',children:/*#__PURE__*/_jsx(\"span\",{className:classes.toggleWrapper,children:/*#__PURE__*/_jsx(Button// Toggles connection status\n,{className:classes.toggleButton,disabled:!props.connectionContainer.integratedSite||!props.accountManager.userAccounts.length,variant:\"outlined\",color:connected?'primary':'default',size:\"large\",onClick:function onClick(){if(connected){props.connectionContainer.disconnectFromSite();}else{confirmConnect().then(function(){props.connectionContainer.connectToSite();});}},style:{color:'var(--cspr-dark-blue)',backgroundColor:'#fff'},children:connected?'Connected':'Disconnected'})})}),/*#__PURE__*/_jsx(MoreMenu,{accountManager:props.accountManager})]})}),/*#__PURE__*/_jsx(\"div\",{className:classes.toolbarMargin})]});}else{return/*#__PURE__*/_jsx(\"div\",{className:classes.toolbarMargin});}});","map":{"version":3,"sources":["/home/chef/Desktop/signer/src/popup/components/MainAppBar.tsx"],"names":["React","Link","createStyles","makeStyles","MoreMenu","HomeIcon","observer","AppBar","Toolbar","IconButton","Button","Tooltip","confirmConnect","useStyles","theme","root","width","flexGrow","color","backgroundColor","toolbarMargin","minHeight","menuButton","marginRight","spacing","toggleWrapper","textAlign","toggleButton","height","MainAppBar","props","classes","connectionContainer","currentTab","connectedSites","connected","some","site","url","isConnected","accountManager","hasCreatedVault","isUnLocked","integratedSite","userAccounts","length","disconnectFromSite","then","connectToSite"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport MoreMenu from './Menu';\nimport HomeIcon from '@material-ui/icons/Home';\nimport AccountManager from '../container/AccountManager';\nimport ConnectSignerContainer from '../container/ConnectSignerContainer';\nimport { observer } from 'mobx-react';\nimport {\n  AppBar,\n  Toolbar,\n  IconButton,\n  Button,\n  Tooltip\n} from '@material-ui/core';\nimport confirmConnect from './ConfirmConnect';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100vw',\n      flexGrow: 1,\n      color: '#c4c4c4',\n      backgroundColor: 'var(--cspr-dark-blue)'\n    },\n    toolbarMargin: {\n      minHeight: '40px'\n    },\n    menuButton: {\n      marginRight: theme.spacing(2)\n    },\n    toggleWrapper: {\n      flexGrow: 1,\n      textAlign: 'center'\n    },\n    toggleButton: {\n      width: '100%',\n      height: '2rem'\n    }\n  })\n);\n\ninterface Props {\n  accountManager: AccountManager;\n  connectionContainer: ConnectSignerContainer;\n}\n\nexport const MainAppBar = observer((props: Props) => {\n  const classes = useStyles();\n  const { currentTab, connectedSites } = props.connectionContainer;\n  const connected =\n    currentTab &&\n    connectedSites.some(\n      site => site.url === currentTab.url && site.isConnected\n    );\n  if (props.accountManager.hasCreatedVault && props.accountManager.isUnLocked) {\n    return (\n      <>\n        <AppBar\n          position=\"static\"\n          className={classes.root}\n          color={'transparent'}\n        >\n          <Toolbar>\n            <IconButton edge=\"start\" component={Link} to={'/'}>\n              <HomeIcon style={{ color: '#C4C4C4' }} />\n            </IconButton>\n            <Tooltip\n              title={\n                props.connectionContainer.integratedSite\n                  ? props.accountManager.userAccounts.length\n                    ? 'Toggle Connection to Site'\n                    : 'Add an Account to Connect'\n                  : 'This site is not integrated with Signer'\n              }\n            >\n              <span className={classes.toggleWrapper}>\n                <Button\n                  // Toggles connection status\n                  className={classes.toggleButton}\n                  disabled={\n                    !props.connectionContainer.integratedSite ||\n                    !props.accountManager.userAccounts.length\n                  }\n                  variant=\"outlined\"\n                  color={connected ? 'primary' : 'default'}\n                  size=\"large\"\n                  onClick={() => {\n                    if (connected) {\n                      props.connectionContainer.disconnectFromSite();\n                    } else {\n                      confirmConnect().then(() => {\n                        props.connectionContainer.connectToSite();\n                      });\n                    }\n                  }}\n                  style={{\n                    color: 'var(--cspr-dark-blue)',\n                    backgroundColor: '#fff'\n                  }}\n                >\n                  {connected ? 'Connected' : 'Disconnected'}\n                </Button>\n              </span>\n            </Tooltip>\n            <MoreMenu accountManager={props.accountManager} />\n          </Toolbar>\n        </AppBar>\n        <div className={classes.toolbarMargin}></div>\n      </>\n    );\n  } else {\n    return <div className={classes.toolbarMargin}></div>;\n  }\n});\n"]},"metadata":{},"sourceType":"module"}