{"ast":null,"code":"\"use strict\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar mobx_1 = require(\"mobx\");\n\nvar types_1 = require(\"./types\");\n\nvar utils_1 = require(\"../internal/utils\");\n/**\n * Helps maintain the value + error information about a field\n *\n * This is the glue between the *page* and *field* in the presence of invalid states.\n */\n\n\nvar FieldState =\n/** @class */\nfunction () {\n  function FieldState(_initValue) {\n    var _this = this;\n\n    this._initValue = _initValue;\n    /** If the field has been touched */\n\n    this.dirty = false;\n    /**\n     * Set to true if a validation run has been completed since init\n     * Use case:\n     * - to show a green color in the field : `hasError == false && hasBeenValidated == true`\n     **/\n\n    this.hasBeenValidated = false;\n    /**\n     * Allows you to preserve the `_autoValidationEnabled` value across `reinit`s\n     */\n\n    this._autoValidationDefault = true;\n\n    this.setAutoValidationDefault = function (autoValidationDefault) {\n      _this._autoValidationDefault = autoValidationDefault;\n      _this._autoValidationEnabled = autoValidationDefault;\n      return _this;\n    };\n\n    this.getAutoValidationDefault = function () {\n      return _this._autoValidationDefault;\n    };\n\n    this._autoValidationEnabled = this._autoValidationDefault;\n\n    this.enableAutoValidation = function () {\n      _this._autoValidationEnabled = true;\n      return _this;\n    };\n\n    this.enableAutoValidationAndValidate = function () {\n      _this._autoValidationEnabled = true;\n      return _this.validate();\n    };\n\n    this.disableAutoValidation = function () {\n      _this._autoValidationEnabled = false;\n      return _this;\n    };\n\n    this._validators = [];\n\n    this.validators = function () {\n      var validators = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        validators[_i] = arguments[_i];\n      }\n\n      _this._validators = validators;\n      return _this;\n    };\n    /**\n     * onUpdate is called whenever we change something in our local state that is significant\n     * - any validation() call\n     * - any reset() call\n     */\n\n\n    this.onUpdate = function (handler) {\n      _this._onUpdate = handler;\n      return _this;\n    };\n\n    this.executeOnUpdate = function () {\n      _this._onUpdate && _this._onUpdate(_this);\n    };\n\n    this.onDidChange = function (handler) {\n      _this._onDidChange = handler;\n      return _this;\n    };\n\n    this.executeOnDidChange = function (config) {\n      _this._onDidChange && _this._onDidChange(config);\n    };\n\n    this.setAutoValidationDebouncedMs = function (milliseconds) {\n      _this.queueValidation = mobx_1.action(utils_1.debounce(_this.queuedValidationWakeup, milliseconds));\n      return _this;\n    };\n    /** Trackers for validation */\n\n\n    this.lastValidationRequest = 0;\n    this.preventNextQueuedValidation = false;\n    /** On change on the component side */\n\n    this.onChange = function (value) {\n      // no long prevent any debounced validation request\n      _this.preventNextQueuedValidation = false; // Store local old value for onDidChange\n\n      var oldValue = _this.value; // Immediately set for local ui binding\n\n      _this.value = value; // Call on did change if any\n\n      _this.executeOnDidChange({\n        newValue: value,\n        oldValue: oldValue\n      });\n\n      _this.dirty = true;\n\n      _this.executeOnUpdate();\n\n      if (_this._autoValidationEnabled) {\n        _this.queueValidation();\n      }\n    };\n    /**\n     * If the page wants to reinitialize the field,\n     * it should call this function\n     */\n\n\n    this.reset = function (value) {\n      if (value === void 0) {\n        value = _this._initValue;\n      } // If a previous validation comes back ignore it\n\n\n      _this.preventNextQueuedValidation = true; // This value vetos all previous values\n\n      _this._autoValidationEnabled = _this._autoValidationDefault;\n      _this.value = value;\n      _this.error = undefined;\n      _this.dirty = false;\n      _this.hasBeenValidated = false;\n      _this.$ = value;\n\n      _this._on$Reinit();\n\n      _this.executeOnUpdate();\n    };\n\n    this.validating = false;\n    /**\n     * Runs validation on the current value immediately\n     */\n\n    this.validate = function () {\n      _this.lastValidationRequest++;\n      var lastValidationRequest = _this.lastValidationRequest;\n      _this.validating = true;\n      var value = _this.value;\n      return types_1.applyValidators(_this.value, _this._validators || []).then(mobx_1.action(function (fieldError) {\n        /**\n         * If validation comes back out of order then the result of this validation is not siginificant\n         * We simply copy the value from the last validation attempt\n         */\n        if (_this.lastValidationRequest !== lastValidationRequest) {\n          if (_this.hasError) {\n            return {\n              hasError: true\n            };\n          } else {\n            return {\n              hasError: false,\n              value: _this.$\n            };\n          }\n        }\n\n        _this.validating = false;\n        _this.hasBeenValidated = true;\n        /** For any change in field error, update our error */\n\n        if (fieldError != _this.error) {\n          _this.error = fieldError;\n        }\n        /** Check for error */\n\n\n        var hasError = _this.hasError;\n        /** If no error */\n\n        if (!hasError) {\n          /** Copy over the value to validated value */\n          if (_this.$ !== value) {\n            _this.$ = value;\n          }\n          /** Trigger any form level validations if required */\n\n\n          _this._on$ValidationPass();\n        }\n        /** before returning update */\n\n\n        _this.executeOnUpdate();\n        /** return a result based on error status */\n\n\n        if (hasError) {\n          return {\n            hasError: true\n          };\n        } else {\n          return {\n            hasError: false,\n            value: value\n          };\n        }\n      }));\n    };\n\n    this.queuedValidationWakeup = function () {\n      if (_this.preventNextQueuedValidation) {\n        _this.preventNextQueuedValidation = false;\n        return;\n      }\n\n      _this.validate();\n    };\n    /**\n     * Runs validation with debouncing to keep the UI super smoothly responsive\n     * NOTE:\n     * - also setup in constructor\n     * - Not using `action` from mobx *here* as it throws off our type definitions\n     */\n\n\n    this.queueValidation = utils_1.debounce(this.queuedValidationWakeup, 200);\n    /**\n     * Composible fields (fields that work in conjuction with FormState)\n     */\n\n    this._on$ValidationPass = function () {};\n\n    this._on$Reinit = function () {};\n\n    this._setCompositionParent = function (config) {\n      _this._on$ValidationPass = function () {\n        return mobx_1.runInAction(config.on$ValidationPass);\n      };\n\n      _this._on$Reinit = function () {\n        return mobx_1.runInAction(config.on$Reinit);\n      };\n    };\n\n    mobx_1.runInAction(function () {\n      _this.value = _initValue;\n      _this.$ = _initValue;\n      /**\n       * Automatic validation configuration\n       */\n\n      _this.queueValidation = mobx_1.action(utils_1.debounce(_this.queuedValidationWakeup, 200));\n      _this._autoValidationEnabled = true;\n    });\n  }\n  /**\n   * Allows you to set an error on a field lazily\n   * Use case:\n   *  You validate some things on client (e.g. isRequired)\n   *  You then validate the field on the backend with an explict action (e.g. continue button)\n   *  You now want to highlight an error from the backend for this field\n   **/\n\n\n  FieldState.prototype.setError = function (error) {\n    this.error = error;\n  };\n\n  Object.defineProperty(FieldState.prototype, \"hasError\", {\n    get: function () {\n      return !!this.error;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  __decorate([mobx_1.observable], FieldState.prototype, \"value\", void 0);\n\n  __decorate([mobx_1.observable], FieldState.prototype, \"error\", void 0);\n\n  __decorate([mobx_1.action], FieldState.prototype, \"setError\", null);\n\n  __decorate([mobx_1.observable], FieldState.prototype, \"dirty\", void 0);\n\n  __decorate([mobx_1.observable], FieldState.prototype, \"$\", void 0);\n\n  __decorate([mobx_1.observable], FieldState.prototype, \"hasBeenValidated\", void 0);\n\n  __decorate([mobx_1.observable], FieldState.prototype, \"_autoValidationDefault\", void 0);\n\n  __decorate([mobx_1.action], FieldState.prototype, \"setAutoValidationDefault\", void 0);\n\n  __decorate([mobx_1.action], FieldState.prototype, \"getAutoValidationDefault\", void 0);\n\n  __decorate([mobx_1.observable], FieldState.prototype, \"_autoValidationEnabled\", void 0);\n\n  __decorate([mobx_1.action], FieldState.prototype, \"enableAutoValidation\", void 0);\n\n  __decorate([mobx_1.action], FieldState.prototype, \"enableAutoValidationAndValidate\", void 0);\n\n  __decorate([mobx_1.action], FieldState.prototype, \"disableAutoValidation\", void 0);\n\n  __decorate([mobx_1.action], FieldState.prototype, \"validators\", void 0);\n\n  __decorate([mobx_1.action], FieldState.prototype, \"onUpdate\", void 0);\n\n  __decorate([mobx_1.action], FieldState.prototype, \"executeOnUpdate\", void 0);\n\n  __decorate([mobx_1.action], FieldState.prototype, \"onDidChange\", void 0);\n\n  __decorate([mobx_1.action], FieldState.prototype, \"executeOnDidChange\", void 0);\n\n  __decorate([mobx_1.action], FieldState.prototype, \"setAutoValidationDebouncedMs\", void 0);\n\n  __decorate([mobx_1.observable], FieldState.prototype, \"lastValidationRequest\", void 0);\n\n  __decorate([mobx_1.observable], FieldState.prototype, \"preventNextQueuedValidation\", void 0);\n\n  __decorate([mobx_1.action], FieldState.prototype, \"onChange\", void 0);\n\n  __decorate([mobx_1.action], FieldState.prototype, \"reset\", void 0);\n\n  __decorate([mobx_1.observable], FieldState.prototype, \"validating\", void 0);\n\n  __decorate([mobx_1.action], FieldState.prototype, \"validate\", void 0);\n\n  __decorate([mobx_1.action], FieldState.prototype, \"queuedValidationWakeup\", void 0);\n\n  __decorate([mobx_1.action], FieldState.prototype, \"_setCompositionParent\", void 0);\n\n  return FieldState;\n}();\n\nexports.FieldState = FieldState;","map":{"version":3,"sources":["/home/chef/Desktop/signer/node_modules/formstate/lib/core/fieldState.js"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","exports","value","mobx_1","require","types_1","utils_1","FieldState","_initValue","_this","dirty","hasBeenValidated","_autoValidationDefault","setAutoValidationDefault","autoValidationDefault","_autoValidationEnabled","getAutoValidationDefault","enableAutoValidation","enableAutoValidationAndValidate","validate","disableAutoValidation","_validators","validators","_i","onUpdate","handler","_onUpdate","executeOnUpdate","onDidChange","_onDidChange","executeOnDidChange","config","setAutoValidationDebouncedMs","milliseconds","queueValidation","action","debounce","queuedValidationWakeup","lastValidationRequest","preventNextQueuedValidation","onChange","oldValue","newValue","reset","error","undefined","$","_on$Reinit","validating","applyValidators","then","fieldError","hasError","_on$ValidationPass","_setCompositionParent","runInAction","on$ValidationPass","on$Reinit","prototype","setError","get","enumerable","configurable","observable"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar mobx_1 = require(\"mobx\");\nvar types_1 = require(\"./types\");\nvar utils_1 = require(\"../internal/utils\");\n/**\n * Helps maintain the value + error information about a field\n *\n * This is the glue between the *page* and *field* in the presence of invalid states.\n */\nvar FieldState = /** @class */ (function () {\n    function FieldState(_initValue) {\n        var _this = this;\n        this._initValue = _initValue;\n        /** If the field has been touched */\n        this.dirty = false;\n        /**\n         * Set to true if a validation run has been completed since init\n         * Use case:\n         * - to show a green color in the field : `hasError == false && hasBeenValidated == true`\n         **/\n        this.hasBeenValidated = false;\n        /**\n         * Allows you to preserve the `_autoValidationEnabled` value across `reinit`s\n         */\n        this._autoValidationDefault = true;\n        this.setAutoValidationDefault = function (autoValidationDefault) {\n            _this._autoValidationDefault = autoValidationDefault;\n            _this._autoValidationEnabled = autoValidationDefault;\n            return _this;\n        };\n        this.getAutoValidationDefault = function () { return _this._autoValidationDefault; };\n        this._autoValidationEnabled = this._autoValidationDefault;\n        this.enableAutoValidation = function () {\n            _this._autoValidationEnabled = true;\n            return _this;\n        };\n        this.enableAutoValidationAndValidate = function () {\n            _this._autoValidationEnabled = true;\n            return _this.validate();\n        };\n        this.disableAutoValidation = function () {\n            _this._autoValidationEnabled = false;\n            return _this;\n        };\n        this._validators = [];\n        this.validators = function () {\n            var validators = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                validators[_i] = arguments[_i];\n            }\n            _this._validators = validators;\n            return _this;\n        };\n        /**\n         * onUpdate is called whenever we change something in our local state that is significant\n         * - any validation() call\n         * - any reset() call\n         */\n        this.onUpdate = function (handler) {\n            _this._onUpdate = handler;\n            return _this;\n        };\n        this.executeOnUpdate = function () {\n            _this._onUpdate && _this._onUpdate(_this);\n        };\n        this.onDidChange = function (handler) {\n            _this._onDidChange = handler;\n            return _this;\n        };\n        this.executeOnDidChange = function (config) {\n            _this._onDidChange && _this._onDidChange(config);\n        };\n        this.setAutoValidationDebouncedMs = function (milliseconds) {\n            _this.queueValidation = mobx_1.action(utils_1.debounce(_this.queuedValidationWakeup, milliseconds));\n            return _this;\n        };\n        /** Trackers for validation */\n        this.lastValidationRequest = 0;\n        this.preventNextQueuedValidation = false;\n        /** On change on the component side */\n        this.onChange = function (value) {\n            // no long prevent any debounced validation request\n            _this.preventNextQueuedValidation = false;\n            // Store local old value for onDidChange\n            var oldValue = _this.value;\n            // Immediately set for local ui binding\n            _this.value = value;\n            // Call on did change if any\n            _this.executeOnDidChange({ newValue: value, oldValue: oldValue });\n            _this.dirty = true;\n            _this.executeOnUpdate();\n            if (_this._autoValidationEnabled) {\n                _this.queueValidation();\n            }\n        };\n        /**\n         * If the page wants to reinitialize the field,\n         * it should call this function\n         */\n        this.reset = function (value) {\n            if (value === void 0) { value = _this._initValue; }\n            // If a previous validation comes back ignore it\n            _this.preventNextQueuedValidation = true;\n            // This value vetos all previous values\n            _this._autoValidationEnabled = _this._autoValidationDefault;\n            _this.value = value;\n            _this.error = undefined;\n            _this.dirty = false;\n            _this.hasBeenValidated = false;\n            _this.$ = value;\n            _this._on$Reinit();\n            _this.executeOnUpdate();\n        };\n        this.validating = false;\n        /**\n         * Runs validation on the current value immediately\n         */\n        this.validate = function () {\n            _this.lastValidationRequest++;\n            var lastValidationRequest = _this.lastValidationRequest;\n            _this.validating = true;\n            var value = _this.value;\n            return types_1.applyValidators(_this.value, _this._validators || [])\n                .then(mobx_1.action(function (fieldError) {\n                /**\n                 * If validation comes back out of order then the result of this validation is not siginificant\n                 * We simply copy the value from the last validation attempt\n                 */\n                if (_this.lastValidationRequest !== lastValidationRequest) {\n                    if (_this.hasError) {\n                        return { hasError: true };\n                    }\n                    else {\n                        return {\n                            hasError: false,\n                            value: _this.$,\n                        };\n                    }\n                }\n                _this.validating = false;\n                _this.hasBeenValidated = true;\n                /** For any change in field error, update our error */\n                if (fieldError != _this.error) {\n                    _this.error = fieldError;\n                }\n                /** Check for error */\n                var hasError = _this.hasError;\n                /** If no error */\n                if (!hasError) {\n                    /** Copy over the value to validated value */\n                    if (_this.$ !== value) {\n                        _this.$ = value;\n                    }\n                    /** Trigger any form level validations if required */\n                    _this._on$ValidationPass();\n                }\n                /** before returning update */\n                _this.executeOnUpdate();\n                /** return a result based on error status */\n                if (hasError) {\n                    return { hasError: true };\n                }\n                else {\n                    return {\n                        hasError: false,\n                        value: value\n                    };\n                }\n            }));\n        };\n        this.queuedValidationWakeup = function () {\n            if (_this.preventNextQueuedValidation) {\n                _this.preventNextQueuedValidation = false;\n                return;\n            }\n            _this.validate();\n        };\n        /**\n         * Runs validation with debouncing to keep the UI super smoothly responsive\n         * NOTE:\n         * - also setup in constructor\n         * - Not using `action` from mobx *here* as it throws off our type definitions\n         */\n        this.queueValidation = utils_1.debounce(this.queuedValidationWakeup, 200);\n        /**\n         * Composible fields (fields that work in conjuction with FormState)\n         */\n        this._on$ValidationPass = function () { };\n        this._on$Reinit = function () { };\n        this._setCompositionParent = function (config) {\n            _this._on$ValidationPass = function () { return mobx_1.runInAction(config.on$ValidationPass); };\n            _this._on$Reinit = function () { return mobx_1.runInAction(config.on$Reinit); };\n        };\n        mobx_1.runInAction(function () {\n            _this.value = _initValue;\n            _this.$ = _initValue;\n            /**\n             * Automatic validation configuration\n             */\n            _this.queueValidation = mobx_1.action(utils_1.debounce(_this.queuedValidationWakeup, 200));\n            _this._autoValidationEnabled = true;\n        });\n    }\n    /**\n     * Allows you to set an error on a field lazily\n     * Use case:\n     *  You validate some things on client (e.g. isRequired)\n     *  You then validate the field on the backend with an explict action (e.g. continue button)\n     *  You now want to highlight an error from the backend for this field\n     **/\n    FieldState.prototype.setError = function (error) {\n        this.error = error;\n    };\n    Object.defineProperty(FieldState.prototype, \"hasError\", {\n        get: function () {\n            return !!this.error;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    __decorate([\n        mobx_1.observable\n    ], FieldState.prototype, \"value\", void 0);\n    __decorate([\n        mobx_1.observable\n    ], FieldState.prototype, \"error\", void 0);\n    __decorate([\n        mobx_1.action\n    ], FieldState.prototype, \"setError\", null);\n    __decorate([\n        mobx_1.observable\n    ], FieldState.prototype, \"dirty\", void 0);\n    __decorate([\n        mobx_1.observable\n    ], FieldState.prototype, \"$\", void 0);\n    __decorate([\n        mobx_1.observable\n    ], FieldState.prototype, \"hasBeenValidated\", void 0);\n    __decorate([\n        mobx_1.observable\n    ], FieldState.prototype, \"_autoValidationDefault\", void 0);\n    __decorate([\n        mobx_1.action\n    ], FieldState.prototype, \"setAutoValidationDefault\", void 0);\n    __decorate([\n        mobx_1.action\n    ], FieldState.prototype, \"getAutoValidationDefault\", void 0);\n    __decorate([\n        mobx_1.observable\n    ], FieldState.prototype, \"_autoValidationEnabled\", void 0);\n    __decorate([\n        mobx_1.action\n    ], FieldState.prototype, \"enableAutoValidation\", void 0);\n    __decorate([\n        mobx_1.action\n    ], FieldState.prototype, \"enableAutoValidationAndValidate\", void 0);\n    __decorate([\n        mobx_1.action\n    ], FieldState.prototype, \"disableAutoValidation\", void 0);\n    __decorate([\n        mobx_1.action\n    ], FieldState.prototype, \"validators\", void 0);\n    __decorate([\n        mobx_1.action\n    ], FieldState.prototype, \"onUpdate\", void 0);\n    __decorate([\n        mobx_1.action\n    ], FieldState.prototype, \"executeOnUpdate\", void 0);\n    __decorate([\n        mobx_1.action\n    ], FieldState.prototype, \"onDidChange\", void 0);\n    __decorate([\n        mobx_1.action\n    ], FieldState.prototype, \"executeOnDidChange\", void 0);\n    __decorate([\n        mobx_1.action\n    ], FieldState.prototype, \"setAutoValidationDebouncedMs\", void 0);\n    __decorate([\n        mobx_1.observable\n    ], FieldState.prototype, \"lastValidationRequest\", void 0);\n    __decorate([\n        mobx_1.observable\n    ], FieldState.prototype, \"preventNextQueuedValidation\", void 0);\n    __decorate([\n        mobx_1.action\n    ], FieldState.prototype, \"onChange\", void 0);\n    __decorate([\n        mobx_1.action\n    ], FieldState.prototype, \"reset\", void 0);\n    __decorate([\n        mobx_1.observable\n    ], FieldState.prototype, \"validating\", void 0);\n    __decorate([\n        mobx_1.action\n    ], FieldState.prototype, \"validate\", void 0);\n    __decorate([\n        mobx_1.action\n    ], FieldState.prototype, \"queuedValidationWakeup\", void 0);\n    __decorate([\n        mobx_1.action\n    ], FieldState.prototype, \"_setCompositionParent\", void 0);\n    return FieldState;\n}());\nexports.FieldState = FieldState;\n"]},"metadata":{},"sourceType":"script"}