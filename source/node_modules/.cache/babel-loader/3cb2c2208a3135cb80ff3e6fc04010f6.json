{"ast":null,"code":"import _regeneratorRuntime from\"/home/chef/Desktop/signer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/chef/Desktop/signer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/home/chef/Desktop/signer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/chef/Desktop/signer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _applyDecoratedDescriptor from\"/home/chef/Desktop/signer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";var _class;import{action,computed}from'mobx';import{FieldState,FormState}from'formstate';import{valueRequired}from'../../lib/FormValidator';var AccountManager=(_class=/*#__PURE__*/function(){function AccountManager(errors,backgroundManager,appState){_classCallCheck(this,AccountManager);this.errors=errors;this.backgroundManager=backgroundManager;this.appState=appState;this.confirmPasswordForm=new FormState({confirmPasswordField:new FieldState('').validators(valueRequired)});}_createClass(AccountManager,[{key:\"createNewVault\",value:function(){var _createNewVault=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(password){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return this.errors.withCapture(this.backgroundManager.createNewVault(password));case 2:case\"end\":return _context.stop();}}},_callee,this);}));function createNewVault(_x){return _createNewVault.apply(this,arguments);}return createNewVault;}()},{key:\"importUserAccount\",value:function(){var _importUserAccount=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(name,secretKeyBase64,algorithm,backedUp){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:return _context2.abrupt(\"return\",this.backgroundManager.importUserAccount(name,secretKeyBase64,algorithm,backedUp));case 1:case\"end\":return _context2.stop();}}},_callee2,this);}));function importUserAccount(_x2,_x3,_x4,_x5){return _importUserAccount.apply(this,arguments);}return importUserAccount;}()},{key:\"removeUserAccount\",value:function(){var _removeUserAccount=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(name){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:return _context3.abrupt(\"return\",this.backgroundManager.removeUserAccount(name));case 1:case\"end\":return _context3.stop();}}},_callee3,this);}));function removeUserAccount(_x6){return _removeUserAccount.apply(this,arguments);}return removeUserAccount;}()},{key:\"reorderAccount\",value:function(){var _reorderAccount=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(startIndex,endIndex){var len,removed;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:// the data flow is always from background to frontend.\n// we need do reorder operations on both background and frontend side,\n// so that UI won't get jitter\nlen=this.appState.userAccounts.length;if(!(startIndex<0||endIndex<0||startIndex>=len||endIndex>=len)){_context4.next=3;break;}throw new Error('Invalid index number');case 3:if(!(startIndex===endIndex)){_context4.next=5;break;}return _context4.abrupt(\"return\");case 5:removed=this.appState.userAccounts.spliceWithArray(startIndex,1);this.appState.userAccounts.spliceWithArray(endIndex,0,removed);return _context4.abrupt(\"return\",this.backgroundManager.reorderAccount(startIndex,endIndex));case 8:case\"end\":return _context4.stop();}}},_callee4,this);}));function reorderAccount(_x7,_x8){return _reorderAccount.apply(this,arguments);}return reorderAccount;}()},{key:\"switchToAccount\",value:function switchToAccount(accountName){return this.backgroundManager.switchToAccount(accountName);}},{key:\"userAccounts\",get:function get(){return this.appState.userAccounts;}},{key:\"isTimeToSecurityCheckup\",get:function get(){return this.appState.isTimeToSecurityCheckup;}},{key:\"resetSecurityCheckup\",value:function(){var _resetSecurityCheckup=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(){return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.next=2;return this.backgroundManager.resetSecurityCheckup();case 2:return _context5.abrupt(\"return\",_context5.sent);case 3:case\"end\":return _context5.stop();}}},_callee5,this);}));function resetSecurityCheckup(){return _resetSecurityCheckup.apply(this,arguments);}return resetSecurityCheckup;}()},{key:\"isBackedUp\",value:function(){var _isBackedUp=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(alias){return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:_context6.next=2;return this.backgroundManager.isBackedUp(alias);case 2:return _context6.abrupt(\"return\",_context6.sent);case 3:case\"end\":return _context6.stop();}}},_callee6,this);}));function isBackedUp(_x9){return _isBackedUp.apply(this,arguments);}return isBackedUp;}()},{key:\"downloadPemFiles\",value:function(){var _downloadPemFiles=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee7(alias){return _regeneratorRuntime.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:// Save the secret and public keys to disk.\nthis.backgroundManager.downloadAccountKeys(alias);case 1:case\"end\":return _context7.stop();}}},_callee7,this);}));function downloadPemFiles(_x10){return _downloadPemFiles.apply(this,arguments);}return downloadPemFiles;}()},{key:\"downloadActiveKey\",value:function(){var _downloadActiveKey=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee8(){var userAccount;return _regeneratorRuntime.wrap(function _callee8$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:_context8.next=2;return this.backgroundManager.getActiveUserAccount();case 2:userAccount=_context8.sent;// Save the secret and public keys to disk.\nthis.downloadPemFiles(userAccount.alias);case 4:case\"end\":return _context8.stop();}}},_callee8,this);}));function downloadActiveKey(){return _downloadActiveKey.apply(this,arguments);}return downloadActiveKey;}()},{key:\"getActivePublicKeyHex\",value:function(){var _getActivePublicKeyHex=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee9(){return _regeneratorRuntime.wrap(function _callee9$(_context9){while(1){switch(_context9.prev=_context9.next){case 0:_context9.next=2;return this.backgroundManager.getActivePublicKeyHex();case 2:return _context9.abrupt(\"return\",_context9.sent);case 3:case\"end\":return _context9.stop();}}},_callee9,this);}));function getActivePublicKeyHex(){return _getActivePublicKeyHex.apply(this,arguments);}return getActivePublicKeyHex;}()},{key:\"getActiveAccountHash\",value:function(){var _getActiveAccountHash=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee10(){return _regeneratorRuntime.wrap(function _callee10$(_context10){while(1){switch(_context10.prev=_context10.next){case 0:_context10.next=2;return this.backgroundManager.getActiveAccountHash();case 2:return _context10.abrupt(\"return\",_context10.sent);case 3:case\"end\":return _context10.stop();}}},_callee10,this);}));function getActiveAccountHash(){return _getActiveAccountHash.apply(this,arguments);}return getActiveAccountHash;}()},{key:\"getPublicKeyHexByAlias\",value:function(){var _getPublicKeyHexByAlias=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee11(alias){return _regeneratorRuntime.wrap(function _callee11$(_context11){while(1){switch(_context11.prev=_context11.next){case 0:_context11.next=2;return this.backgroundManager.getPublicKeyHexByAlias(alias);case 2:return _context11.abrupt(\"return\",_context11.sent);case 3:case\"end\":return _context11.stop();}}},_callee11,this);}));function getPublicKeyHexByAlias(_x11){return _getPublicKeyHexByAlias.apply(this,arguments);}return getPublicKeyHexByAlias;}()},{key:\"getAccountHashByAlias\",value:function(){var _getAccountHashByAlias=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee12(alias){return _regeneratorRuntime.wrap(function _callee12$(_context12){while(1){switch(_context12.prev=_context12.next){case 0:_context12.next=2;return this.backgroundManager.getAccountHashByAlias(alias);case 2:return _context12.abrupt(\"return\",_context12.sent);case 3:case\"end\":return _context12.stop();}}},_callee12,this);}));function getAccountHashByAlias(_x12){return _getAccountHashByAlias.apply(this,arguments);}return getAccountHashByAlias;}()},{key:\"lock\",value:function(){var _lock=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee13(){return _regeneratorRuntime.wrap(function _callee13$(_context13){while(1){switch(_context13.prev=_context13.next){case 0:return _context13.abrupt(\"return\",this.backgroundManager.lock());case 1:case\"end\":return _context13.stop();}}},_callee13,this);}));function lock(){return _lock.apply(this,arguments);}return lock;}()},{key:\"unlock\",value:function(){var _unlock=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee14(password){return _regeneratorRuntime.wrap(function _callee14$(_context14){while(1){switch(_context14.prev=_context14.next){case 0:return _context14.abrupt(\"return\",this.backgroundManager.unlock(password));case 1:case\"end\":return _context14.stop();}}},_callee14,this);}));function unlock(_x13){return _unlock.apply(this,arguments);}return unlock;}()},{key:\"hasCreatedVault\",get:function get(){return this.appState.hasCreatedVault;}},{key:\"resetVault\",value:function(){var _resetVault=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee15(){return _regeneratorRuntime.wrap(function _callee15$(_context15){while(1){switch(_context15.prev=_context15.next){case 0:return _context15.abrupt(\"return\",this.backgroundManager.resetVault());case 1:case\"end\":return _context15.stop();}}},_callee15,this);}));function resetVault(){return _resetVault.apply(this,arguments);}return resetVault;}()},{key:\"isUnLocked\",get:function get(){return this.appState.isUnlocked;}},{key:\"activeUserAccount\",get:function get(){return this.appState.activeUserAccount;}},{key:\"remainingUnlockAttempts\",get:function get(){return this.appState.unlockAttempts;}},{key:\"isLockedOut\",get:function get(){return this.appState.lockedOut;}},{key:\"resetLockout\",value:function(){var _resetLockout=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee16(){return _regeneratorRuntime.wrap(function _callee16$(_context16){while(1){switch(_context16.prev=_context16.next){case 0:return _context16.abrupt(\"return\",this.backgroundManager.resetLockout());case 1:case\"end\":return _context16.stop();}}},_callee16,this);}));function resetLockout(){return _resetLockout.apply(this,arguments);}return resetLockout;}()},{key:\"startLockoutTimer\",value:function(){var _startLockoutTimer=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee17(timeInMinutes){return _regeneratorRuntime.wrap(function _callee17$(_context17){while(1){switch(_context17.prev=_context17.next){case 0:return _context17.abrupt(\"return\",this.backgroundManager.startLockoutTimer(timeInMinutes));case 1:case\"end\":return _context17.stop();}}},_callee17,this);}));function startLockoutTimer(_x14){return _startLockoutTimer.apply(this,arguments);}return startLockoutTimer;}()},{key:\"lockoutTimerStarted\",get:function get(){return this.appState.lockoutTimerStarted;}},{key:\"timerDuration\",get:function get(){return this.appState.timerDurationMins;}},{key:\"remainingMins\",get:function get(){return this.appState.remainingMins;}},{key:\"resetLockoutTimer\",value:function(){var _resetLockoutTimer=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee18(){return _regeneratorRuntime.wrap(function _callee18$(_context18){while(1){switch(_context18.prev=_context18.next){case 0:return _context18.abrupt(\"return\",this.backgroundManager.resetLockoutTimer());case 1:case\"end\":return _context18.stop();}}},_callee18,this);}));function resetLockoutTimer(){return _resetLockoutTimer.apply(this,arguments);}return resetLockoutTimer;}()},{key:\"renameUserAccount\",value:function(){var _renameUserAccount=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee19(oldName,newName){return _regeneratorRuntime.wrap(function _callee19$(_context19){while(1){switch(_context19.prev=_context19.next){case 0:return _context19.abrupt(\"return\",this.backgroundManager.renameUserAccount(oldName,newName));case 1:case\"end\":return _context19.stop();}}},_callee19,this);}));function renameUserAccount(_x15,_x16){return _renameUserAccount.apply(this,arguments);}return renameUserAccount;}()},{key:\"confirmPassword\",value:function(){var _confirmPassword=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee20(password){return _regeneratorRuntime.wrap(function _callee20$(_context20){while(1){switch(_context20.prev=_context20.next){case 0:return _context20.abrupt(\"return\",this.backgroundManager.confirmPassword(password));case 1:case\"end\":return _context20.stop();}}},_callee20,this);}));function confirmPassword(_x17){return _confirmPassword.apply(this,arguments);}return confirmPassword;}()},{key:\"confirmPasswordDisabled\",get:function get(){var disabled=!this.confirmPasswordForm.$.confirmPasswordField.$||!this.confirmPasswordForm.$.confirmPasswordField.hasBeenValidated||this.confirmPasswordForm.$.confirmPasswordField.hasBeenValidated&&this.confirmPasswordForm.$.confirmPasswordField.hasError;return disabled;}},{key:\"idleTimeoutMins\",get:function get(){return this.appState.idleTimeoutMins;}},{key:\"configureTimeout\",value:function(){var _configureTimeout=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee21(durationMins){return _regeneratorRuntime.wrap(function _callee21$(_context21){while(1){switch(_context21.prev=_context21.next){case 0:if(!(durationMins===this.idleTimeoutMins)){_context21.next=2;break;}return _context21.abrupt(\"return\");case 2:_context21.next=4;return this.backgroundManager.configureTimeout(durationMins);case 4:case\"end\":return _context21.stop();}}},_callee21,this);}));function configureTimeout(_x18){return _configureTimeout.apply(this,arguments);}return configureTimeout;}()}]);return AccountManager;}(),(_applyDecoratedDescriptor(_class.prototype,\"userAccounts\",[computed],Object.getOwnPropertyDescriptor(_class.prototype,\"userAccounts\"),_class.prototype),_applyDecoratedDescriptor(_class.prototype,\"isTimeToSecurityCheckup\",[computed],Object.getOwnPropertyDescriptor(_class.prototype,\"isTimeToSecurityCheckup\"),_class.prototype),_applyDecoratedDescriptor(_class.prototype,\"resetSecurityCheckup\",[action],Object.getOwnPropertyDescriptor(_class.prototype,\"resetSecurityCheckup\"),_class.prototype),_applyDecoratedDescriptor(_class.prototype,\"hasCreatedVault\",[computed],Object.getOwnPropertyDescriptor(_class.prototype,\"hasCreatedVault\"),_class.prototype),_applyDecoratedDescriptor(_class.prototype,\"resetVault\",[action],Object.getOwnPropertyDescriptor(_class.prototype,\"resetVault\"),_class.prototype),_applyDecoratedDescriptor(_class.prototype,\"isUnLocked\",[computed],Object.getOwnPropertyDescriptor(_class.prototype,\"isUnLocked\"),_class.prototype),_applyDecoratedDescriptor(_class.prototype,\"activeUserAccount\",[computed],Object.getOwnPropertyDescriptor(_class.prototype,\"activeUserAccount\"),_class.prototype),_applyDecoratedDescriptor(_class.prototype,\"remainingUnlockAttempts\",[computed],Object.getOwnPropertyDescriptor(_class.prototype,\"remainingUnlockAttempts\"),_class.prototype),_applyDecoratedDescriptor(_class.prototype,\"isLockedOut\",[computed],Object.getOwnPropertyDescriptor(_class.prototype,\"isLockedOut\"),_class.prototype),_applyDecoratedDescriptor(_class.prototype,\"resetLockout\",[action],Object.getOwnPropertyDescriptor(_class.prototype,\"resetLockout\"),_class.prototype),_applyDecoratedDescriptor(_class.prototype,\"startLockoutTimer\",[action],Object.getOwnPropertyDescriptor(_class.prototype,\"startLockoutTimer\"),_class.prototype),_applyDecoratedDescriptor(_class.prototype,\"lockoutTimerStarted\",[computed],Object.getOwnPropertyDescriptor(_class.prototype,\"lockoutTimerStarted\"),_class.prototype),_applyDecoratedDescriptor(_class.prototype,\"timerDuration\",[computed],Object.getOwnPropertyDescriptor(_class.prototype,\"timerDuration\"),_class.prototype),_applyDecoratedDescriptor(_class.prototype,\"remainingMins\",[computed],Object.getOwnPropertyDescriptor(_class.prototype,\"remainingMins\"),_class.prototype),_applyDecoratedDescriptor(_class.prototype,\"resetLockoutTimer\",[action],Object.getOwnPropertyDescriptor(_class.prototype,\"resetLockoutTimer\"),_class.prototype),_applyDecoratedDescriptor(_class.prototype,\"confirmPasswordDisabled\",[computed],Object.getOwnPropertyDescriptor(_class.prototype,\"confirmPasswordDisabled\"),_class.prototype),_applyDecoratedDescriptor(_class.prototype,\"idleTimeoutMins\",[computed],Object.getOwnPropertyDescriptor(_class.prototype,\"idleTimeoutMins\"),_class.prototype)),_class);export default AccountManager;","map":{"version":3,"sources":["/home/chef/Desktop/signer/src/popup/container/AccountManager.ts"],"names":["action","computed","FieldState","FormState","valueRequired","AccountManager","errors","backgroundManager","appState","confirmPasswordForm","confirmPasswordField","validators","password","withCapture","createNewVault","name","secretKeyBase64","algorithm","backedUp","importUserAccount","removeUserAccount","startIndex","endIndex","len","userAccounts","length","Error","removed","spliceWithArray","reorderAccount","accountName","switchToAccount","isTimeToSecurityCheckup","resetSecurityCheckup","alias","isBackedUp","downloadAccountKeys","getActiveUserAccount","userAccount","downloadPemFiles","getActivePublicKeyHex","getActiveAccountHash","getPublicKeyHexByAlias","getAccountHashByAlias","lock","unlock","hasCreatedVault","resetVault","isUnlocked","activeUserAccount","unlockAttempts","lockedOut","resetLockout","timeInMinutes","startLockoutTimer","lockoutTimerStarted","timerDurationMins","remainingMins","resetLockoutTimer","oldName","newName","renameUserAccount","confirmPassword","disabled","$","hasBeenValidated","hasError","idleTimeoutMins","durationMins","configureTimeout"],"mappings":"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","sourcesContent":["import { action, computed, IObservableArray } from 'mobx';\nimport { BackgroundManager } from '../BackgroundManager';\nimport ErrorContainer from './ErrorContainer';\nimport { AppState } from '../../lib/MemStore';\nimport { KeyPairWithAlias } from '../../@types/models';\nimport { FieldState, FormState } from 'formstate';\nimport { valueRequired } from '../../lib/FormValidator';\n\nclass AccountManager {\n  constructor(\n    private errors: ErrorContainer,\n    private backgroundManager: BackgroundManager,\n    private appState: AppState\n  ) {}\n\n  async createNewVault(password: string) {\n    await this.errors.withCapture(\n      this.backgroundManager.createNewVault(password)\n    );\n  }\n\n  async importUserAccount(\n    name: string,\n    secretKeyBase64: string,\n    algorithm: string,\n    backedUp: boolean\n  ) {\n    return this.backgroundManager.importUserAccount(\n      name,\n      secretKeyBase64,\n      algorithm,\n      backedUp\n    );\n  }\n\n  async removeUserAccount(name: string) {\n    return this.backgroundManager.removeUserAccount(name);\n  }\n\n  async reorderAccount(startIndex: number, endIndex: number) {\n    // the data flow is always from background to frontend.\n    // we need do reorder operations on both background and frontend side,\n    // so that UI won't get jitter\n    const len = this.appState.userAccounts.length;\n\n    if (\n      startIndex < 0 ||\n      endIndex < 0 ||\n      startIndex >= len ||\n      endIndex >= len\n    ) {\n      throw new Error('Invalid index number');\n    }\n    if (startIndex === endIndex) {\n      return;\n    }\n\n    const removed = this.appState.userAccounts.spliceWithArray(startIndex, 1);\n    this.appState.userAccounts.spliceWithArray(endIndex, 0, removed);\n    return this.backgroundManager.reorderAccount(startIndex, endIndex);\n  }\n\n  switchToAccount(accountName: string) {\n    return this.backgroundManager.switchToAccount(accountName);\n  }\n\n  @computed\n  get userAccounts(): IObservableArray<KeyPairWithAlias> {\n    return this.appState.userAccounts;\n  }\n\n  @computed\n  get isTimeToSecurityCheckup(): boolean {\n    return this.appState.isTimeToSecurityCheckup;\n  }\n\n  @action\n  async resetSecurityCheckup() {\n    return await this.backgroundManager.resetSecurityCheckup();\n  }\n\n  async isBackedUp(alias: string) {\n    return await this.backgroundManager.isBackedUp(alias);\n  }\n\n  async downloadPemFiles(alias: string) {\n    // Save the secret and public keys to disk.\n    this.backgroundManager.downloadAccountKeys(alias);\n  }\n\n  async downloadActiveKey() {\n    let userAccount = await this.backgroundManager.getActiveUserAccount();\n    // Save the secret and public keys to disk.\n    this.downloadPemFiles(userAccount.alias);\n  }\n\n  async getActivePublicKeyHex() {\n    return await this.backgroundManager.getActivePublicKeyHex();\n  }\n\n  async getActiveAccountHash() {\n    return await this.backgroundManager.getActiveAccountHash();\n  }\n\n  async getPublicKeyHexByAlias(alias: string) {\n    return await this.backgroundManager.getPublicKeyHexByAlias(alias);\n  }\n\n  async getAccountHashByAlias(alias: string) {\n    return await this.backgroundManager.getAccountHashByAlias(alias);\n  }\n\n  async lock() {\n    return this.backgroundManager.lock();\n  }\n\n  async unlock(password: string) {\n    return this.backgroundManager.unlock(password);\n  }\n\n  @computed\n  get hasCreatedVault(): boolean {\n    return this.appState.hasCreatedVault;\n  }\n\n  @action\n  async resetVault() {\n    return this.backgroundManager.resetVault();\n  }\n\n  @computed\n  get isUnLocked(): boolean {\n    return this.appState.isUnlocked;\n  }\n\n  @computed\n  get activeUserAccount() {\n    return this.appState.activeUserAccount;\n  }\n\n  @computed\n  get remainingUnlockAttempts() {\n    return this.appState.unlockAttempts;\n  }\n\n  @computed\n  get isLockedOut() {\n    return this.appState.lockedOut;\n  }\n\n  @action\n  async resetLockout() {\n    return this.backgroundManager.resetLockout();\n  }\n\n  @action\n  async startLockoutTimer(timeInMinutes: number) {\n    return this.backgroundManager.startLockoutTimer(timeInMinutes);\n  }\n\n  @computed\n  get lockoutTimerStarted() {\n    return this.appState.lockoutTimerStarted;\n  }\n\n  @computed\n  get timerDuration() {\n    return this.appState.timerDurationMins;\n  }\n\n  @computed\n  get remainingMins() {\n    return this.appState.remainingMins;\n  }\n\n  @action\n  async resetLockoutTimer() {\n    return this.backgroundManager.resetLockoutTimer();\n  }\n\n  async renameUserAccount(oldName: string, newName: string) {\n    return this.backgroundManager.renameUserAccount(oldName, newName);\n  }\n\n  async confirmPassword(password: string) {\n    return this.backgroundManager.confirmPassword(password);\n  }\n\n  confirmPasswordForm = new FormState({\n    confirmPasswordField: new FieldState<string>('').validators(valueRequired)\n  });\n\n  @computed\n  get confirmPasswordDisabled(): boolean {\n    let disabled =\n      !this.confirmPasswordForm.$.confirmPasswordField.$ ||\n      !this.confirmPasswordForm.$.confirmPasswordField.hasBeenValidated ||\n      (this.confirmPasswordForm.$.confirmPasswordField.hasBeenValidated &&\n        this.confirmPasswordForm.$.confirmPasswordField.hasError);\n    return disabled;\n  }\n\n  @computed\n  get idleTimeoutMins(): number {\n    return this.appState.idleTimeoutMins;\n  }\n\n  async configureTimeout(durationMins: number) {\n    if (durationMins === this.idleTimeoutMins) return;\n    await this.backgroundManager.configureTimeout(durationMins);\n  }\n}\n\nexport default AccountManager;\n"]},"metadata":{},"sourceType":"module"}