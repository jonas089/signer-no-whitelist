{"ast":null,"code":"import _applyDecoratedDescriptor from \"/home/chef/Desktop/signer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\n\nvar _class;\n\nimport { FieldState, FormState } from 'formstate';\nimport { strongPassword, valueRequired, valuesMatch } from '../../lib/FormValidator';\nimport { computed } from 'mobx';\nexport let HomeContainer = (_class = class HomeContainer {\n  constructor() {\n    this.homeForm = new FormState({\n      // The text field for storing user input password, used in 'Create Vault' and 'Unlock Vault' page.\n      setPasswordField: new FieldState('').validators(valueRequired, strongPassword),\n      confirmPasswordField: new FieldState('').validators(valueRequired),\n      unlockPasswordField: new FieldState('').validators(valueRequired)\n    }).compose().validators($ => valuesMatch($.setPasswordField.$, $.confirmPasswordField.$));\n  }\n\n  get unlockDisabled() {\n    return !this.homeForm.$.unlockPasswordField.hasBeenValidated || this.homeForm.$.unlockPasswordField.hasBeenValidated && this.homeForm.$.unlockPasswordField.hasError;\n  }\n\n  get createVaultDisabled() {\n    return !this.homeForm.$.setPasswordField.hasBeenValidated || this.homeForm.$.setPasswordField.hasBeenValidated && this.homeForm.$.setPasswordField.hasError || !this.homeForm.$.confirmPasswordField.hasBeenValidated || this.homeForm.$.confirmPasswordField.hasBeenValidated && this.homeForm.$.confirmPasswordField.hasError || !(this.homeForm.$.setPasswordField.value === this.homeForm.$.confirmPasswordField.value);\n  }\n\n}, (_applyDecoratedDescriptor(_class.prototype, \"unlockDisabled\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"unlockDisabled\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"createVaultDisabled\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"createVaultDisabled\"), _class.prototype)), _class);","map":{"version":3,"sources":["/home/chef/Desktop/signer/src/popup/container/HomeContainer.ts"],"names":["FieldState","FormState","strongPassword","valueRequired","valuesMatch","computed","HomeContainer","homeForm","setPasswordField","validators","confirmPasswordField","unlockPasswordField","compose","$","unlockDisabled","hasBeenValidated","hasError","createVaultDisabled","value"],"mappings":";;;;AAAA,SAASA,UAAT,EAAqBC,SAArB,QAAsC,WAAtC;AACA,SACEC,cADF,EAEEC,aAFF,EAGEC,WAHF,QAIO,yBAJP;AAKA,SAASC,QAAT,QAAyB,MAAzB;AAEA,WAAaC,aAAb,aAAO,MAAMA,aAAN,CAAoB;AAAA;AAAA,SACzBC,QADyB,GACd,IAAIN,SAAJ,CAAc;AACvB;AACAO,MAAAA,gBAAgB,EAAE,IAAIR,UAAJ,CAAuB,EAAvB,EAA2BS,UAA3B,CAChBN,aADgB,EAEhBD,cAFgB,CAFK;AAMvBQ,MAAAA,oBAAoB,EAAE,IAAIV,UAAJ,CAAuB,EAAvB,EAA2BS,UAA3B,CAAsCN,aAAtC,CANC;AAOvBQ,MAAAA,mBAAmB,EAAE,IAAIX,UAAJ,CAAuB,EAAvB,EAA2BS,UAA3B,CAAsCN,aAAtC;AAPE,KAAd,EASRS,OATQ,GAURH,UAVQ,CAUGI,CAAC,IACXT,WAAW,CAACS,CAAC,CAACL,gBAAF,CAAmBK,CAApB,EAAuBA,CAAC,CAACH,oBAAF,CAAuBG,CAA9C,CAXJ,CADc;AAAA;;AAgBP,MAAdC,cAAc,GAAY;AAC5B,WACE,CAAC,KAAKP,QAAL,CAAcM,CAAd,CAAgBF,mBAAhB,CAAoCI,gBAArC,IACC,KAAKR,QAAL,CAAcM,CAAd,CAAgBF,mBAAhB,CAAoCI,gBAApC,IACC,KAAKR,QAAL,CAAcM,CAAd,CAAgBF,mBAAhB,CAAoCK,QAHxC;AAKD;;AAGsB,MAAnBC,mBAAmB,GAAY;AACjC,WACE,CAAC,KAAKV,QAAL,CAAcM,CAAd,CAAgBL,gBAAhB,CAAiCO,gBAAlC,IACC,KAAKR,QAAL,CAAcM,CAAd,CAAgBL,gBAAhB,CAAiCO,gBAAjC,IACC,KAAKR,QAAL,CAAcM,CAAd,CAAgBL,gBAAhB,CAAiCQ,QAFnC,IAGA,CAAC,KAAKT,QAAL,CAAcM,CAAd,CAAgBH,oBAAhB,CAAqCK,gBAHtC,IAIC,KAAKR,QAAL,CAAcM,CAAd,CAAgBH,oBAAhB,CAAqCK,gBAArC,IACC,KAAKR,QAAL,CAAcM,CAAd,CAAgBH,oBAAhB,CAAqCM,QALvC,IAMA,EACE,KAAKT,QAAL,CAAcM,CAAd,CAAgBL,gBAAhB,CAAiCU,KAAjC,KACA,KAAKX,QAAL,CAAcM,CAAd,CAAgBH,oBAAhB,CAAqCQ,KAFvC,CAPF;AAYD;;AAtCwB,CAA3B,kEAeGb,QAfH,+JAwBGA,QAxBH","sourcesContent":["import { FieldState, FormState } from 'formstate';\nimport {\n  strongPassword,\n  valueRequired,\n  valuesMatch\n} from '../../lib/FormValidator';\nimport { computed } from 'mobx';\n\nexport class HomeContainer {\n  homeForm = new FormState({\n    // The text field for storing user input password, used in 'Create Vault' and 'Unlock Vault' page.\n    setPasswordField: new FieldState<string>('').validators(\n      valueRequired,\n      strongPassword\n    ),\n    confirmPasswordField: new FieldState<string>('').validators(valueRequired),\n    unlockPasswordField: new FieldState<string>('').validators(valueRequired)\n  })\n    .compose()\n    .validators($ =>\n      valuesMatch($.setPasswordField.$, $.confirmPasswordField.$)\n    );\n\n  @computed\n  get unlockDisabled(): boolean {\n    return (\n      !this.homeForm.$.unlockPasswordField.hasBeenValidated ||\n      (this.homeForm.$.unlockPasswordField.hasBeenValidated &&\n        this.homeForm.$.unlockPasswordField.hasError)\n    );\n  }\n\n  @computed\n  get createVaultDisabled(): boolean {\n    return (\n      !this.homeForm.$.setPasswordField.hasBeenValidated ||\n      (this.homeForm.$.setPasswordField.hasBeenValidated &&\n        this.homeForm.$.setPasswordField.hasError) ||\n      !this.homeForm.$.confirmPasswordField.hasBeenValidated ||\n      (this.homeForm.$.confirmPasswordField.hasBeenValidated &&\n        this.homeForm.$.confirmPasswordField.hasError) ||\n      !(\n        this.homeForm.$.setPasswordField.value ===\n        this.homeForm.$.confirmPasswordField.value\n      )\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}