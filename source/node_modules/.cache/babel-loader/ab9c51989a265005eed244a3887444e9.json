{"ast":null,"code":"import _get from\"/home/chef/Desktop/signer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get\";import _getPrototypeOf from\"/home/chef/Desktop/signer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/chef/Desktop/signer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/chef/Desktop/signer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import _initializerDefineProperty from\"/home/chef/Desktop/signer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";import _classCallCheck from\"/home/chef/Desktop/signer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/chef/Desktop/signer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _applyDecoratedDescriptor from\"/home/chef/Desktop/signer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";import _initializerWarningHelper from\"/home/chef/Desktop/signer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";var _class,_descriptor,_class3,_class5;import{FieldState}from'formstate';import{fieldSubmittable,valueRequired,isAlgorithm,humanReadable,minNameLength,uniqueAlias}from'../../lib/FormValidator';import{action,computed,observable}from'mobx';import{encodeBase64}from'tweetnacl-util';import{decodeBase16,Keys}from'casper-js-sdk';import ASN1 from'@lapo/asn1js';import Base64 from'@lapo/asn1js/base64';import Hex from'@lapo/asn1js/hex';export var ImportAccountFormData=(_class=/*#__PURE__*/function(){function ImportAccountFormData(errors){var _this=this;_classCallCheck(this,ImportAccountFormData);this.errors=errors;this.secretKeyBase64=new FieldState('').validators(valueRequired);this.algorithm=new FieldState('').validators(valueRequired,isAlgorithm);this.name=new FieldState('').validators(valueRequired,minNameLength,humanReadable);this.reHex=/^\\s*(?:[0-9A-Fa-f][0-9A-Fa-f]\\s*)+$/;_initializerDefineProperty(this,\"file\",_descriptor,this);this.handleFileSelect=function(e){if(_this.errors.lastError){_this.errors.dismissLast();}if(e.target.files){_this.file=e.target.files[0];var reader=new FileReader();reader.readAsText(_this.file);reader.onload=function(e){var fileContents=reader.result;var errorMsg=_this.checkFileContent(fileContents);if(errorMsg===null){var _this$file;var file=(_this$file=_this.file)===null||_this$file===void 0?void 0:_this$file.name.split('.');if(file===undefined){_this.errors.capture(Promise.reject(new Error('File undefined')));}else{// File is defined now check format by extension\nvar fileExt=file[1];if(fileExt!=='pem'&&fileExt!=='cer'){_this.errors.capture(Promise.reject(new Error(\"Invalid file format: .\".concat(fileExt,\". Please upload a .pem or .cer file.\"))));}else{try{_this.parseAlgorithm(fileContents);}catch(e){_this.errors.capture(Promise.reject(new Error('Failed to parse key')));}}}}else{_this.errors.capture(Promise.reject(new Error(errorMsg)));}};}};}_createClass(ImportAccountFormData,[{key:\"parseAlgorithm\",value:function parseAlgorithm(val){var decoded;try{var der=this.reHex.test(val)?Hex.decode(val):Base64.unarmor(val);decoded=ASN1.decode(der);// Get the algorithm\ntry{var ed25519=decoded.toPrettyString().includes('curveEd25519');var secp256k1=decoded.toPrettyString().includes('secp256k1');if(ed25519){this.algorithm.onChange('ed25519');var hexKey=decoded.toPrettyString().split('\\n')[4].split('|')[1];this.secretKeyBase64.onChange(encodeBase64(decodeBase16(hexKey)));}else if(secp256k1){this.algorithm.onChange('secp256k1');var _hexKey=decoded.toPrettyString().split('\\n')[2].split('|')[1];this.secretKeyBase64.onChange(encodeBase64(decodeBase16(_hexKey)));}else{this.errors.capture(Promise.reject('Could not parse algorithm from DER encoding'));}}catch(err){this.errors.capture(Promise.reject(err));}}catch(e){this.errors.capture(Promise.reject(e));}}},{key:\"checkFileContent\",value:function checkFileContent(fileContent){if(!fileContent){return'The content of imported file cannot be empty!';}if(fileContent.includes('PUBLIC KEY')){return'Not a secret key file!';}return null;}},{key:\"submitDisabled\",get:function get(){return!(fieldSubmittable(this.secretKeyBase64)&&fieldSubmittable(this.name)&&fieldSubmittable(this.algorithm));}},{key:\"resetFields\",value:function resetFields(){this.secretKeyBase64.reset();this.algorithm.reset();this.name.reset();}}]);return ImportAccountFormData;}(),(_descriptor=_applyDecoratedDescriptor(_class.prototype,\"file\",[observable],{configurable:true,enumerable:true,writable:true,initializer:function initializer(){return null;}}),_applyDecoratedDescriptor(_class.prototype,\"submitDisabled\",[computed],Object.getOwnPropertyDescriptor(_class.prototype,\"submitDisabled\"),_class.prototype),_applyDecoratedDescriptor(_class.prototype,\"resetFields\",[action],Object.getOwnPropertyDescriptor(_class.prototype,\"resetFields\"),_class.prototype)),_class);export var CreateAccountFormData=(_class3=/*#__PURE__*/function(_ImportAccountFormDat){_inherits(CreateAccountFormData,_ImportAccountFormDat);var _super=_createSuper(CreateAccountFormData);function CreateAccountFormData(errors){var _this2;_classCallCheck(this,CreateAccountFormData);_this2=_super.call(this,errors);_this2.publicKey=new FieldState('').validators(valueRequired);_this2.algorithm.onUpdate(function(fieldState){switch(fieldState.value){case'ed25519':{var ed25519KP=Keys.Ed25519.new();_this2.publicKey.onChange(ed25519KP.publicKey.toHex());_this2.secretKeyBase64.onChange(encodeBase64(ed25519KP.privateKey));break;}case'secp256k1':{var secp256k1KP=Keys.Secp256K1.new();_this2.publicKey.onChange(secp256k1KP.publicKey.toHex());_this2.secretKeyBase64.onChange(encodeBase64(secp256k1KP.privateKey));break;}default:throw new Error('Invalid algorithm');}});return _this2;}_createClass(CreateAccountFormData,[{key:\"submitDisabled\",get:function get(){return!(fieldSubmittable(this.secretKeyBase64)&&fieldSubmittable(this.name)&&fieldSubmittable(this.publicKey));}},{key:\"resetFields\",value:function resetFields(){_get(_getPrototypeOf(CreateAccountFormData.prototype),\"resetFields\",this).call(this);this.publicKey.reset();}}]);return CreateAccountFormData;}(ImportAccountFormData),(_applyDecoratedDescriptor(_class3.prototype,\"submitDisabled\",[computed],Object.getOwnPropertyDescriptor(_class3.prototype,\"submitDisabled\"),_class3.prototype),_applyDecoratedDescriptor(_class3.prototype,\"resetFields\",[action],Object.getOwnPropertyDescriptor(_class3.prototype,\"resetFields\"),_class3.prototype)),_class3);export var RenameAccountFormData=(_class5=/*#__PURE__*/function(){function RenameAccountFormData(accounts){var _this3=this;_classCallCheck(this,RenameAccountFormData);this.accounts=[];this.name=new FieldState('').validators(valueRequired,minNameLength,humanReadable,function(val){return uniqueAlias(val,_this3.accounts);});this.accounts=accounts;}_createClass(RenameAccountFormData,[{key:\"submitDisabled\",get:function get(){return!fieldSubmittable(this.name);}},{key:\"resetFields\",value:function resetFields(){this.name.reset();}}]);return RenameAccountFormData;}(),(_applyDecoratedDescriptor(_class5.prototype,\"submitDisabled\",[computed],Object.getOwnPropertyDescriptor(_class5.prototype,\"submitDisabled\"),_class5.prototype),_applyDecoratedDescriptor(_class5.prototype,\"resetFields\",[action],Object.getOwnPropertyDescriptor(_class5.prototype,\"resetFields\"),_class5.prototype)),_class5);","map":{"version":3,"sources":["/home/chef/Desktop/signer/src/popup/container/ImportAccountContainer.ts"],"names":["FieldState","fieldSubmittable","valueRequired","isAlgorithm","humanReadable","minNameLength","uniqueAlias","action","computed","observable","encodeBase64","decodeBase16","Keys","ASN1","Base64","Hex","ImportAccountFormData","errors","secretKeyBase64","validators","algorithm","name","reHex","handleFileSelect","e","lastError","dismissLast","target","files","file","reader","FileReader","readAsText","onload","fileContents","result","errorMsg","checkFileContent","split","undefined","capture","Promise","reject","Error","fileExt","parseAlgorithm","val","decoded","der","test","decode","unarmor","ed25519","toPrettyString","includes","secp256k1","onChange","hexKey","err","fileContent","reset","CreateAccountFormData","publicKey","onUpdate","fieldState","value","ed25519KP","Ed25519","new","toHex","privateKey","secp256k1KP","Secp256K1","RenameAccountFormData","accounts"],"mappings":"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","sourcesContent":["import { FieldState } from 'formstate';\nimport {\n  fieldSubmittable,\n  valueRequired,\n  isAlgorithm,\n  humanReadable,\n  minNameLength,\n  uniqueAlias\n} from '../../lib/FormValidator';\nimport { action, computed, observable } from 'mobx';\nimport { encodeBase64 } from 'tweetnacl-util';\nimport ErrorContainer from './ErrorContainer';\nimport { decodeBase16, Keys } from 'casper-js-sdk';\nimport ASN1 from '@lapo/asn1js';\nimport Base64 from '@lapo/asn1js/base64';\nimport Hex from '@lapo/asn1js/hex';\n\nexport interface SubmittableFormData {\n  submitDisabled: boolean;\n  resetFields: () => void;\n}\n\nexport class ImportAccountFormData implements SubmittableFormData {\n  secretKeyBase64: FieldState<string> = new FieldState<string>('').validators(\n    valueRequired\n  );\n  algorithm: FieldState<string> = new FieldState<string>('').validators(\n    valueRequired,\n    isAlgorithm\n  );\n  name: FieldState<string> = new FieldState<string>('').validators(\n    valueRequired,\n    minNameLength,\n    humanReadable\n  );\n  reHex = /^\\s*(?:[0-9A-Fa-f][0-9A-Fa-f]\\s*)+$/;\n  @observable file: File | null = null;\n\n  private parseAlgorithm(val: any) {\n    let decoded;\n    try {\n      const der: Uint8Array = this.reHex.test(val)\n        ? Hex.decode(val)\n        : Base64.unarmor(val);\n      decoded = ASN1.decode(der);\n\n      // Get the algorithm\n      try {\n        let ed25519: boolean = decoded\n          .toPrettyString()\n          .includes('curveEd25519');\n        let secp256k1: boolean = decoded.toPrettyString().includes('secp256k1');\n        if (ed25519) {\n          this.algorithm.onChange('ed25519');\n          let hexKey = decoded.toPrettyString().split('\\n')[4].split('|')[1];\n          this.secretKeyBase64.onChange(encodeBase64(decodeBase16(hexKey)));\n        } else if (secp256k1) {\n          this.algorithm.onChange('secp256k1');\n          let hexKey = decoded.toPrettyString().split('\\n')[2].split('|')[1];\n          this.secretKeyBase64.onChange(encodeBase64(decodeBase16(hexKey)));\n        } else {\n          this.errors.capture(\n            Promise.reject('Could not parse algorithm from DER encoding')\n          );\n        }\n      } catch (err) {\n        this.errors.capture(Promise.reject(err));\n      }\n    } catch (e) {\n      this.errors.capture(Promise.reject(e));\n    }\n  }\n\n  private checkFileContent(fileContent: string) {\n    if (!fileContent) {\n      return 'The content of imported file cannot be empty!';\n    }\n    if (fileContent.includes('PUBLIC KEY')) {\n      return 'Not a secret key file!';\n    }\n    return null;\n  }\n\n  constructor(private errors: ErrorContainer) {}\n\n  handleFileSelect = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (this.errors.lastError) {\n      this.errors.dismissLast();\n    }\n    if (e.target.files) {\n      this.file = e.target.files[0];\n      const reader = new FileReader();\n      reader.readAsText(this.file);\n      reader.onload = e => {\n        const fileContents = reader.result as string;\n        const errorMsg = this.checkFileContent(fileContents);\n        if (errorMsg === null) {\n          const file = this.file?.name!.split('.');\n          if (file === undefined) {\n            this.errors.capture(Promise.reject(new Error('File undefined')));\n          } else {\n            // File is defined now check format by extension\n            const fileExt = file[1];\n            if (fileExt !== 'pem' && fileExt !== 'cer') {\n              this.errors.capture(\n                Promise.reject(\n                  new Error(\n                    `Invalid file format: .${fileExt}. Please upload a .pem or .cer file.`\n                  )\n                )\n              );\n            } else {\n              try {\n                this.parseAlgorithm(fileContents);\n              } catch (e) {\n                this.errors.capture(\n                  Promise.reject(new Error('Failed to parse key'))\n                );\n              }\n            }\n          }\n        } else {\n          this.errors.capture(Promise.reject(new Error(errorMsg)));\n        }\n      };\n    }\n  };\n\n  @computed\n  get submitDisabled(): boolean {\n    return !(\n      fieldSubmittable(this.secretKeyBase64) &&\n      fieldSubmittable(this.name) &&\n      fieldSubmittable(this.algorithm)\n    );\n  }\n\n  @action\n  resetFields() {\n    this.secretKeyBase64.reset();\n    this.algorithm.reset();\n    this.name.reset();\n  }\n}\n\nexport class CreateAccountFormData extends ImportAccountFormData {\n  publicKey: FieldState<string> = new FieldState<string>('').validators(\n    valueRequired\n  );\n\n  constructor(errors: ErrorContainer) {\n    super(errors);\n    this.algorithm.onUpdate(fieldState => {\n      switch (fieldState.value) {\n        case 'ed25519': {\n          let ed25519KP = Keys.Ed25519.new();\n          this.publicKey.onChange(ed25519KP.publicKey.toHex());\n          this.secretKeyBase64.onChange(encodeBase64(ed25519KP.privateKey));\n          break;\n        }\n        case 'secp256k1': {\n          let secp256k1KP = Keys.Secp256K1.new();\n          this.publicKey.onChange(secp256k1KP.publicKey.toHex());\n          this.secretKeyBase64.onChange(encodeBase64(secp256k1KP.privateKey));\n          break;\n        }\n        default:\n          throw new Error('Invalid algorithm');\n      }\n    });\n  }\n\n  @computed\n  get submitDisabled(): boolean {\n    return !(\n      fieldSubmittable(this.secretKeyBase64) &&\n      fieldSubmittable(this.name) &&\n      fieldSubmittable(this.publicKey)\n    );\n  }\n\n  @action\n  resetFields() {\n    super.resetFields();\n    this.publicKey.reset();\n  }\n}\n\nexport class RenameAccountFormData implements SubmittableFormData {\n  private accounts: string[] = [];\n  constructor(accounts: string[]) {\n    this.accounts = accounts;\n  }\n\n  name: FieldState<string> = new FieldState<string>('').validators(\n    valueRequired,\n    minNameLength,\n    humanReadable,\n    val => uniqueAlias(val, this.accounts)\n  );\n\n  @computed\n  get submitDisabled(): boolean {\n    return !fieldSubmittable(this.name);\n  }\n\n  @action\n  resetFields() {\n    this.name.reset();\n  }\n}\n"]},"metadata":{},"sourceType":"module"}