{"ast":null,"code":"var _jsxFileName = \"/home/chef/Desktop/signer/src/popup/components/MainAppBar.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport MoreMenu from './Menu';\nimport HomeIcon from '@material-ui/icons/Home';\nimport { observer } from 'mobx-react';\nimport { AppBar, Toolbar, IconButton, Button, Tooltip } from '@material-ui/core';\nimport confirmConnect from './ConfirmConnect';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    width: '100vw',\n    flexGrow: 1,\n    color: '#c4c4c4',\n    backgroundColor: 'var(--cspr-dark-blue)'\n  },\n  toolbarMargin: {\n    minHeight: '40px'\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  toggleWrapper: {\n    flexGrow: 1,\n    textAlign: 'center'\n  },\n  toggleButton: {\n    width: '100%',\n    height: '2rem'\n  }\n}));\nexport const MainAppBar = observer(_c = _s(props => {\n  _s();\n\n  const classes = useStyles();\n  const {\n    currentTab,\n    connectedSites\n  } = props.connectionContainer;\n  const connected = currentTab && connectedSites.some(site => site.url === currentTab.url && site.isConnected);\n\n  if (props.accountManager.hasCreatedVault && props.accountManager.isUnLocked) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(AppBar, {\n        position: \"static\",\n        className: classes.root,\n        color: 'transparent',\n        children: /*#__PURE__*/_jsxDEV(Toolbar, {\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            edge: \"start\",\n            component: Link,\n            to: '/',\n            children: /*#__PURE__*/_jsxDEV(HomeIcon, {\n              style: {\n                color: '#C4C4C4'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: props.connectionContainer.integratedSite ? props.accountManager.userAccounts.length ? 'Toggle Connection to Site' : 'Add an Account to Connect' : 'This site is not integrated with Signer',\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: classes.toggleWrapper,\n              children: /*#__PURE__*/_jsxDEV(Button // Toggles connection status\n              , {\n                className: classes.toggleButton,\n                disabled: !props.connectionContainer.integratedSite || !props.accountManager.userAccounts.length,\n                variant: \"outlined\",\n                color: connected ? 'primary' : 'default',\n                size: \"large\",\n                onClick: () => {\n                  if (connected) {\n                    props.connectionContainer.disconnectFromSite();\n                  } else {\n                    confirmConnect().then(() => {\n                      props.connectionContainer.connectToSite();\n                    });\n                  }\n                },\n                style: {\n                  color: 'var(--cspr-dark-blue)',\n                  backgroundColor: '#fff'\n                },\n                children: connected ? 'Connected' : 'Disconnected'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MoreMenu, {\n            accountManager: props.accountManager\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.toolbarMargin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.toolbarMargin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 12\n    }, this);\n  }\n}, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n}));\n_c2 = MainAppBar;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MainAppBar$observer\");\n$RefreshReg$(_c2, \"MainAppBar\");","map":{"version":3,"sources":["/home/chef/Desktop/signer/src/popup/components/MainAppBar.tsx"],"names":["React","Link","createStyles","makeStyles","MoreMenu","HomeIcon","observer","AppBar","Toolbar","IconButton","Button","Tooltip","confirmConnect","useStyles","theme","root","width","flexGrow","color","backgroundColor","toolbarMargin","minHeight","menuButton","marginRight","spacing","toggleWrapper","textAlign","toggleButton","height","MainAppBar","props","classes","currentTab","connectedSites","connectionContainer","connected","some","site","url","isConnected","accountManager","hasCreatedVault","isUnLocked","integratedSite","userAccounts","length","disconnectFromSite","then","connectToSite"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport MoreMenu from './Menu';\nimport HomeIcon from '@material-ui/icons/Home';\nimport AccountManager from '../container/AccountManager';\nimport ConnectSignerContainer from '../container/ConnectSignerContainer';\nimport { observer } from 'mobx-react';\nimport {\n  AppBar,\n  Toolbar,\n  IconButton,\n  Button,\n  Tooltip\n} from '@material-ui/core';\nimport confirmConnect from './ConfirmConnect';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100vw',\n      flexGrow: 1,\n      color: '#c4c4c4',\n      backgroundColor: 'var(--cspr-dark-blue)'\n    },\n    toolbarMargin: {\n      minHeight: '40px'\n    },\n    menuButton: {\n      marginRight: theme.spacing(2)\n    },\n    toggleWrapper: {\n      flexGrow: 1,\n      textAlign: 'center'\n    },\n    toggleButton: {\n      width: '100%',\n      height: '2rem'\n    }\n  })\n);\n\ninterface Props {\n  accountManager: AccountManager;\n  connectionContainer: ConnectSignerContainer;\n}\n\nexport const MainAppBar = observer((props: Props) => {\n  const classes = useStyles();\n  const { currentTab, connectedSites } = props.connectionContainer;\n  const connected =\n    currentTab &&\n    connectedSites.some(\n      site => site.url === currentTab.url && site.isConnected\n    );\n  if (props.accountManager.hasCreatedVault && props.accountManager.isUnLocked) {\n    return (\n      <>\n        <AppBar\n          position=\"static\"\n          className={classes.root}\n          color={'transparent'}\n        >\n          <Toolbar>\n            <IconButton edge=\"start\" component={Link} to={'/'}>\n              <HomeIcon style={{ color: '#C4C4C4' }} />\n            </IconButton>\n            <Tooltip\n              title={\n                props.connectionContainer.integratedSite\n                  ? props.accountManager.userAccounts.length\n                    ? 'Toggle Connection to Site'\n                    : 'Add an Account to Connect'\n                  : 'This site is not integrated with Signer'\n              }\n            >\n              <span className={classes.toggleWrapper}>\n                <Button\n                  // Toggles connection status\n                  className={classes.toggleButton}\n                  disabled={\n                    !props.connectionContainer.integratedSite ||\n                    !props.accountManager.userAccounts.length\n                  }\n                  variant=\"outlined\"\n                  color={connected ? 'primary' : 'default'}\n                  size=\"large\"\n                  onClick={() => {\n                    if (connected) {\n                      props.connectionContainer.disconnectFromSite();\n                    } else {\n                      confirmConnect().then(() => {\n                        props.connectionContainer.connectToSite();\n                      });\n                    }\n                  }}\n                  style={{\n                    color: 'var(--cspr-dark-blue)',\n                    backgroundColor: '#fff'\n                  }}\n                >\n                  {connected ? 'Connected' : 'Disconnected'}\n                </Button>\n              </span>\n            </Tooltip>\n            <MoreMenu accountManager={props.accountManager} />\n          </Toolbar>\n        </AppBar>\n        <div className={classes.toolbarMargin}></div>\n      </>\n    );\n  } else {\n    return <div className={classes.toolbarMargin}></div>;\n  }\n});\n"]},"metadata":{},"sourceType":"module"}